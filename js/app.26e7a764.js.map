{"version":3,"file":"js/app.26e7a764.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CameraService.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/LanguageSyntaxHelpControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/DOM/FileStorage/FileStorage.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/lib/DOM/EventWaiter.ts","webpack://befunge/./src/lib/DOM/FileStorage/DOMEmulatedFileStorage.ts","webpack://befunge/./src/lib/DOM/FileStorage/FilePickerApiFileStorage.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    startX: number;\n    startY: number;\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype OnPanFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private pan: OnPanFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.pan({\n            startX: this.touchPrev.x * window.devicePixelRatio,\n            startY: this.touchPrev.y * window.devicePixelRatio,\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnPan(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnPan({\n                startX: e.offsetX * window.devicePixelRatio,\n                startY: e.offsetY * window.devicePixelRatio,\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnPan(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory'),\n    FileStorage: Symbol('File storage')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) {\n        this.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n    }\n\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport interface ArrayLikeMut<T> {\n    readonly length: number;\n    [n: number]: T;\n}\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n\n    static Copy<T>(dest: ArrayLikeMut<T>, destStart: number, src: ArrayLikeMut<T>, srcStart: number, length: number): void {\n        for (let n = 0; n < length; ++n) {\n            dest[destStart + n] = src[srcStart + n];\n        }\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { ArrayHelper } from '../ArrayHelper';\nimport { NotNull } from '../NotNull';\nimport { ArrayItemType } from '../TypeUtil';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ntype FloatTypes = typeof WebGL2RenderingContext.HALF_FLOAT | typeof WebGL2RenderingContext.FLOAT;\ntype IntegerTypes = ArrayItemType<PrimitivesRenderer['IntegerTypes']>\n\ninterface FloatAttributeDescription {\n  name: string;\n  size: GLint;\n  type: FloatTypes;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr;\n}\n\ninterface IntegerAttributeDescription {\n  name: string;\n  size: GLint;\n  type: IntegerTypes;\n  stride: GLsizei;\n  offset: GLintptr;\n}\n\ntype AttributeDescription = FloatAttributeDescription | IntegerAttributeDescription;\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected vertexData = new ArrayBuffer(0);\n\n  //private componentsPerAttributeSet = 0;\n  /**\n   * Size of one vertex attributes in bytes\n   */\n  private stride = 0;\n  /**\n   * Count of primitive values per vertex\n   */\n  private componentsPerVertex = 0;\n  /**\n   * The total count of vertex stored in vertexData\n   */\n  private vertexCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() private attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attributes: number[]): void {\n    this.vertexCount = attributes.length / this.componentsPerVertex;\n    this.vertexData = new ArrayBuffer(this.stride * this.vertexCount);\n\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (let attrDescIdx = 0, offset = 0, byteOffset = 0;\n        attrDescIdx < this.attributes.length;\n        offset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.vertexData,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  /**\n   * Update attributes for specific primitive. \n   * @param attributes Attributes that will be uploaded\n   * @param offset Starting index of primitive attributes. Measured in number of attributes\n   */\n  public UpdatePrimitiveComponents(attributes: number[], offset: number): void {\n    const vertexDataOffsetStart = offset / this.componentsPerVertex * this.stride;\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (\n        let attrDescIdx = 0, byteOffset = vertexDataOffsetStart, attributeOffset = 0;\n        attrDescIdx < this.attributes.length;\n        attributeOffset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    const modifiedData = new Uint8Array(this.vertexData, vertexDataOffsetStart, attributes.length / this.componentsPerVertex * this.stride);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      vertexDataOffsetStart,\n      modifiedData,\n      0,\n      modifiedData.length);\n  }\n\n  /**\n   * Extract primitive attributes\n   * @param index primitive index\n   * @returns primitive components\n   */\n  PrimitiveComponents(index: number): number[] {\n    return this.PrimitiveComponentsRange(index, 1);\n  }\n\n  /**\n   * Extract attributes for 1 or more consequenced primitives\n   * @param primitiveStartIdx index of a first primitive\n   * @param primitivesCount number of primitives whose attributes will be retrieved\n   * @returns primitives components\n   */\n  PrimitiveComponentsRange(primitiveStartIdx: number, primitivesCount: number): number[] {\n    const attributes = new Array<number>(this.ComponentsPerPrimitive * primitivesCount).fill(0);\n\n    for (let vertexIdx = 0, attrIdx = 0; vertexIdx < this.primitiveDescription.indicesPerPrimitive * primitivesCount; ++vertexIdx) {\n      let byteOffset = (primitiveStartIdx * this.primitiveDescription.indicesPerPrimitive + vertexIdx) * this.stride;\n\n      for (const attrInfo of this.attributes) {\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const src = new Float32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const src = new Uint32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n\n        byteOffset += TypeSizeResolver.Resolve(attrInfo.type) * attrInfo.size;\n        attrIdx += attrInfo.size;\n      }\n    }\n\n    return attributes;\n  }\n\n  /**\n   * Returns the total count of primitives\n   */\n  get TotalPrimitives(): number {\n    return this.vertexCount / this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  /**\n   * Returns the count of components per primitive\n   */\n  get ComponentsPerPrimitive(): number {\n    return this.componentsPerVertex * this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.vertexCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    [this.componentsPerVertex, this.stride] = attributes.reduce(\n      (acc, attr) => [acc[0] + attr.size, acc[1] + attr.size * TypeSizeResolver.Resolve(attr.type)],\n      [0, 0]);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset += attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n\n      if (this.IsIntegerAttributesType(attr)) {\n        this.gl.vertexAttribIPointer(\n          location,\n          attr.size,\n          attr.type,\n          this.stride,\n          offset);\n      } else {\n        this.gl.vertexAttribPointer(\n          location,\n          attr.size,\n          attr.type,\n          attr.normalized,\n          this.stride,\n          offset);\n      }\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n\n  private IsIntegerAttributesType(attributes: AttributeDescription): attributes is IntegerAttributeDescription {\n    return (this.IntegerTypes as number[]).includes(attributes.type);\n  }\n\n  private get IntegerTypes() {\n    return [this.gl.BYTE, this.gl.UNSIGNED_BYTE,\n    this.gl.SHORT, this.gl.UNSIGNED_SHORT,\n    this.gl.INT, this.gl.UNSIGNED_INT];\n  }\n}\n","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n        const cellIdx = row * this.settings.MemoryLimit.Width + column;\n        const cellAttrs = this.PrimitiveComponents(cellIdx);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVStartOffset = 5;\n\n        // Left bottom\n        cellAttrs[UVStartOffset] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        this.UpdatePrimitiveComponents(cellAttrs, cellIdx * this.ComponentsPerPrimitive);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveComponents(selectionIdx);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = colorOffset + n * componentsPerVertex;\n\n                attrs[colorStart] = color[0];\n                attrs[colorStart + 1] = color[1];\n                attrs[colorStart + 2] = color[2];\n            }\n\n            this.UpdatePrimitiveComponents(attrs, selectionIdx * componentsPerVertex * SelectionRenderer.IndicesPerPrimitive)\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const attributes = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([\n                ...this.PrimitiveComponentsRange(0, this.TotalPrimitives),\n                ...attributes\n            ]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attributes = this.PrimitiveComponentsRange(0, this.TotalPrimitives);\n        attributes.splice(selectionIdx * this.ComponentsPerPrimitive, this.ComponentsPerPrimitive);\n\n        this.UploadAttributes(attributes);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    static ShortestMoveForIntersection(movable: Rectangle, destination: Rectangle): Vec2 {\n        const leftToRight = destination.rt.x - movable.lb.x;\n        const rightToLeft = destination.lb.x - movable.rt.x;\n\n        const bottomToTop = destination.rt.y - movable.lb.y;\n        const topToBottom = destination.lb.y - movable.rt.y;\n\n        const intersectByX = !(leftToRight < 0 || rightToLeft > 0);\n        const intersectByY = !(bottomToTop < 0 || topToBottom > 0);\n\n        if (intersectByX && intersectByY) {\n            return { x: 0, y: 0 };\n        }\n\n        const x = leftToRight < 0 ?\n            leftToRight :\n            rightToLeft > 0 ?\n                rightToLeft :\n                0;\n\n        const y = bottomToTop < 0 ?\n            bottomToTop :\n            topToBottom > 0 ?\n                topToBottom :\n                0;\n\n\n        return { x, y };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { CodeEditorRenderer } from \"./CodeEditor/CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Transformation } from \"@/lib/math/Transformation\";\nimport { Vec3 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\n\n@injectable()\nexport class CameraService {\n    private camera: mat4 = mat4.create();\n    private projection: mat4 = mat4.create();\n    private viewProjection: mat4 = mat4.create();\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer) {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    MoveTo(position: Partial<Vec3>): void {\n        position.x !== undefined && (this.camera[12] = position.x);\n        position.y !== undefined && (this.camera[13] = position.y);\n        position.z !== undefined && (this.camera[14] = position.z);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    Translate(delta: Partial<Vec3>): void {\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                delta.x ?? 0,\n                delta.y ?? 0,\n                delta.z ?? 0\n            ]);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    get Position(): Vec3 {\n        return {\n            x: this.camera[12],\n            y: this.camera[13],\n            z: this.camera[14]\n        };\n    }\n\n    get ViewProjection(): mat4 {\n        return this.viewProjection;\n    }\n\n    Resize(): void {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    private UpdateProjection(): void {\n        mat4.perspective(\n            this.projection,\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private UpdateViewProjection(): void {\n        const view = mat4.invert(mat4.create(), this.camera);\n        mat4.mul(this.viewProjection, this.projection, view);\n    }\n\n    private MaintainCodeEditorVisible(): void {\n        const cellSize = this.codeEditorRenderer.CellSize;\n        const lbNDC = vec3.transformMat4(vec3.create(), [cellSize, cellSize, 0], this.viewProjection);\n        const rtNDC = vec3.transformMat4(\n            vec3.create(),\n            [\n                (this.settings.MemoryLimit.Width - 1) * cellSize,\n                (this.settings.MemoryLimit.Height - 1) * cellSize,\n                0\n            ],\n            this.viewProjection);\n\n        const ndcCompensation = Transformation.ShortestMoveForIntersection(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        if (ndcCompensation.x === 0 && ndcCompensation.y === 0) {\n            return;\n        }\n\n        const screenCompensation = {\n            x: ndcCompensation.x * this.settings.ViewDimension.Width / 2,\n            y: ndcCompensation.y * this.settings.ViewDimension.Height / 2\n        };\n\n        const worldCompensation = Camera.UnprojectMovement(\n            { x: screenCompensation.x, y: -screenCompensation.y },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            {\n                width: this.settings.ViewDimension.Width,\n                height: this.settings.ViewDimension.Height\n            });\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                worldCompensation.x,\n                worldCompensation.y,\n                0\n            ]);\n\n        this.UpdateViewProjection();\n    }\n}\n\nInversify.bind(CameraService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, QuestionMark, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.QuestionMark,\n                filename: 'ui_icons/question_mark.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const alertIconComponents = new Array(this.renderer.alertIcon.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const panelComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        panelAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        panelComponents,\n                        0,\n                        panelComponents.length);\n\n\n                    const alertIconComponents = this.renderer.alertIcon.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        alertIconComponents,\n                        n * this.renderer.alertIcon.ComponentsPerPrimitive,\n                        alertIconComponents,\n                        0,\n                        alertIconComponents.length);\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n                this.renderer.alertIcon.UploadAttributes(alertIconComponents);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const panelComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < panelComponents.length ? panelComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n\n                const alertIconsComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.ComponentsPerPrimitive },\n                    (_, n) => n < alertIconsComponents.length ? alertIconsComponents[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.alertIcon.ComponentsPerPrimitive).fill(0);\n\n            this.alertIcon.UpdatePrimitiveComponents(\n                emptyAttrs,\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        } else {\n            this.alertIcon.UpdatePrimitiveComponents(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { SymbolStyle } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { ContainerStyle, UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            parent);\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.textList.StyleRange(begin, end, style);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return this.textList.ContainerStyle;\n    }\n\n    set ContainerStyle(style: ContainerStyle) {\n        this.textList.ContainerStyle = style;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    ScrollAligned(offset: number): void {\n        this.textList.ScrollAligned(offset);\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\nimport { ContainerStyle } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: 24, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: renderer.outline.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.outline.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const buttonComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        buttonComponents,\n                        0,\n                        buttonComponents.length);\n\n                    const buttonOutlineComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonAttrs,\n                        n * this.renderer.outline.ComponentsPerPrimitive,\n                        buttonOutlineComponents,\n                        0,\n                        buttonOutlineComponents.length);\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const buttonComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < buttonComponents.length ? buttonComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const buttonOutlineComponents = this.renderer.outline.PrimitiveComponentsRange(0, this.renderer.outline.TotalPrimitives);\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.outline.ComponentsPerPrimitive },\n                    (_, n) => n < buttonOutlineComponents.length ? buttonOutlineComponents[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            new Array(this.outline.ComponentsPerPrimitive).fill(0),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdatePrimitiveComponents(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const components = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        labelAttrs,\n                        n * this.renderer.AttributesPerComponent,\n                        components,\n                        0,\n                        components.length);\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const components = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < components.length ? components[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: component.AbsolutePosition.y - minBaseOffset\n        };\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdatePrimitiveComponents(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { ContainerStyle, UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private containerStyle: ContainerStyle,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.ContainerStyle.borderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.ContainerStyle.borderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return {\n            borderWidth: this.containerStyle.borderWidth * this.Scale,\n            fillColor: this.containerStyle.fillColor\n        };\n    }\n\n    set BorderWidth(style: ContainerStyle) {\n        this.containerStyle.borderWidth = style.borderWidth;\n        this.containerStyle.fillColor = style.fillColor;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Destroy();\n            this.scrollControls.scrollBottomButton.Destroy();\n            this.scrollControls = null;\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.containerStyle.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.containerStyle.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.ContainerStyle.borderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.containerStyle.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    ScrollAligned(offset: number): void {\n        if (!this.IsContentOverflow) {\n            return;\n        }\n\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { ContainerStyle, UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y, Z, Fr, Fg, Fb };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fill_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.ComponentsPerPrimitive);\n\n                this.renderer.borderRenderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.borderRenderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.borderRenderer.ComponentsPerPrimitive);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const stencilComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        scencilRectAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        stencilComponents,\n                        0,\n                        stencilComponents.length);\n\n                    const borderComponents = this.renderer.borderRenderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        borderAttrs,\n                        n * this.renderer.borderRenderer.ComponentsPerPrimitive,\n                        borderComponents,\n                        0,\n                        borderComponents.length);\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const stencilComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < stencilComponents.length ? stencilComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const borderComponents = this.renderer.borderRenderer.PrimitiveComponentsRange(0, this.renderer.borderRenderer.TotalPrimitives);\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.ComponentsPerPrimitive },\n                    (_, n) => n < borderComponents.length ? borderComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            containerStyle,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.ContainerStyle.borderWidth,\n                    y: component.AbsolutePosition.y + component.ContainerStyle.borderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.ContainerStyle.borderWidth,\n                    height: component.Dimension.height - 2 * component.ContainerStyle.borderWidth\n                },\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded + 0.1],\n                    component.ContainerStyle.fillColor\n                ]);\n        } else {\n            attrs = new Array(this.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.UpdatePrimitiveComponents(attrs, component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.ContainerStyle.borderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.borderRenderer.UpdatePrimitiveComponents(attrs, component.Offset * this.borderRenderer.ComponentsPerPrimitive);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 v_fill_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = v_fill_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec4 a_fill_color;\\n\\nout vec4 v_fill_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n  v_fill_color = a_fill_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { ContainerStyle, UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UITextListDescriptor<TRenderer, TComponent extends UITextList> {\n    renderer: TRenderer;\n    component: TComponent;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextLists: UITextListDescriptor<UITextListRenderer, UITextList>[] = [];\n\n    private uiEditableTextLists: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        const descriptor = { renderer } as UITextListDescriptor<UITextListRenderer, UITextList>;\n\n        const textList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = textList;\n\n        this.uiTextLists.push(descriptor);\n\n        return textList;\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor = { renderer } as UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchTextList(this.uiEditableTextLists, e.offsetX, e.offsetY) ?? false);\n    }\n\n    FindTextList(x: number, y: number): UITextList | null {\n        const textList = this.TouchTextList(this.uiTextLists, x, y);\n        const editableTextList = this.TouchTextList(this.uiEditableTextLists, x, y);\n\n        if (textList === null) {\n            return editableTextList;\n        }\n\n        if (editableTextList === null) {\n            return textList;\n        }\n\n        return textList.ZIndex > editableTextList.ZIndex ?\n            textList :\n            editableTextList;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchTextList<TRenderer, TComponent extends UITextList>(components: UITextListDescriptor<TRenderer, TComponent>[], x: number, y: number): TComponent | null {\n        const intersected = components\n            .filter(desc => desc.component.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.component.AbsolutePosition.x,\n                    y: desc.component.AbsolutePosition.y,\n                    width: desc.component.Dimension.width,\n                    height: desc.component.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UITextListDescriptor<TRenderer, TComponent>, b: UITextListDescriptor<TRenderer, TComponent>) => a.component.ZIndex < b.component.ZIndex)\n            .component;\n    }\n\n    private UIObservableTextListDeleter(descriptor: UITextListDescriptor<UITextListRenderer, UITextList>): void {\n        this.uiTextLists.splice(this.uiTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextLists.forEach(x => x.renderer.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextLists.forEach(x => x.renderer.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n\n    private helpButton: UIIconButton;\n    private helpShowed = false;\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private showHelpObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const helpButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.helpButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.QuestionMark, color: helpButtonIconColor },\n            _sender => this.ToggleHelpButton(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    private ToggleHelpButton(): void {\n        this.helpButton.Style = {\n            ...this.helpButton.Style,\n            outlineColor: this.helpShowed ? FileControls.DefaultButtonOutlineColor : FileControls.ToggleButtonOutlineColor\n        };\n\n        this.helpShowed = !this.helpShowed;\n\n        this.showHelpObservable.Notify()\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get ShowHelpObservable(): Observable<void> {\n        return this.showHelpObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\ninterface AutoWordWrapResult {\n    text: string;\n    instructionRange: [number, number][];\n}\n\ninterface InstructionDescription {\n    instruction: string;\n    description: string;\n}\n\n@injectable()\nexport class LanguageSyntaxHelpControls {\n    private group: UIObservablePositioningGroup;\n    private display: UITextList | null = null;\n    private lineHeight = 16;\n    private maxWidth = 1024;\n    private defaultTextColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private instructions: InstructionDescription[];\n    private helpString!: string;\n    private instructionPaddingEnd!: number;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n\n        this.instructions = [\n            { instruction: '0-9', description: 'Push this number onto the stack.' },\n            { instruction: '+', description: 'Addition: Pop a and b, then push a+b.' },\n            { instruction: '-', description: 'Subtraction: Pop a and b, then push b-a.' },\n            { instruction: '*', description: 'Multiplication: Pop a and b, then push a*b.' },\n            { instruction: '/', description: 'Integer division: Pop a and b, then push b/a, rounded towards 0.' },\n            { instruction: '%', description: 'Modulo: Pop a and b, then push the remainder of the integer division of b/a.' },\n            { instruction: '!', description: 'Logical NOT: Pop a value. If the value is zero, push 1; otherwise, push zero.' },\n            { instruction: '`', description: 'Greater than: Pop a and b, then push 1 if b>a, otherwise zero.' },\n            { instruction: '>', description: 'Start moving right.' },\n            { instruction: '<', description: 'Start moving left.' },\n            { instruction: '^', description: 'Start moving up.' },\n            { instruction: 'v', description: 'Start moving down.' },\n            { instruction: '?', description: 'Start moving in a random cardinal direction.' },\n            { instruction: '_', description: 'Pop a value; move right if value=0, left otherwise.' },\n            { instruction: '|', description: 'Pop a value; move down if value=0, up otherwise.' },\n            { instruction: '\"', description: 'Start string mode: push each character\\'s ASCII value all the way up to the next \"' },\n            { instruction: ':', description: 'Duplicate value on top of the stack.' },\n            { instruction: '\\\\', description: 'Swap two values on top of the stack.' },\n            { instruction: '$', description: 'Pop value from the stack and discard it.' },\n            { instruction: '.', description: 'Pop value and output as an integer followed by a space.' },\n            { instruction: ',', description: 'Pop value and output as ASCII character.' },\n            { instruction: '#', description: 'Bridge: Skip next cell.' },\n            { instruction: 'p', description: 'A \"put\" call (a way to store a value for later use). Pop y, x, and v, then change the character at (x,y) in the program to the character with ASCII value v.' },\n            { instruction: 'g', description: 'A \"get\" call (a way to retrieve data in storage). Pop y and x, then push ASCII value of the character at that position in the program.' },\n            { instruction: '&', description: 'Ask user for a number and push it.' },\n            { instruction: '~', description: 'Ask user for a character and push its ASCII value.' },\n            { instruction: '@', description: 'End program.' },\n            { instruction: '\" \"', description: 'No-op. Does nothing' }\n        ];\n\n        this.BuildHelpString();\n    }\n\n    private BuildHelpString(): void {\n        this.instructionPaddingEnd = ArrayHelper\n            .Max(this.instructions, (a, b) => a.instruction.length < b.instruction.length)\n            .instruction.length;\n\n        this.helpString = this.instructions\n            .map(x => ` ${x.instruction.padEnd(this.instructionPaddingEnd)} ${x.description}`)\n            .join('\\n');\n    }\n\n    private NewLineFormatter(str: string): AutoWordWrapResult {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory(\n            {\n                ASCIIRange: { Start: ' ', End: '~' },\n                Font: { Name: 'Roboto', Size: this.lineHeight * this.group.Scale }\n            });\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        let instructionIdx = 1;\n        const instructionRange: [number, number][] = [[1, 1 + this.instructions[0].instruction.length]];\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                instructionRange.push([n + 2, n + 2 + this.instructions[instructionIdx++].instruction.length]);\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.display!.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n', ...' '.repeat(this.instructionPaddingEnd + 2));\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return { text: strArr.join(''), instructionRange };\n    }\n\n    ToggleHelp(): void {\n        if (this.display === null) {\n            this.display = this.uiRenderer.CreateTextList(\n                { x: 0, y: 0 },\n                {\n                    width: Math.min(this.maxWidth, this.settings.ViewDimension.Width) / this.group.Scale,\n                    height: this.settings.ViewDimension.Height / this.group.Scale * 0.75\n                },\n                6,\n                '',\n                { borderWidth: 2, fillColor: [1, 1, 1, 1] },\n                this.lineHeight,\n                this.group);\n\n            const formatedHelp = this.NewLineFormatter(this.helpString);\n\n            this.display.Text = formatedHelp.text;\n            formatedHelp.instructionRange.forEach(x => this.display!.StyleRange(x[0], x[1], { color: [0.9058823529411765, 0.2980392156862745, 0.23529411764705882] }));\n        } else {\n            this.display.Destroy();\n            this.display = null;\n        }\n    }\n}\n\nInversify.bind(LanguageSyntaxHelpControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { LanguageSyntaxHelpControls } from \"./LanguageSyntaxHelpControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface ScrollEvent {\n    startX: number;\n    startY: number;\n    scroll: number;\n    units: 'px' | 'row';\n}\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(LanguageSyntaxHelpControls) private languageSyntaxHelpControls: LanguageSyntaxHelpControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get LanguageSyntaxHelpControls(): LanguageSyntaxHelpControls {\n        return this.languageSyntaxHelpControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Scroll(e: ScrollEvent): boolean {\n        e.startY = this.gl.canvas.height - e.startY;\n\n        const textList = this.uiRenderer.FindTextList(e.startX, e.startY);\n\n        if (textList === null) {\n            return false;\n        }\n\n        if (e.units === 'px') {\n            textList.ScrollAligned(e.scroll);\n        } else if (e.units === 'row') {\n            textList.ScrollAligned(e.scroll * textList.LineHeight);\n        }\n\n        return true;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        queueMicrotask(() => {\n            let x = 0, y = 0;\n            switch (position) {\n                case TooltipPosition.LeftBottom:\n                    x = margin + column * cellSize;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n                case TooltipPosition.LeftTop:\n                    x = margin + column * cellSize;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightTop:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightBottom:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n            }\n\n            instance.Position = { x, y };\n        });\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    get RawRef(): T[] {\n        return this.data;\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let nonSpaceIdx = this.input.findIndex(x => x !== ' ');\n\n    if (['-', '+'].includes(this.input[nonSpaceIdx])) {\n      ++nonSpaceIdx;\n    }\n\n    let numberEnd = nonSpaceIdx;\n\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      char = this.input[++numberEnd]);\n\n\n    if (numberEnd === nonSpaceIdx) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D, Index2D } from \"../containers/Array2D\";\nimport { EnumSize } from \"../EnumSize\";\n\nimport { CPU, PCDirection } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class CellHitsFlow {\n    private stats: Array2D<number>;\n\n    constructor() {\n        const directionsCount = EnumSize(PCDirection);\n        this.stats = Array2D.WithProvider(directionsCount, directionsCount, () => 0);\n    }\n\n    Update(index: Index2D, updater: (value: number) => number): void {\n        this.stats.Update(index, updater);\n    }\n\n    get Total(): number {\n        let totalHits = 0;\n        this.stats.ForEach(x => totalHits += x);\n\n        return totalHits;\n    }\n\n    get Normalized(): number[] {\n        const total = this.Total;\n\n        return this.stats.Map(x => x / total).RawRef;\n    }\n}\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<CellHitsFlow> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => new CellHitsFlow());\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n\n            const hitsFlow = heatmap.Get({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            });\n\n            const from = this.target.PC.Direction;\n\n            this.target.ExecuteNext();\n\n            const to = this.target.PC.Direction;\n\n            hitsFlow.Update({\n                column: from,\n                row: to\n            }, x => x + 1);\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nconst float PI = 3.1415926535897932384626433832795f;\\nconst float circleRadius = 0.03f;\\nconst float sector = 1.f / 3.f;\\nconst float subsector = 1.f / 9.f;\\n\\nconst float lowSpeed = 1.f / 5.f;\\nconst float mediumSpeed = 1.f / 2.f;\\nconst float highSpeed = 1.f;\\nconst float speed[4] = float[](0.f, lowSpeed, mediumSpeed, highSpeed);\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n/*\\n* Each 2 bits describe frequency of hits flow in an direction.\\n* RR, DR, LR, UR,\\n* RD, DD, LD, UD,\\n* RL, DL, LL, UL,\\n* RU, DU, LU, UU\\n*/\\nflat in uint v_hitsFlow;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    if(v_color.a == 0.0f) {\\n        discard;\\n    }\\n\\n    float columnWidth = 1.f / 32.f;\\n    uint bitIdx = uint(floor(v_uvCoord.x / columnWidth));\\n    float bit = float(v_hitsFlow >> bitIdx & uint(1));\\n    out_color = vec4(bit, 0, 0, 0.9f);\\n\\n    uint rightRight = v_hitsFlow & uint(3);\\n    uint downRight = v_hitsFlow >> 2 & uint(3);\\n    uint leftRight = v_hitsFlow >> 4 & uint(3);\\n    uint upRight = v_hitsFlow >> 6 & uint(3);\\n    uint rightDown = v_hitsFlow >> 8 & uint(3);\\n    uint downDown = v_hitsFlow >> 10 & uint(3);\\n    uint leftDown = v_hitsFlow >> 12 & uint(3);\\n    uint upDown = v_hitsFlow >> 14 & uint(3);\\n    uint rightLeft = v_hitsFlow >> 16 & uint(3);\\n    uint downLeft = v_hitsFlow >> 18 & uint(3);\\n    uint leftLeft = v_hitsFlow >> 20 & uint(3);\\n    uint upLeft = v_hitsFlow >> 22 & uint(3);\\n    uint rightUp = v_hitsFlow >> 24 & uint(3);\\n    uint downUp = v_hitsFlow >> 26 & uint(3);\\n    uint leftUp = v_hitsFlow >> 28 & uint(3);\\n    uint upUp = v_hitsFlow >> 30 & uint(3);\\n\\n    out_color = v_color;\\n\\n    if(rightRight > uint(0)) {\\n        float x = fract(u_time * speed[rightRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(downRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[downRight] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftRight > uint(0)) {\\n        float x = fract(u_time * speed[leftRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(1.f - x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upRight]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[upRight] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[upRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightDown > uint(0)) {\\n        {\\n            float x = mod(fract(u_time * speed[rightDown]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[rightDown] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[rightDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(1.f - u_time * speed[downDown] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(leftDown > uint(0)) {\\n        {\\n            float x = mod(1.f - fract(u_time * speed[leftDown]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[leftDown] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[leftDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upDown] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightLeft > uint(0)) {\\n        float x = fract(u_time * speed[rightLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(1.5f * sector - (x - 1.5f * sector), y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downLeft]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[downLeft] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[downLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftLeft > uint(0)) {\\n        float x = 1.f - fract(u_time * speed[leftLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(upLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upLeft]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[upLeft] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[upLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[rightUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[rightUp] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[rightUp]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[downUp] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[leftUp] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.0f - fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upUp] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent) + 4;\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 4 * floatSize\n            },\n            {\n                name: 'a_hitsFlow',\n                size: 1,\n                type: gl.UNSIGNED_INT,\n                stride: gridStride,\n                offset: 8 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n        super.Draw();\n    }\n}\ninterface HeatmapCellAttributes {\n    color: Rgba;\n    hitsFlow: number;\n}\n\nexport type HeatmapRenderInfo = Array2D<HeatmapCellAttributes>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapRenderInfo): HeatmapGridRenderer {\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const attributes = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: 0, y: 0 },\n                        B: { x: 1, y: 1 }\n                    },\n                    attributes.color,\n                    attributes.hitsFlow);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba,\n        hitsFlow: number\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color,\n                [hitsFlow]\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapRenderInfo) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapRenderInfo]>(ctx => (data: HeatmapRenderInfo) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\nin uint a_hitsFlow;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\nflat out uint v_hitsFlow;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() {\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1f, 1.0f);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n  v_hitsFlow = a_hitsFlow;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer, HeatmapRenderInfo } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { CellHitsFlow } from \"@/lib/befunge/Profiler\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<CellHitsFlow>;\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const renderInfo: HeatmapRenderInfo = this.heatmap\n            .Map(x => ({ color: this.HitsToColor(x.Total), hitsFlow: this.PackHitsFlow(x.Normalized) }));\n\n        const renderer = this.heatmapGridRendererFactory(renderInfo);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private PackHitsFlow(normalizedHitsFlow: number[]): number {\n        return normalizedHitsFlow.reduce((packed, x, n) => {\n            if (x >= 0.66) {\n                return packed | 3 << 2 * n;\n            } else if (x >= 0.33) {\n                return packed | 2 << 2 * n;\n            } else if (x > 0) {\n                return packed | 1 << 2 * n;\n            }\n\n            return packed;\n        }, 0);\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x.Total));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits.Total > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.Total.toString(), TooltipPosition.LeftBottom);\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { vec2 } from \"gl-matrix\";\n\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: CameraService,\n        private destination: vec2,\n        private viewport: Viewport\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.viewport);\n\n        this.camera.Translate({\n            x: delta.x,\n            y: delta.y\n        });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { ZCameraBoundary } from \"../AppSettings\";\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: CameraService,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera.Position.z + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        this.camera.Translate({ z: delta });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","export class AbortOperationException extends Error { }\n\nexport interface FileStorage {\n    Open(): Promise<string>;\n    Save(content: string): Promise<void>;\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","import { vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CameraService } from './CameraService';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { AbortOperationException, FileStorage } from '@/lib/DOM/FileStorage/FileStorage';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FileStorage) private fileStorage: FileStorage,\n        @inject(CameraService) private camera: CameraService,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera.MoveTo(\n            {\n                x: 0,\n                y: 0,\n                z: this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75\n            });\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.FocusCameraAtEditor();\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.ShowHelpObservable.Attach(() => this.overlay.LanguageSyntaxHelpControls.ToggleHelp());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.camera.Resize();\n\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnPan(e: MouseMovementEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.startX,\n            startY: e.startY,\n            scroll: -e.movementY / window.devicePixelRatio,\n            units: 'px'\n        })) {\n            const delta = Camera.UnprojectMovement(\n                { x: e.movementX, y: e.movementY },\n                { a: 0, b: 0, c: 1, d: 0 },\n                this.camera.ViewProjection,\n                this.gl.canvas);\n\n            this.camera.Translate({ x: delta.x, y: delta.y });\n\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnWheel(e: WheelEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.offsetX,\n            startY: e.offsetY,\n            scroll: Math.sign(e.deltaY),\n            units: 'row'\n        })) {\n            const smoothCameraZoomEffect = new SmoothCameraZoom(\n                e.deltaY < 0 ? 'in' : 'out',\n                this.camera,\n                this.settings.ZCameraBoundary);\n\n            this.effectRunner.Register(\n                smoothCameraZoomEffect,\n                { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n        }\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera.Position.z;\n    }\n\n    OnTouchZoom(zoom: number): void {\n        this.camera.MoveTo({\n            z: MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            sourceCode = await this.fileStorage.Open();\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message);\n            }\n\n            return;\n        }\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            await this.fileStorage.Save(this.SourceCodeString());\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.camera.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.camera.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        this.camera.Translate({\n            x: -intersection[0],\n            y: -intersection[1]\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","export async function WaitEvent<TEvent extends Event>(target: HTMLElement, event: string): Promise<TEvent> {\n    return new Promise<TEvent>(resolve => target.addEventListener(event, e => resolve(e as TEvent), { once: true }));\n}\n","import { injectable } from \"inversify\";\n\nimport { WaitEvent } from \"../EventWaiter\";\n\nimport { FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class DOMEmulatedFileStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        const input = document.createElement('input');\n\n        input.type = 'file';\n        const onChange = WaitEvent(input, 'change');\n\n        input.click();\n\n        const onChangeResult = await onChange;\n\n        const target = onChangeResult.target as HTMLInputElement | null;\n\n        if ((target?.files?.length ?? 0) === 0) {\n            throw new Error('Failed to load file');\n        }\n\n        this.openedFilename = target!.files![0].name;\n\n        return target!.files![0].text();\n    }\n\n    async Save(content: string): Promise<void> {\n        const blob = new Blob([content], { type: 'text/plain' });\n\n        const url = window.URL.createObjectURL(blob);\n\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.openedFilename;\n\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AbortOperationException, FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class FilePickerApiDiskStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                throw new AbortOperationException();\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            return file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n\n    async Save(content: string): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(content);\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { DOMEmulatedFileStorage } from \"@/lib/DOM/FileStorage/DOMEmulatedFileStorage\";\nimport { FilePickerApiDiskStorage } from \"@/lib/DOM/FileStorage/FilePickerApiFileStorage\";\nimport { FileStorage } from \"@/lib/DOM/FileStorage/FileStorage\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n\n        Inversify\n            .bind<FileStorage>(InjectionToken.FileStorage)\n            .to(this.IsPickerApiAvailable ? FilePickerApiDiskStorage : DOMEmulatedFileStorage)\n            .inSingletonScope();\n    }\n\n    private get IsPickerApiAvailable(): boolean {\n        return window.showOpenFilePicker !== undefined &&\n            window.showSaveFilePicker !== undefined;\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(572); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","pan","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","startX","window","devicePixelRatio","startY","movementX","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnPan","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","__decorate","injectable","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","FileStorage","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","Inversify","Container","AppSettings","gl","PI","Width","Height","AspectRatio","canvas","width","height","DevicePixelRatio","__param","inject","WebGL2RenderingContext","_a","Object","bind","toSelf","inSingletonScope","EnumSize","keys","NotNull","msg","startSymbolCode","Columns","Rows","GlyphCount","Image","LookupUV","symbol","symbolCode","charCodeAt","glyphIdx","column","row","floor","glyphWidth","glyphHeight","leftTop","A","B","FontAtlasBuilderImpl","Build","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","ceil","rowCount","glyphCellSize","GlyphCellSize","SetupCanvas","FillCanvasWithGlyphs","context","getImageData","document","createElement","getContext","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","PrimitiveBuilder","position","dimension","attributes","leftBottom","rightTop","rightBottom","attr","Array","isArray","push","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ArrayHelper","array","comparator","dest","destStart","src","srcStart","ShaderProgram","Map","instance","createProgram","Attach","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","async","url","fetch","text","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","get","getUniformLocation","set","TypeSizeResolver","Sizes","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","ArrayBuffer","Setup","SetupAttributes","UploadAttributes","vertexCount","componentsPerVertex","vertexData","stride","vertexStart","attrDescIdx","offset","byteOffset","size","Resolve","attrInfo","target","slice","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdatePrimitiveComponents","vertexDataOffsetStart","attributeOffset","modifiedData","bufferSubData","PrimitiveComponents","index","PrimitiveComponentsRange","primitiveStartIdx","primitivesCount","ComponentsPerPrimitive","fill","vertexIdx","attrIdx","indicesPerPrimitive","Copy","TotalPrimitives","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","reduce","acc","location","enableVertexAttribArray","IsIntegerAttributesType","vertexAttribIPointer","vertexAttribPointer","normalized","IntegerTypes","includes","unmanaged","CodeCellComponent","EditorGridRenderer","settings","fontAtlas","fontAtlasTexture","floatSize","gridStride","super","FGrid","VGrid","TRIANGLES","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","cell","BuildCell","CellSize","cellIdx","cellAttrs","symbolUV","UVStartOffset","bindTexture","TEXTURE_2D","color","uv","ViewProjection","mat","Dimension","_b","_c","_d","WebGLTexture","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","AABBFrame","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","_class","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","IndicesPerPrimitive","Select","SelectRegion","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","findIndex","r","a","b","colorOffset","attrs","colorStart","point","Unselect","UnselectRegion","splice","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","viewProjection","Clear","Transformation","movable","destination","betweenByX","Between","lb","rt","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","Min","diff","leftToRight","rightToLeft","bottomToTop","topToBottom","intersectByX","intersectByY","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","rectangle","aTopRight","bTopRight","Camera","viewport","vec","z","v","vec4","invertViewProj","mat4","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","CameraService","codeEditorRenderer","UpdateProjection","UpdateViewProjection","MoveTo","undefined","camera","MaintainCodeEditorVisible","Translate","Position","Resize","projection","Fovy","ZNear","ZFar","view","cellSize","lbNDC","rtNDC","ndcCompensation","ShortestMoveForIntersection","screenCompensation","ViewDimension","worldCompensation","UnprojectMovement","HeadlineControlsLayout","POSITIVE_INFINITY","Watch","component","Observable","ComponentUpdated","components","AbsolutePosition","absolutePosition","Scale","skipUpdates","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","absoluteExtremum","flatMap","MapComponent","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","IllegalInstructionException","Where","Opcode","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","priority","descriptor","observers","MaintainSorted","DetachAll","Notify","sender","o","temp","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","sort","pack","maxHeightInRow","items","TextureAtlas","ClonePackage","NormalizePackage","found","UndefinedUV","TextureAtlasBuilder","filename","images","packer","img","packed","CreateImage","drawImage","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","QuestionMark","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","icon","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","UIObservableAlert","zIndex","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","MemoryPoolTracker","capacity","NoFree","pool","from","_","nextFree","Allocate","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","UIAlertPanelComponent","UIAlertIconRenderer","FUIALertIcon","VUIAlertIcon","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","alertIconComponents","panelComponents","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","alertIconsComponents","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","iconSideLength","iconMargin","UpdateComponent","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_e","UIObservableEditableTextList","containerStyle","textList","CreateTextList","begin","end","OnVanish","onVanish","OnInput","keyCode","key","toDelete","ContainerStyle","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","ScrollAligned","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","buttonOutlineAttrs","buttonComponents","buttonOutlineComponents","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","AttributesPerComponent","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","BorderWidth","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","stencilComponents","borderComponents","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","UIObservableTextListDeleter","uiTextLists","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchTextList","FindTextList","intersected","AABBRectanglePoint","Max","desc","_f","DebugAction","DebugControls","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","FileControls","openButtonIconColor","saveButtonIconColor","helpButtonIconColor","openButton","FileControls_1","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","helpButton","ToggleHelpButton","helpShowed","showHelpObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","ShowHelpObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","LanguageSyntaxHelpControls","instructions","instruction","description","BuildHelpString","instructionPaddingEnd","helpString","padEnd","instructionIdx","instructionRange","display","repeat","ToggleHelp","formatedHelp","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","languageSyntaxHelpControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","Scroll","units","_g","_h","_j","_k","_l","_m","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","TooltipPosition","CodeEditorTooltipService","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","RawRef","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","clipboard","writeText","CPUImpl","memory","io","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","nonSpaceIdx","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","CellHitsFlow","directionsCount","stats","Total","totalHits","Normalized","total","Profiler","CellHeatmapFor","heatmap","hitsFlow","to","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","renderInfo","HitsToColor","PackHitsFlow","hits","maxHits","lowHitsColor","hitsColorsDiff","normalizedHitsFlow","highHitsColor","HeatMapGridFactory","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","IsDone","isDone","fract","duration","progress","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","copy","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","AbortOperationException","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","fileStorage","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","OnWheel","sign","deltaY","smoothCameraZoomEffect","touchZoomStartZ","OnKeyDown","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","SourceCodeString","sourceString","trimEnd","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","WaitEvent","event","addEventListener","once","DOMEmulatedFileStorage","onChange","click","onChangeResult","files","openedFilename","content","blob","Blob","URL","createObjectURL","href","download","revokeObjectURL","FilePickerApiDiskStorage","fileHandle","showOpenFilePicker","multiple","kind","file","getFile","showSaveFilePicker","suggestedName","stream","createWritable","write","close","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","IsPickerApiAvailable","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}