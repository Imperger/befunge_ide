{"version":3,"file":"js/app.a28f260d.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/AppSettingsCodec.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CameraService.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/LanguageSyntaxHelpControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/DOM/FileStorage/FileStorage.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/lib/DOM/EventWaiter.ts","webpack://befunge/./src/lib/DOM/FileStorage/DOMEmulatedFileStorage.ts","webpack://befunge/./src/lib/DOM/FileStorage/FilePickerApiFileStorage.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    startX: number;\n    startY: number;\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype OnPanFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private pan: OnPanFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.pan({\n            startX: this.touchPrev.x * window.devicePixelRatio,\n            startY: this.touchPrev.y * window.devicePixelRatio,\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnPan(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnPan({\n                startX: e.offsetX * window.devicePixelRatio,\n                startY: e.offsetY * window.devicePixelRatio,\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnPan(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory'),\n    FileStorage: Symbol('File storage')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) {\n        this.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n    }\n\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export interface ShareableAppSettings {\n    heatmap?: boolean;\n    input?: string;\n}\n\nexport class DecodingException extends Error { }\n\ntype SettingsAssertion = [keyof ShareableAppSettings, (prop: keyof ShareableAppSettings, settings: ShareableAppSettings) => boolean];\n\nexport class AppSettingsCodec {\n    static Encode(settings: ShareableAppSettings): string {\n        return btoa(JSON.stringify(settings));\n    }\n\n    static Decode(encoded: string): ShareableAppSettings {\n        try {\n            const settings = JSON.parse(atob(encoded));\n\n            AppSettingsCodec.PropsValidation(settings);\n\n            return settings;\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingException('Failed to decode base64 shared settings url');\n                }\n            } else if (e instanceof SyntaxError) {\n                throw new DecodingException('Failed to decode json shared settings url');\n            }\n\n            throw e;\n        }\n    }\n\n    private static PropsValidation(settings: ShareableAppSettings): void {\n        const assertions: SettingsAssertion[] = [\n            ['heatmap', (p, x) => typeof x[p] === 'boolean'],\n            ['input', (p, x) => typeof x[p] === 'string']\n        ];\n\n        if (!assertions.every(x => x[0] in settings ? x[1](x[0], settings) : true)) {\n            throw new DecodingException('Failed to validate settings properties');\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport interface ArrayLikeMut<T> {\n    readonly length: number;\n    [n: number]: T;\n}\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n\n    static Copy<T>(dest: ArrayLikeMut<T>, destStart: number, src: ArrayLikeMut<T>, srcStart: number, length: number): void {\n        for (let n = 0; n < length; ++n) {\n            dest[destStart + n] = src[srcStart + n];\n        }\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { ArrayHelper } from '../ArrayHelper';\nimport { NotNull } from '../NotNull';\nimport { ArrayItemType } from '../TypeUtil';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ntype FloatTypes = typeof WebGL2RenderingContext.HALF_FLOAT | typeof WebGL2RenderingContext.FLOAT;\ntype IntegerTypes = ArrayItemType<PrimitivesRenderer['IntegerTypes']>\n\ninterface FloatAttributeDescription {\n  name: string;\n  size: GLint;\n  type: FloatTypes;\n  normalized: GLboolean;\n}\n\ninterface IntegerAttributeDescription {\n  name: string;\n  size: GLint;\n  type: IntegerTypes;\n}\n\ntype AttributeDescription = FloatAttributeDescription | IntegerAttributeDescription;\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected vertexData = new ArrayBuffer(0);\n\n  //private componentsPerAttributeSet = 0;\n  /**\n   * Size of one vertex attributes in bytes\n   */\n  private stride = 0;\n  /**\n   * Count of primitive values per vertex\n   */\n  private componentsPerVertex = 0;\n  /**\n   * The total count of vertex stored in vertexData\n   */\n  private vertexCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() private attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attributes: number[]): void {\n    this.vertexCount = attributes.length / this.componentsPerVertex;\n    this.vertexData = new ArrayBuffer(this.stride * this.vertexCount);\n\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (let attrDescIdx = 0, offset = 0, byteOffset = 0;\n        attrDescIdx < this.attributes.length;\n        offset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.vertexData,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  /**\n   * Update attributes for specific primitive. \n   * @param attributes Attributes that will be uploaded\n   * @param offset Starting index of primitive attributes. Measured in number of attributes\n   */\n  public UpdatePrimitiveComponents(attributes: number[], offset: number): void {\n    const vertexDataOffsetStart = offset / this.componentsPerVertex * this.stride;\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (\n        let attrDescIdx = 0, byteOffset = vertexDataOffsetStart, attributeOffset = 0;\n        attrDescIdx < this.attributes.length;\n        attributeOffset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    const modifiedData = new Uint8Array(this.vertexData, vertexDataOffsetStart, attributes.length / this.componentsPerVertex * this.stride);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      vertexDataOffsetStart,\n      modifiedData,\n      0,\n      modifiedData.length);\n  }\n\n  /**\n   * Extract primitive attributes\n   * @param index primitive index\n   * @returns primitive components\n   */\n  PrimitiveComponents(index: number): number[] {\n    return this.PrimitiveComponentsRange(index, 1);\n  }\n\n  /**\n   * Extract attributes for 1 or more consequenced primitives\n   * @param primitiveStartIdx index of a first primitive\n   * @param primitivesCount number of primitives whose attributes will be retrieved\n   * @returns primitives components\n   */\n  PrimitiveComponentsRange(primitiveStartIdx: number, primitivesCount: number): number[] {\n    const attributes = new Array<number>(this.ComponentsPerPrimitive * primitivesCount).fill(0);\n\n    for (let vertexIdx = 0, attrIdx = 0; vertexIdx < this.primitiveDescription.indicesPerPrimitive * primitivesCount; ++vertexIdx) {\n      let byteOffset = (primitiveStartIdx * this.primitiveDescription.indicesPerPrimitive + vertexIdx) * this.stride;\n\n      for (const attrInfo of this.attributes) {\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const src = new Float32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const src = new Uint32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n\n        byteOffset += TypeSizeResolver.Resolve(attrInfo.type) * attrInfo.size;\n        attrIdx += attrInfo.size;\n      }\n    }\n\n    return attributes;\n  }\n\n  /**\n   * Returns the total count of primitives\n   */\n  get TotalPrimitives(): number {\n    return this.vertexCount / this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  /**\n     * Returns the count of components per vertex\n     */\n  get ComponentsPerVertex(): number {\n    return this.componentsPerVertex;\n  }\n\n  /**\n   * Returns the count of components per primitive\n   */\n  get ComponentsPerPrimitive(): number {\n    return this.componentsPerVertex * this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.vertexCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    [this.componentsPerVertex, this.stride] = attributes.reduce(\n      (acc, attr) => [acc[0] + attr.size, acc[1] + attr.size * TypeSizeResolver.Resolve(attr.type)],\n      [0, 0]);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset += attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n\n      if (this.IsIntegerAttributesType(attr)) {\n        this.gl.vertexAttribIPointer(\n          location,\n          attr.size,\n          attr.type,\n          this.stride,\n          offset);\n      } else {\n        this.gl.vertexAttribPointer(\n          location,\n          attr.size,\n          attr.type,\n          attr.normalized,\n          this.stride,\n          offset);\n      }\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n\n  private IsIntegerAttributesType(attributes: AttributeDescription): attributes is IntegerAttributeDescription {\n    return (this.IntegerTypes as number[]).includes(attributes.type);\n  }\n\n  private get IntegerTypes() {\n    return [this.gl.BYTE, this.gl.UNSIGNED_BYTE,\n    this.gl.SHORT, this.gl.UNSIGNED_SHORT,\n    this.gl.INT, this.gl.UNSIGNED_INT];\n  }\n}\n","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n        const cellIdx = row * this.settings.MemoryLimit.Width + column;\n        const cellAttrs = this.PrimitiveComponents(cellIdx);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVStartOffset = 5;\n\n        // Left bottom\n        cellAttrs[UVStartOffset] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs[UVStartOffset + this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs[UVStartOffset + 2 * this.ComponentsPerVertex] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 2 * this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs[UVStartOffset + 3 * this.ComponentsPerVertex] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 3 * this.ComponentsPerVertex + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs[UVStartOffset + 4 * this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 4 * this.ComponentsPerVertex + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs[UVStartOffset + 5 * this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 5 * this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        this.UpdatePrimitiveComponents(cellAttrs, cellIdx * this.ComponentsPerPrimitive);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveComponents(selectionIdx);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = colorOffset + n * this.ComponentsPerVertex;\n\n                attrs[colorStart] = color[0];\n                attrs[colorStart + 1] = color[1];\n                attrs[colorStart + 2] = color[2];\n            }\n\n            this.UpdatePrimitiveComponents(attrs, selectionIdx * this.ComponentsPerVertex * SelectionRenderer.IndicesPerPrimitive)\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const attributes = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([\n                ...this.PrimitiveComponentsRange(0, this.TotalPrimitives),\n                ...attributes\n            ]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attributes = this.PrimitiveComponentsRange(0, this.TotalPrimitives);\n        attributes.splice(selectionIdx * this.ComponentsPerPrimitive, this.ComponentsPerPrimitive);\n\n        this.UploadAttributes(attributes);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    IsValidLocation(column: number, row: number): boolean {\n        return column >= 0 && column < this.Dimension.Columns && row >= 0 && row < this.Dimension.Rows;\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    static ShortestMoveForIntersection(movable: Rectangle, destination: Rectangle): Vec2 {\n        const leftToRight = destination.rt.x - movable.lb.x;\n        const rightToLeft = destination.lb.x - movable.rt.x;\n\n        const bottomToTop = destination.rt.y - movable.lb.y;\n        const topToBottom = destination.lb.y - movable.rt.y;\n\n        const intersectByX = !(leftToRight < 0 || rightToLeft > 0);\n        const intersectByY = !(bottomToTop < 0 || topToBottom > 0);\n\n        if (intersectByX && intersectByY) {\n            return { x: 0, y: 0 };\n        }\n\n        const x = leftToRight < 0 ?\n            leftToRight :\n            rightToLeft > 0 ?\n                rightToLeft :\n                0;\n\n        const y = bottomToTop < 0 ?\n            bottomToTop :\n            topToBottom > 0 ?\n                topToBottom :\n                0;\n\n\n        return { x, y };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { CodeEditorRenderer } from \"./CodeEditor/CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Transformation } from \"@/lib/math/Transformation\";\nimport { Vec3 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\n\n@injectable()\nexport class CameraService {\n    private camera: mat4 = mat4.create();\n    private projection: mat4 = mat4.create();\n    private viewProjection: mat4 = mat4.create();\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer) {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    MoveTo(position: Partial<Vec3>): void {\n        position.x !== undefined && (this.camera[12] = position.x);\n        position.y !== undefined && (this.camera[13] = position.y);\n        position.z !== undefined && (this.camera[14] = position.z);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    Translate(delta: Partial<Vec3>): void {\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                delta.x ?? 0,\n                delta.y ?? 0,\n                delta.z ?? 0\n            ]);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    get Position(): Vec3 {\n        return {\n            x: this.camera[12],\n            y: this.camera[13],\n            z: this.camera[14]\n        };\n    }\n\n    get ViewProjection(): mat4 {\n        return this.viewProjection;\n    }\n\n    Resize(): void {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    private UpdateProjection(): void {\n        mat4.perspective(\n            this.projection,\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private UpdateViewProjection(): void {\n        const view = mat4.invert(mat4.create(), this.camera);\n        mat4.mul(this.viewProjection, this.projection, view);\n    }\n\n    private MaintainCodeEditorVisible(): void {\n        const cellSize = this.codeEditorRenderer.CellSize;\n        const lbNDC = vec3.transformMat4(vec3.create(), [cellSize, cellSize, 0], this.viewProjection);\n        const rtNDC = vec3.transformMat4(\n            vec3.create(),\n            [\n                (this.settings.MemoryLimit.Width - 1) * cellSize,\n                (this.settings.MemoryLimit.Height - 1) * cellSize,\n                0\n            ],\n            this.viewProjection);\n\n        const ndcCompensation = Transformation.ShortestMoveForIntersection(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        if (ndcCompensation.x === 0 && ndcCompensation.y === 0) {\n            return;\n        }\n\n        const screenCompensation = {\n            x: ndcCompensation.x * this.settings.ViewDimension.Width / 2,\n            y: ndcCompensation.y * this.settings.ViewDimension.Height / 2\n        };\n\n        const worldCompensation = Camera.UnprojectMovement(\n            { x: screenCompensation.x, y: -screenCompensation.y },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            {\n                width: this.settings.ViewDimension.Width,\n                height: this.settings.ViewDimension.Height\n            });\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                worldCompensation.x,\n                worldCompensation.y,\n                0\n            ]);\n\n        this.UpdateViewProjection();\n    }\n}\n\nInversify.bind(CameraService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, QuestionMark, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace, Enter\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.QuestionMark,\n                filename: 'ui_icons/question_mark.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Enter,\n                filename: 'ui_icons/enter.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const alertIconComponents = new Array(this.renderer.alertIcon.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const panelComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        panelAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        panelComponents,\n                        0,\n                        panelComponents.length);\n\n\n                    const alertIconComponents = this.renderer.alertIcon.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        alertIconComponents,\n                        n * this.renderer.alertIcon.ComponentsPerPrimitive,\n                        alertIconComponents,\n                        0,\n                        alertIconComponents.length);\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n                this.renderer.alertIcon.UploadAttributes(alertIconComponents);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const panelComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < panelComponents.length ? panelComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n\n                const alertIconsComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.ComponentsPerPrimitive },\n                    (_, n) => n < alertIconsComponents.length ? alertIconsComponents[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.alertIcon.ComponentsPerPrimitive).fill(0);\n\n            this.alertIcon.UpdatePrimitiveComponents(\n                emptyAttrs,\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        } else {\n            this.alertIcon.UpdatePrimitiveComponents(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { SymbolStyle } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { ContainerStyle, UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            parent);\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.textList.StyleRange(begin, end, style);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return this.textList.ContainerStyle;\n    }\n\n    set ContainerStyle(style: ContainerStyle) {\n        this.textList.ContainerStyle = style;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    ScrollAligned(offset: number): void {\n        this.textList.ScrollAligned(offset);\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\nimport { ContainerStyle } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 24, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 18, basePrimitiveType: gl.TRIANGLES });\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: renderer.outline.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.outline.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const buttonComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        buttonComponents,\n                        0,\n                        buttonComponents.length);\n\n                    const buttonOutlineComponents = this.renderer.outline.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonOutlineAttrs,\n                        n * this.renderer.outline.ComponentsPerPrimitive,\n                        buttonOutlineComponents,\n                        0,\n                        buttonOutlineComponents.length);\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const buttonComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < buttonComponents.length ? buttonComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const buttonOutlineComponents = this.renderer.outline.PrimitiveComponentsRange(0, this.renderer.outline.TotalPrimitives);\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.outline.ComponentsPerPrimitive },\n                    (_, n) => n < buttonOutlineComponents.length ? buttonOutlineComponents[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            new Array(this.outline.ComponentsPerPrimitive).fill(0),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport enum UpdatedProperty { Position = 0, Style, Text, LineHeight, ZIndex, Scale };\ntype ComponentsToUpdate = [boolean, boolean, boolean, boolean, boolean, boolean];\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    private changedProperties: ComponentsToUpdate = [false, false, false, false, false, false];\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.changedProperties[UpdatedProperty.Style] = true;\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.changedProperties[UpdatedProperty.Position] = true;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.changedProperties[UpdatedProperty.Text] = true;\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.changedProperties[UpdatedProperty.LineHeight] = true;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.changedProperties[UpdatedProperty.ZIndex] = true;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.changedProperties[UpdatedProperty.Scale] = true;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    get ChangedProperties(): ComponentsToUpdate {\n        return this.changedProperties;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n\n        this.changedProperties.fill(false);\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\nuniform mat4 u_world;\\n\\nvoid main() {\\n  gl_Position = u_viewProject * u_world * vec4(a_vertex, 1.0f);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { mat4 } from 'gl-matrix';\nimport { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel, UpdatedProperty } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { SelfBind } from '@/lib/SelfBind';\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    public Unique = false;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.shader.SetUniformMatrix4fv('u_world', mat4.create());\n\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.ComponentsPerPrimitive).fill(0);\n\n                this.renderer.UpdatePrimitiveComponents(emptyAttrs, index * this.renderer.ComponentsPerPrimitive);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const components = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        labelAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        components,\n                        0,\n                        components.length);\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const components = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < components.length ? components[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private OnlyPositionChanged(component: UIObservableLabel): boolean {\n        return component.ChangedProperties.every((x, n) => n === UpdatedProperty.Position ? x : !x);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        let width = 0;\n        let { x, y } = { x: 0, y: 0 };\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        if (this.Unique) {\n            const world = mat4.create();\n            const p = component.AbsolutePosition;\n            mat4.translate(world, world, [p.x, p.y, 0]);\n\n            this.shader.SetUniformMatrix4fv('u_world', world);\n\n            if (this.OnlyPositionChanged(component)) {\n                return;\n            }\n        } else {\n            x = component.AbsolutePosition.x;\n            y = component.AbsolutePosition.y - minBaseOffset;\n        }\n\n        const xOffset = this.Unique ? 0 : component.AbsolutePosition.x;\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = xOffset;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdatePrimitiveComponents(attributes, offset * this.ComponentsPerPrimitive);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - xOffset);\n            }\n\n            x = xOffset;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique).onActivation((ctx, instance) => (instance.Unique = true, instance));\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { ContainerStyle, UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private containerStyle: ContainerStyle,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.ContainerStyle.borderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.ContainerStyle.borderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return {\n            borderWidth: this.containerStyle.borderWidth * this.Scale,\n            fillColor: this.containerStyle.fillColor\n        };\n    }\n\n    set BorderWidth(style: ContainerStyle) {\n        this.containerStyle.borderWidth = style.borderWidth;\n        this.containerStyle.fillColor = style.fillColor;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Destroy();\n            this.scrollControls.scrollBottomButton.Destroy();\n            this.scrollControls = null;\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.containerStyle.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.containerStyle.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.ContainerStyle.borderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.containerStyle.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    ScrollAligned(offset: number): void {\n        if (!this.IsContentOverflow) {\n            return;\n        }\n\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 v_fill_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = v_fill_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec4 a_fill_color;\\n\\nout vec4 v_fill_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n  v_fill_color = a_fill_color;\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { ContainerStyle, UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 24, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fill_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.ComponentsPerPrimitive);\n\n                this.renderer.borderRenderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.borderRenderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.borderRenderer.ComponentsPerPrimitive);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const stencilComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        scencilRectAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        stencilComponents,\n                        0,\n                        stencilComponents.length);\n\n                    const borderComponents = this.renderer.borderRenderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        borderAttrs,\n                        n * this.renderer.borderRenderer.ComponentsPerPrimitive,\n                        borderComponents,\n                        0,\n                        borderComponents.length);\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const stencilComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < stencilComponents.length ? stencilComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const borderComponents = this.renderer.borderRenderer.PrimitiveComponentsRange(0, this.renderer.borderRenderer.TotalPrimitives);\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.ComponentsPerPrimitive },\n                    (_, n) => n < borderComponents.length ? borderComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            containerStyle,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.ContainerStyle.borderWidth,\n                    y: component.AbsolutePosition.y + component.ContainerStyle.borderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.ContainerStyle.borderWidth,\n                    height: component.Dimension.height - 2 * component.ContainerStyle.borderWidth\n                },\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded + 0.1],\n                    component.ContainerStyle.fillColor\n                ]);\n        } else {\n            attrs = new Array(this.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.UpdatePrimitiveComponents(attrs, component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.ContainerStyle.borderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.borderRenderer.UpdatePrimitiveComponents(attrs, component.Offset * this.borderRenderer.ComponentsPerPrimitive);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { ContainerStyle, UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UITextListDescriptor<TRenderer, TComponent extends UITextList> {\n    renderer: TRenderer;\n    component: TComponent;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextLists: UITextListDescriptor<UITextListRenderer, UITextList>[] = [];\n\n    private uiEditableTextLists: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        const descriptor = { renderer } as UITextListDescriptor<UITextListRenderer, UITextList>;\n\n        const textList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = textList;\n\n        this.uiTextLists.push(descriptor);\n\n        return textList;\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor = { renderer } as UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchTextList(this.uiEditableTextLists, e.offsetX, e.offsetY) ?? false);\n    }\n\n    FindTextList(x: number, y: number): UITextList | null {\n        const textList = this.TouchTextList(this.uiTextLists, x, y);\n        const editableTextList = this.TouchTextList(this.uiEditableTextLists, x, y);\n\n        if (textList === null) {\n            return editableTextList;\n        }\n\n        if (editableTextList === null) {\n            return textList;\n        }\n\n        return textList.ZIndex > editableTextList.ZIndex ?\n            textList :\n            editableTextList;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchTextList<TRenderer, TComponent extends UITextList>(components: UITextListDescriptor<TRenderer, TComponent>[], x: number, y: number): TComponent | null {\n        const intersected = components\n            .filter(desc => desc.component.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.component.AbsolutePosition.x,\n                    y: desc.component.AbsolutePosition.y,\n                    width: desc.component.Dimension.width,\n                    height: desc.component.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UITextListDescriptor<TRenderer, TComponent>, b: UITextListDescriptor<TRenderer, TComponent>) => a.component.ZIndex < b.component.ZIndex)\n            .component;\n    }\n\n    private UIObservableTextListDeleter(descriptor: UITextListDescriptor<UITextListRenderer, UITextList>): void {\n        this.uiTextLists.splice(this.uiTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextLists.forEach(x => x.renderer.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextLists.forEach(x => x.renderer.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    ClickOnHeatmap(): void {\n        this.heatmapButton.Touch();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n\n    private helpButton: UIIconButton;\n    private helpShowed = false;\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private showHelpObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const helpButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.helpButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.QuestionMark, color: helpButtonIconColor },\n            _sender => this.ToggleHelpButton(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    private ToggleHelpButton(): void {\n        this.helpButton.Style = {\n            ...this.helpButton.Style,\n            outlineColor: this.helpShowed ? FileControls.DefaultButtonOutlineColor : FileControls.ToggleButtonOutlineColor\n        };\n\n        this.helpShowed = !this.helpShowed;\n\n        this.showHelpObservable.Notify()\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get ShowHelpObservable(): Observable<void> {\n        return this.showHelpObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    SwitchTab(inputTab: boolean): void {\n        if (this.inputButton.Disable === inputTab) {\n            return;\n        }\n\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    set Input(text: string) {\n        this.inputEditableTextList.Text = text;;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\ninterface AutoWordWrapResult {\n    text: string;\n    instructionRange: [number, number][];\n}\n\ninterface InstructionDescription {\n    instruction: string;\n    description: string;\n}\n\n@injectable()\nexport class LanguageSyntaxHelpControls {\n    private group: UIObservablePositioningGroup;\n    private display: UITextList | null = null;\n    private lineHeight = 16;\n    private maxWidth = 1024;\n    private defaultTextColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private instructions: InstructionDescription[];\n    private helpString!: string;\n    private instructionPaddingEnd!: number;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n\n        this.instructions = [\n            { instruction: '0-9', description: 'Push this number onto the stack.' },\n            { instruction: '+', description: 'Addition: Pop a and b, then push a+b.' },\n            { instruction: '-', description: 'Subtraction: Pop a and b, then push b-a.' },\n            { instruction: '*', description: 'Multiplication: Pop a and b, then push a*b.' },\n            { instruction: '/', description: 'Integer division: Pop a and b, then push b/a, rounded towards 0.' },\n            { instruction: '%', description: 'Modulo: Pop a and b, then push the remainder of the integer division of b/a.' },\n            { instruction: '!', description: 'Logical NOT: Pop a value. If the value is zero, push 1; otherwise, push zero.' },\n            { instruction: '`', description: 'Greater than: Pop a and b, then push 1 if b>a, otherwise zero.' },\n            { instruction: '>', description: 'Start moving right.' },\n            { instruction: '<', description: 'Start moving left.' },\n            { instruction: '^', description: 'Start moving up.' },\n            { instruction: 'v', description: 'Start moving down.' },\n            { instruction: '?', description: 'Start moving in a random cardinal direction.' },\n            { instruction: '_', description: 'Pop a value; move right if value=0, left otherwise.' },\n            { instruction: '|', description: 'Pop a value; move down if value=0, up otherwise.' },\n            { instruction: '\"', description: 'Start string mode: push each character\\'s ASCII value all the way up to the next \"' },\n            { instruction: ':', description: 'Duplicate value on top of the stack.' },\n            { instruction: '\\\\', description: 'Swap two values on top of the stack.' },\n            { instruction: '$', description: 'Pop value from the stack and discard it.' },\n            { instruction: '.', description: 'Pop value and output as an integer followed by a space.' },\n            { instruction: ',', description: 'Pop value and output as ASCII character.' },\n            { instruction: '#', description: 'Bridge: Skip next cell.' },\n            { instruction: 'p', description: 'A \"put\" call (a way to store a value for later use). Pop y, x, and v, then change the character at (x,y) in the program to the character with ASCII value v.' },\n            { instruction: 'g', description: 'A \"get\" call (a way to retrieve data in storage). Pop y and x, then push ASCII value of the character at that position in the program.' },\n            { instruction: '&', description: 'Ask user for a number and push it.' },\n            { instruction: '~', description: 'Ask user for a character and push its ASCII value.' },\n            { instruction: '@', description: 'End program.' },\n            { instruction: '\" \"', description: 'No-op. Does nothing' }\n        ];\n\n        this.BuildHelpString();\n    }\n\n    private BuildHelpString(): void {\n        this.instructionPaddingEnd = ArrayHelper\n            .Max(this.instructions, (a, b) => a.instruction.length < b.instruction.length)\n            .instruction.length;\n\n        this.helpString = this.instructions\n            .map(x => ` ${x.instruction.padEnd(this.instructionPaddingEnd)} ${x.description}`)\n            .join('\\n');\n    }\n\n    private NewLineFormatter(str: string): AutoWordWrapResult {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory(\n            {\n                ASCIIRange: { Start: ' ', End: '~' },\n                Font: { Name: 'Roboto', Size: this.lineHeight * this.group.Scale }\n            });\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        let instructionIdx = 1;\n        const instructionRange: [number, number][] = [[1, 1 + this.instructions[0].instruction.length]];\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                instructionRange.push([n + 2, n + 2 + this.instructions[instructionIdx++].instruction.length]);\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.display!.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n', ...' '.repeat(this.instructionPaddingEnd + 2));\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return { text: strArr.join(''), instructionRange };\n    }\n\n    ToggleHelp(): void {\n        if (this.display === null) {\n            this.display = this.uiRenderer.CreateTextList(\n                { x: 0, y: 0 },\n                {\n                    width: Math.min(this.maxWidth, this.settings.ViewDimension.Width) / this.group.Scale,\n                    height: this.settings.ViewDimension.Height / this.group.Scale * 0.75\n                },\n                6,\n                '',\n                { borderWidth: 2, fillColor: [1, 1, 1, 1] },\n                this.lineHeight,\n                this.group);\n\n            const formatedHelp = this.NewLineFormatter(this.helpString);\n\n            this.display.Text = formatedHelp.text;\n            formatedHelp.instructionRange.forEach(x => this.display!.StyleRange(x[0], x[1], { color: [0.9058823529411765, 0.2980392156862745, 0.23529411764705882] }));\n        } else {\n            this.display.Destroy();\n            this.display = null;\n        }\n    }\n}\n\nInversify.bind(LanguageSyntaxHelpControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle, timeout: number): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), timeout);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string, timeout = 5000): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] },\n            timeout\n        );\n    }\n\n    ShowWarning(msg: string, timeout = 5000): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] },\n            timeout\n        );\n    }\n\n    ShowInformation(msg: string, timeout = 5000): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] },\n            timeout\n        );\n    }\n\n    ShowSuccess(msg: string, timeout = 5000): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] },\n            timeout\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'x', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: 0,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n\n\n        const enter = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Enter, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Enter'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => enter.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { LanguageSyntaxHelpControls } from \"./LanguageSyntaxHelpControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface ScrollEvent {\n    startX: number;\n    startY: number;\n    scroll: number;\n    units: 'px' | 'row';\n}\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(LanguageSyntaxHelpControls) private languageSyntaxHelpControls: LanguageSyntaxHelpControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get LanguageSyntaxHelpControls(): LanguageSyntaxHelpControls {\n        return this.languageSyntaxHelpControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Scroll(e: ScrollEvent): boolean {\n        e.startY = this.gl.canvas.height - e.startY;\n\n        const textList = this.uiRenderer.FindTextList(e.startX, e.startY);\n\n        if (textList === null) {\n            return false;\n        }\n\n        if (e.units === 'px') {\n            textList.ScrollAligned(e.scroll);\n        } else if (e.units === 'row') {\n            textList.ScrollAligned(e.scroll * textList.LineHeight);\n        }\n\n        return true;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        this.ValidateLocation(column, row);\n\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        queueMicrotask(() => {\n            let x = 0, y = 0;\n            switch (position) {\n                case TooltipPosition.LeftBottom:\n                    x = margin + column * cellSize;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n                case TooltipPosition.LeftTop:\n                    x = margin + column * cellSize;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightTop:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightBottom:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n            }\n\n            instance.Position = { x, y };\n        });\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private ValidateLocation(column: number, row: number): void {\n        const dimension = this.codeEditorRenderer.Dimension;\n        if (!this.codeEditorRenderer.IsValidLocation(column, row)) {\n            throw new Error(`Invalid location ${column}:${row}. Valid column: [0, ${dimension.Columns}); row: [0, ${dimension.Rows})`);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    get RawRef(): T[] {\n        return this.data;\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    private tooltipReleaser: TooltipReleaser[] = [];\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.ShowTooltips([cell]);\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.ShowTooltips([p0, p1]);\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n\n    private ShowTooltips(locations: Vec2[]): void {\n        this.tooltipReleaser.forEach(x => x());\n        this.tooltipReleaser.length = 0;\n\n        locations\n            .forEach(loc => this.tooltipReleaser.push(this.tooltipService.Tooltip(loc.x, loc.y, this.FormatCellLocation(loc), TooltipPosition.RightBottom)));\n    }\n\n    private FormatCellLocation(location: Vec2): string {\n        return `${location.x}:${location.y}`;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n    get PivotTouch(): Vec2;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(\n        private editableCell: EditableTarget,\n        private pivotTouch: Vec2) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        this.pivotTouch = cell;\n\n        return this;\n    }\n\n    get PivotTouch(): Vec2 {\n        return this.pivotTouch;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    constructor(\n        private editableCell: EditableTarget,\n        private pivotTouch: Vec2) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.pivotTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell, this.pivotTouch);\n    }\n\n    get PivotTouch(): Vec2 {\n        return this.pivotTouch;\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell, { x: 0, y: 0 });\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        if ((this.editableCell.Target.lt.x === this.touchBehavior.PivotTouch.x || this.editableCell.Target.rb.x === this.touchBehavior.PivotTouch.x) &&\n            (this.editableCell.Target.lt.y === this.touchBehavior.PivotTouch.y || this.editableCell.Target.rb.y === this.touchBehavior.PivotTouch.y)) {\n            this.touchBehavior = new SelectCellsRegion(this.editableCell, this.touchBehavior.PivotTouch);\n        } else {\n            this.touchBehavior = new SelectCellsRegion(this.editableCell, this.editableCell.Target.lt);\n        }\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let nonSpaceIdx = this.input.findIndex(x => x !== ' ');\n\n    if (['-', '+'].includes(this.input[nonSpaceIdx])) {\n      ++nonSpaceIdx;\n    }\n\n    let numberEnd = nonSpaceIdx;\n\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      char = this.input[++numberEnd]);\n\n\n    if (numberEnd === nonSpaceIdx) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { ArrayHelper } from \"../ArrayHelper\";\nimport { Array2D, Index2D } from \"../containers/Array2D\";\nimport { EnumSize } from \"../EnumSize\";\n\nimport { CPU, PCDirection } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class CellHitsFlow {\n    private stats: Array2D<number>;\n\n    constructor() {\n        const directionsCount = EnumSize(PCDirection);\n        this.stats = Array2D.WithProvider(directionsCount, directionsCount, () => 0);\n    }\n\n    Update(index: Index2D, updater: (value: number) => number): void {\n        this.stats.Update(index, updater);\n    }\n\n    get Max(): number {\n        return ArrayHelper.Max(this.stats.RawRef, (a, b) => a < b)\n    }\n\n    get Total(): number {\n        let totalHits = 0;\n        this.stats.ForEach(x => totalHits += x);\n\n        return totalHits;\n    }\n\n    Normalized(max: number): number[] {\n        return this.stats.Map(x => x / max).RawRef;\n    }\n}\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<CellHitsFlow> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => new CellHitsFlow());\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n\n            const hitsFlow = heatmap.Get({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            });\n\n            const from = this.target.PC.Direction;\n\n            this.target.ExecuteNext();\n\n            const to = this.target.PC.Direction;\n\n            hitsFlow.Update({\n                column: from,\n                row: to\n            }, x => x + 1);\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`, 1000);\n                this.overlay.IOControls.SwitchTab(false);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nconst float PI = 3.1415926535897932384626433832795f;\\nconst float circleRadius = 0.03f;\\nconst float sector = 1.f / 3.f;\\nconst float subsector = 1.f / 9.f;\\n\\nconst float lowSpeed = 1.f / 5.f;\\nconst float mediumSpeed = 1.f / 2.f;\\nconst float highSpeed = 1.f;\\nconst float speed[4] = float[](0.f, lowSpeed, mediumSpeed, highSpeed);\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n/*\\n* Each 2 bits describe frequency of hits flow in an direction.\\n* RR, DR, LR, UR,\\n* RD, DD, LD, UD,\\n* RL, DL, LL, UL,\\n* RU, DU, LU, UU\\n*/\\nflat in uint v_hitsFlow;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    if(v_color.a == 0.0f) {\\n        discard;\\n    }\\n\\n    float columnWidth = 1.f / 32.f;\\n    uint bitIdx = uint(floor(v_uvCoord.x / columnWidth));\\n    float bit = float(v_hitsFlow >> bitIdx & uint(1));\\n    out_color = vec4(bit, 0, 0, 0.9f);\\n\\n    uint rightRight = v_hitsFlow & uint(3);\\n    uint downRight = v_hitsFlow >> 2 & uint(3);\\n    uint leftRight = v_hitsFlow >> 4 & uint(3);\\n    uint upRight = v_hitsFlow >> 6 & uint(3);\\n    uint rightDown = v_hitsFlow >> 8 & uint(3);\\n    uint downDown = v_hitsFlow >> 10 & uint(3);\\n    uint leftDown = v_hitsFlow >> 12 & uint(3);\\n    uint upDown = v_hitsFlow >> 14 & uint(3);\\n    uint rightLeft = v_hitsFlow >> 16 & uint(3);\\n    uint downLeft = v_hitsFlow >> 18 & uint(3);\\n    uint leftLeft = v_hitsFlow >> 20 & uint(3);\\n    uint upLeft = v_hitsFlow >> 22 & uint(3);\\n    uint rightUp = v_hitsFlow >> 24 & uint(3);\\n    uint downUp = v_hitsFlow >> 26 & uint(3);\\n    uint leftUp = v_hitsFlow >> 28 & uint(3);\\n    uint upUp = v_hitsFlow >> 30 & uint(3);\\n\\n    out_color = v_color;\\n\\n    if(rightRight > uint(0)) {\\n        float x = fract(u_time * speed[rightRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(downRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[downRight] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftRight > uint(0)) {\\n        float x = fract(u_time * speed[leftRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(1.f - x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upRight]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[upRight] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[upRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightDown > uint(0)) {\\n        {\\n            float x = mod(fract(u_time * speed[rightDown]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[rightDown] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[rightDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(1.f - u_time * speed[downDown] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(leftDown > uint(0)) {\\n        {\\n            float x = mod(1.f - fract(u_time * speed[leftDown]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[leftDown] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[leftDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upDown] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightLeft > uint(0)) {\\n        float x = fract(u_time * speed[rightLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(1.5f * sector - (x - 1.5f * sector), y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downLeft]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[downLeft] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[downLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftLeft > uint(0)) {\\n        float x = 1.f - fract(u_time * speed[leftLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(upLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upLeft]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[upLeft] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[upLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[rightUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[rightUp] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[rightUp]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[downUp] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[leftUp] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.0f - fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upUp] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n}\\n\"","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\nin uint a_hitsFlow;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\nflat out uint v_hitsFlow;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() {\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1f, 1.0f);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n  v_hitsFlow = a_hitsFlow;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_hitsFlow',\n                size: 1,\n                type: gl.UNSIGNED_INT\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n        super.Draw();\n    }\n}\ninterface HeatmapCellAttributes {\n    color: Rgba;\n    hitsFlow: number;\n}\n\nexport type HeatmapRenderInfo = Array2D<HeatmapCellAttributes>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapRenderInfo): HeatmapGridRenderer {\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const attributes = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: 0, y: 0 },\n                        B: { x: 1, y: 1 }\n                    },\n                    attributes.color,\n                    attributes.hitsFlow);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba,\n        hitsFlow: number\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color,\n                [hitsFlow]\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapRenderInfo) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapRenderInfo]>(ctx => (data: HeatmapRenderInfo) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer, HeatmapRenderInfo } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { CellHitsFlow } from \"@/lib/befunge/Profiler\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<CellHitsFlow>;\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const max = this.MaxHits(this.heatmap);\n        const renderInfo: HeatmapRenderInfo = this.heatmap\n            .Map(x => ({ color: this.HitsToColor(x.Total), hitsFlow: this.PackHitsFlow(x.Normalized(max)) }));\n\n        const renderer = this.heatmapGridRendererFactory(renderInfo);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private MaxHits(stats: HeatmapHitStats): number {\n        let max = 0;\n\n        stats.ForEach(x => max = Math.max(max, x.Max));\n\n        return max;\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private PackHitsFlow(normalizedHitsFlow: number[]): number {\n        return normalizedHitsFlow.reduce((packed, x, n) => {\n            if (x >= 0.66) {\n                return packed | 3 << 2 * n;\n            } else if (x >= 0.33) {\n                return packed | 2 << 2 * n;\n            } else if (x > 0) {\n                return packed | 1 << 2 * n;\n            }\n\n            return packed;\n        }, 0);\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x.Total));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits.Total > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.Total.toString(), TooltipPosition.LeftBottom);\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","import { vec2 } from \"gl-matrix\";\n\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: CameraService,\n        private destination: vec2,\n        private viewport: Viewport\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.viewport);\n\n        this.camera.Translate({\n            x: delta.x,\n            y: delta.y\n        });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { ZCameraBoundary } from \"../AppSettings\";\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: CameraService,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera.Position.z + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        this.camera.Translate({ z: delta });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","export class AbortOperationException extends Error { }\n\nexport interface FileStorage {\n    Open(): Promise<string>;\n    Save(content: string): Promise<void>;\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","import { vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { AppSettingsCodec, ShareableAppSettings } from './AppSettingsCodec';\nimport { CameraService } from './CameraService';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { AbortOperationException, FileStorage } from '@/lib/DOM/FileStorage/FileStorage';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FileStorage) private fileStorage: FileStorage,\n        @inject(CameraService) private camera: CameraService,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera.MoveTo(\n            {\n                x: 0,\n                y: 0,\n                z: this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75\n            });\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.FocusCameraAtEditor();\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.ShowHelpObservable.Attach(() => this.overlay.LanguageSyntaxHelpControls.ToggleHelp());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.camera.Resize();\n\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnPan(e: MouseMovementEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.startX,\n            startY: e.startY,\n            scroll: -e.movementY / window.devicePixelRatio,\n            units: 'px'\n        })) {\n            const delta = Camera.UnprojectMovement(\n                { x: e.movementX, y: e.movementY },\n                { a: 0, b: 0, c: 1, d: 0 },\n                this.camera.ViewProjection,\n                this.gl.canvas);\n\n            this.camera.Translate({ x: delta.x, y: delta.y });\n\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.offsetX,\n            startY: e.offsetY,\n            scroll: Math.sign(e.deltaY),\n            units: 'row'\n        })) {\n            const smoothCameraZoomEffect = new SmoothCameraZoom(\n                e.deltaY < 0 ? 'in' : 'out',\n                this.camera,\n                this.settings.ZCameraBoundary);\n\n            this.effectRunner.Register(\n                smoothCameraZoomEffect,\n                { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n        }\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera.Position.z;\n    }\n\n    OnTouchZoom(zoom: number): void {\n        this.camera.MoveTo({\n            z: MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            sourceCode = await this.fileStorage.Open();\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message);\n            }\n\n            return;\n        }\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            await this.fileStorage.Save(this.SourceCodeString());\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const source_code = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        const shareableSettings = this.ShareableSettings();\n        const settings = shareableSettings ? AppSettingsCodec.Encode(shareableSettings) : '';\n\n        router.replace({ name: 'Share', params: { source_code, settings } });\n    }\n\n    private ShareableSettings(): ShareableAppSettings | null {\n        const settings: ShareableAppSettings = {};\n\n        if (this.overlay.DebugControls.IsHeatmapShown) {\n            settings.heatmap = true;\n        }\n\n        if (this.overlay.IOControls.Input.length > 0) {\n            settings.input = this.overlay.IOControls.Input;\n        }\n\n        return Object.keys(settings).length > 0 ? settings : null;\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    LoadSettings(settings: ShareableAppSettings): void {\n        if (settings.input !== undefined) {\n            this.overlay.IOControls.Input = settings.input;\n        }\n\n        if (settings.heatmap !== undefined) {\n            this.overlay.DebugControls.ClickOnHeatmap();\n        }\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.camera.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.camera.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        this.camera.Translate({\n            x: -intersection[0],\n            y: -intersection[1]\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","export async function WaitEvent<TEvent extends Event>(target: HTMLElement, event: string): Promise<TEvent> {\n    return new Promise<TEvent>(resolve => target.addEventListener(event, e => resolve(e as TEvent), { once: true }));\n}\n","import { injectable } from \"inversify\";\n\nimport { WaitEvent } from \"../EventWaiter\";\n\nimport { FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class DOMEmulatedFileStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        const input = document.createElement('input');\n\n        input.type = 'file';\n        const onChange = WaitEvent(input, 'change');\n\n        input.click();\n\n        const onChangeResult = await onChange;\n\n        const target = onChangeResult.target as HTMLInputElement | null;\n\n        if ((target?.files?.length ?? 0) === 0) {\n            throw new Error('Failed to load file');\n        }\n\n        this.openedFilename = target!.files![0].name;\n\n        return target!.files![0].text();\n    }\n\n    async Save(content: string): Promise<void> {\n        const blob = new Blob([content], { type: 'text/plain' });\n\n        const url = window.URL.createObjectURL(blob);\n\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.openedFilename;\n\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AbortOperationException, FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class FilePickerApiDiskStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                throw new AbortOperationException();\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            return file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n\n    async Save(content: string): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(content);\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { DOMEmulatedFileStorage } from \"@/lib/DOM/FileStorage/DOMEmulatedFileStorage\";\nimport { FilePickerApiDiskStorage } from \"@/lib/DOM/FileStorage/FilePickerApiFileStorage\";\nimport { FileStorage } from \"@/lib/DOM/FileStorage/FileStorage\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n\n        Inversify\n            .bind<FileStorage>(InjectionToken.FileStorage)\n            .to(this.IsPickerApiAvailable ? FilePickerApiDiskStorage : DOMEmulatedFileStorage)\n            .inSingletonScope();\n    }\n\n    private get IsPickerApiAvailable(): boolean {\n        return window.showOpenFilePicker !== undefined &&\n            window.showSaveFilePicker !== undefined;\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { AppSettingsCodec } from './AppSettingsCodec';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: {\n  source_code: { required: false, type: String, default: '' },\n  settings: { required: false, type: String, default: '' }\n},\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.source_code.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.source_code);\n      service.LoadSourceCodeToEditor(sourceCode);\n\n      if (props.settings.length > 0) {\n        const settings = AppSettingsCodec.Decode(props.settings);\n        service.LoadSettings(settings);\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:source_code/:settings?',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7690); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","pan","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","startX","window","devicePixelRatio","startY","movementX","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnPan","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","__decorate","injectable","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","FileStorage","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","Inversify","Container","AppSettings","gl","PI","Width","Height","AspectRatio","canvas","width","height","DevicePixelRatio","__param","inject","WebGL2RenderingContext","_a","Object","bind","toSelf","inSingletonScope","DecodingException","AppSettingsCodec","settings","btoa","JSON","stringify","encoded","parse","atob","PropsValidation","DOMException","name","SyntaxError","assertions","NotNull","msg","startSymbolCode","Columns","Rows","GlyphCount","Image","LookupUV","symbol","symbolCode","charCodeAt","glyphIdx","column","row","floor","glyphWidth","glyphHeight","leftTop","A","B","FontAtlasBuilderImpl","Build","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","ceil","rowCount","glyphCellSize","GlyphCellSize","SetupCanvas","FillCanvasWithGlyphs","context","getImageData","document","createElement","getContext","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","PrimitiveBuilder","position","dimension","attributes","leftBottom","rightTop","rightBottom","attr","Array","isArray","push","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ArrayHelper","array","comparator","dest","destStart","src","srcStart","ShaderProgram","Map","instance","createProgram","Attach","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","async","url","fetch","text","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","get","getUniformLocation","set","TypeSizeResolver","Sizes","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","ArrayBuffer","Setup","SetupAttributes","UploadAttributes","vertexCount","componentsPerVertex","vertexData","stride","vertexStart","attrDescIdx","offset","byteOffset","size","Resolve","attrInfo","target","slice","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdatePrimitiveComponents","vertexDataOffsetStart","attributeOffset","modifiedData","bufferSubData","PrimitiveComponents","index","PrimitiveComponentsRange","primitiveStartIdx","primitivesCount","ComponentsPerPrimitive","fill","vertexIdx","attrIdx","indicesPerPrimitive","Copy","TotalPrimitives","ComponentsPerVertex","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","reduce","acc","location","enableVertexAttribArray","IsIntegerAttributesType","vertexAttribIPointer","vertexAttribPointer","normalized","IntegerTypes","includes","unmanaged","EditorGridRenderer","fontAtlas","fontAtlasTexture","super","FGrid","VGrid","TRIANGLES","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","cell","BuildCell","CellSize","cellIdx","cellAttrs","symbolUV","UVStartOffset","bindTexture","TEXTURE_2D","color","uv","ViewProjection","mat","Dimension","_b","_c","_d","WebGLTexture","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","AABBFrame","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionRenderer","_class","editorGridRenderer","FSelection","VSelection","SelectionRenderer_1","IndicesPerPrimitive","Select","SelectRegion","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","findIndex","r","a","b","colorOffset","attrs","colorStart","point","Unselect","UnselectRegion","splice","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","viewProjection","Clear","IsValidLocation","Transformation","movable","destination","betweenByX","Between","lb","rt","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","Min","diff","leftToRight","rightToLeft","bottomToTop","topToBottom","intersectByX","intersectByY","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","rectangle","aTopRight","bTopRight","Camera","viewport","vec","z","v","vec4","invertViewProj","mat4","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","CameraService","codeEditorRenderer","UpdateProjection","UpdateViewProjection","MoveTo","undefined","camera","MaintainCodeEditorVisible","Translate","Position","Resize","projection","Fovy","ZNear","ZFar","view","cellSize","lbNDC","rtNDC","ndcCompensation","ShortestMoveForIntersection","screenCompensation","ViewDimension","worldCompensation","UnprojectMovement","HeadlineControlsLayout","POSITIVE_INFINITY","Watch","component","Observable","ComponentUpdated","components","AbsolutePosition","absolutePosition","Scale","skipUpdates","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","absoluteExtremum","flatMap","MapComponent","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","IllegalInstructionException","Where","Opcode","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","priority","descriptor","observers","MaintainSorted","DetachAll","Notify","sender","o","temp","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","sort","pack","maxHeightInRow","items","TextureAtlas","ClonePackage","NormalizePackage","found","UndefinedUV","TextureAtlasBuilder","filename","images","packer","img","packed","CreateImage","drawImage","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","QuestionMark","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","Enter","icon","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","UIObservableAlert","zIndex","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","MemoryPoolTracker","capacity","NoFree","pool","from","_","nextFree","Allocate","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","UIAlertIconRenderer","FUIALertIcon","VUIAlertIcon","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","alertIconComponents","panelComponents","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","alertIconsComponents","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","iconSideLength","iconMargin","UpdateComponent","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_e","UIObservableEditableTextList","containerStyle","textList","CreateTextList","begin","end","OnVanish","onVanish","OnInput","keyCode","key","toDelete","ContainerStyle","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","ScrollAligned","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","buttonOutlineAttrs","buttonComponents","buttonOutlineComponents","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","outlineColor","UpdatedProperty","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","changedProperties","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","ChangedProperties","PrintableTextLength","split","filter","char","NonPrintableSymbols","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","OnlyPositionChanged","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","world","xOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","BorderWidth","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","stencilComponents","borderComponents","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","UIObservableTextListDeleter","uiTextLists","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchTextList","FindTextList","intersected","AABBRectanglePoint","Max","desc","_f","DebugAction","DebugControls","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","ClickOnHeatmap","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","FileControls","openButtonIconColor","saveButtonIconColor","helpButtonIconColor","openButton","FileControls_1","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","helpButton","ToggleHelpButton","helpShowed","showHelpObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","ShowHelpObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","LanguageSyntaxHelpControls","instructions","instruction","description","BuildHelpString","instructionPaddingEnd","helpString","padEnd","instructionIdx","instructionRange","display","repeat","ToggleHelp","formatedHelp","SnackbarControls","Show","timeout","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","EnumSize","keys","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","enter","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","languageSyntaxHelpControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","Scroll","units","_g","_h","_j","_k","_l","_m","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","TooltipPosition","CodeEditorTooltipService","perspectiveLabelRenderer","Tooltip","ValidateLocation","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","RawRef","EditableTarget","editorSourceCode","tooltipService","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ShowTooltips","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","locations","tooltipReleaser","FormatCellLocation","interfaces","AutoFactory","SelectCellBehaiver","editableCell","pivotTouch","PivotTouch","SelectCellsRegion","CodeEditorService","overlay","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","clipboard","writeText","CPUImpl","memory","io","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","nonSpaceIdx","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","CellHitsFlow","directionsCount","stats","Total","totalHits","Normalized","Profiler","CellHeatmapFor","heatmap","hitsFlow","to","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","MaxHits","renderInfo","HitsToColor","PackHitsFlow","hits","maxHits","lowHitsColor","hitsColorsDiff","normalizedHitsFlow","highHitsColor","HeatMapGridFactory","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","SmoothCameraMove","IsDone","isDone","fract","duration","progress","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","copy","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","AbortOperationException","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","fileStorage","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","OnWheel","sign","deltaY","smoothCameraZoomEffect","touchZoomStartZ","OnKeyDown","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","SourceCodeString","sourceString","trimEnd","source_code","Encode","shareableSettings","ShareableSettings","params","ResetSourceCodeEditor","LoadSettings","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","WaitEvent","event","addEventListener","once","DOMEmulatedFileStorage","onChange","click","onChangeResult","files","openedFilename","content","blob","Blob","URL","createObjectURL","href","download","revokeObjectURL","FilePickerApiDiskStorage","fileHandle","showOpenFilePicker","multiple","kind","file","getFile","showSaveFilePicker","suggestedName","stream","createWritable","write","close","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","IsPickerApiAvailable","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}