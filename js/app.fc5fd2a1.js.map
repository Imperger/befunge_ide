{"version":3,"file":"js/app.fc5fd2a1.js","mappings":"uPACEA,EAAAA,EAAAA,IAAeC,E,aCAjB,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,Q,WCHEC,EAAAA,EAAAA,GAAS,iCAA4C,CACnDC,QACEC,QAAQC,IACN,qGAGJ,EACAC,aACEF,QAAQC,IAAI,sCACd,EACAE,SACEH,QAAQC,IAAI,2CACd,EACAG,cACEJ,QAAQC,IAAI,8BACd,EACAI,UACEL,QAAQC,IAAI,4CACd,EACAK,UACEN,QAAQC,IACN,gEAEJ,EACAM,MAAMA,GACJP,QAAQO,MAAM,4CAA6CA,EAC7D,I,IC/BQC,E,mGAAZ,SAAYA,GACVA,EAAAA,EAAA,kBACAA,EAAAA,EAAA,kBACAA,EAAAA,EAAA,oBACAA,EAAAA,EAAA,oBACAA,EAAAA,EAAA,gCACAA,EAAAA,EAAA,sCACD,EAPD,CAAYA,IAAAA,EAAY,KCOlB,MAAOC,EACTC,aAAaC,EAAeC,EAAaC,GACrC,OAAOC,KAAKD,IAAIC,KAAKF,IAAID,EAAOE,GAAMD,EAC1C,CAEAF,eAAeC,EAAeC,EAAaC,GACvC,OAAOF,GAASC,GAAOD,GAASE,CACpC,CAEAH,aAAaK,EAAWC,EAAWC,EAAYC,OAAOC,SAClD,OAAOL,KAAKM,IAAIL,EAAIC,GAAKC,CAC7B,CAEAP,gBAAgBW,GACZ,GAAsB,IAAlBA,EAAOC,OACP,MAAM,IAAIC,MAAM,sBAGpB,MAAMX,EAAM,IAAKS,EAAO,IAClBR,EAAM,IAAKQ,EAAO,IAExB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAOC,SAAUE,EAAG,CACpC,MAAMC,EAAIJ,EAAOG,GAEbC,EAAEV,EAAIH,EAAIG,IACVH,EAAIG,EAAIU,EAAEV,GAGVU,EAAEV,EAAIF,EAAIE,IACVF,EAAIE,EAAIU,EAAEV,GAGVU,EAAET,EAAIJ,EAAII,IACVJ,EAAII,EAAIS,EAAET,GAGVS,EAAET,EAAIH,EAAIG,IACVH,EAAIG,EAAIS,EAAET,EAElB,CAEA,MAAO,CAAEJ,MAAKC,MAClB,CAEAH,gBAAgBgB,EAAUC,GACtB,OAAOb,KAAKc,KAAKnB,EAASoB,YAAYH,EAAIC,GAC9C,CAEOjB,mBAAmBgB,EAAUC,GAChC,OAAOb,KAAKgB,IAAIJ,EAAGX,EAAIY,EAAGZ,EAAG,GAAKD,KAAKgB,IAAIJ,EAAGV,EAAIW,EAAGX,EAAG,EAC5D,E,6bClDJ,MAAMe,EAMFC,YACYC,EACAC,IAAmBC,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,sBAPN,IAACA,EAAAA,EAAAA,GAAA,6BACY,CAAEpB,EAAG,EAAGC,EAAG,KAAGmB,EAAAA,EAAAA,GAAA,iBAEjC,GAGP,KAAAF,eAAAA,EACA,KAAAC,YAAAA,CAAuB,CAEnCE,YAAYC,GACRC,KAAKC,eAAiBC,KAAKC,MAC3BH,KAAKI,sBAAsB3B,EAAIsB,EAAEM,QACjCL,KAAKI,sBAAsB1B,EAAIqB,EAAEO,OACrC,CAEAC,UAAUR,GACN,MAAMS,EAAWC,EAAAA,GACb,CAACT,KAAKI,sBAAsB3B,EAAGuB,KAAKI,sBAAsB1B,GAC1D,CAACqB,EAAEM,QAASN,EAAEO,UAEZI,EAAcR,KAAKC,MAAQH,KAAKC,eAEtCD,KAAKW,SAAWH,GAAYR,KAAKJ,aAAec,GAAeV,KAAKL,cACxE,CAEIiB,eACA,OAAOZ,KAAKW,QAChB,EAqBJ,MAAME,EAGFnB,YAAoBoB,IAAwBjB,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,yBAAxB,KAAAiB,WAAAA,CAA4B,CAEhDC,aAAahB,GACT,MAAMiB,EAAQjB,EAAEkB,cAAc,GAC9BjB,KAAKkB,UAAY,CACbC,GAAIH,EAAMI,WACV3C,EAAGuC,EAAMK,MACT3C,EAAGsC,EAAMM,MAEjB,CAEAC,YAAYxB,GACR,GAAIA,EAAEkB,cAAcO,KAAK,IAAIJ,aAAepB,KAAKkB,UAAUC,GACvD,OAGJ,MAAMH,EAAQjB,EAAEkB,cAAc,GAE9BjB,KAAKc,WAAW,CACZW,WAAYT,EAAMK,MAAQrB,KAAKkB,UAAUzC,GAAKiD,OAAOC,iBACrDC,WAAYZ,EAAMM,MAAQtB,KAAKkB,UAAUxC,GAAKgD,OAAOC,mBAGzD3B,KAAKkB,UAAUzC,EAAIuC,EAAMK,MACzBrB,KAAKkB,UAAUxC,EAAIsC,EAAMM,KAC7B,EAOE,MAAOO,EAMTnC,YACYoC,EACAC,IAA4BlC,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,YAPF,CAClC,CAAEsB,IAAK,EAAG1C,EAAG,EAAGC,EAAG,GACnB,CAAEyC,IAAK,EAAG1C,EAAG,EAAGC,EAAG,KAIX,KAAAoD,UAAAA,EACA,KAAAC,aAAAA,CACR,CAEGhB,aAAahB,GACe,IAA3BA,EAAEkB,cAAcjC,SAIpBgB,KAAK8B,YAEL9B,KAAKgC,YAAYjC,GACrB,CAEOkC,WAAWlC,GACd,IAAIA,EAAEkB,eAAeiB,SAAQlB,IACzB,MAAMmB,EAAYnC,KAAKoC,KAAKC,MAAK5D,GAAKA,EAAE0C,KAAOH,EAAMI,aAEjDe,IACAA,EAAUhB,IAAM,EACpB,GAER,CAEOI,YAAYxB,GACf,GAC+B,IAA3BA,EAAEkB,cAAcjC,SACfgB,KAAKoC,KAAKE,OAAMC,IAAuB,IAAdA,EAAMpB,KAEhC,OAGJpB,EAAEyC,iBAEF,MAAOpD,EAAIC,IACPU,EAAEkB,cAAc,GAAGG,aAAepB,KAAKoC,KAAK,GAAGjB,GACzC,CAACpB,EAAEkB,cAAc,GAAIlB,EAAEkB,cAAc,IACrC,CAAClB,EAAEkB,cAAc,GAAIlB,EAAEkB,cAAc,KAC7CwB,KAAIzB,IAAS,CAAGvC,EAAGuC,EAAMK,MAAO3C,EAAGsC,EAAMM,UAErCoB,EAAQvE,EAASwE,SAAS3C,KAAKoC,KAAK,GAAIpC,KAAKoC,KAAK,IAClDQ,EAAQzE,EAASwE,SAASvD,EAAIC,GAEpCW,KAAK+B,aAAaW,EAAQE,EAC9B,CAEQZ,YAAYjC,GAChB,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAEkB,cAAcjC,SAAUE,EAC1Cc,KAAKoC,KAAKlD,GAAGiC,GAAKpB,EAAEkB,cAAc/B,GAAGkC,WACrCpB,KAAKoC,KAAKlD,GAAGT,EAAIsB,EAAEkB,cAAc/B,GAAGmC,MACpCrB,KAAKoC,KAAKlD,GAAGR,EAAIqB,EAAEkB,cAAc/B,GAAGoC,KAE5C,EAIG,IAAeuB,EAAf,MAMHnD,eAAAG,EAAAA,EAAAA,GAAA,sBALkC,IAAIJ,EAAiB,IAAK,KAAEI,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,yBAM1DG,KAAK8C,SAAW,IAAIjC,GAAUd,GAA0BC,KAAK+C,aAAahD,KAC1EC,KAAKgD,UAAY,IAAInB,GACjB,IAAM7B,KAAKiD,qBACVC,GAAiBlD,KAAKmD,YAAYD,IAE3C,CAEAE,YAAYrD,GACJA,EAAEsD,QAAUnF,EAAaoF,MACzBtD,KAAK+C,aAAa,CACdtB,UAAW1B,EAAE0B,UAAYC,OAAOC,iBAChCC,UAAW7B,EAAE6B,UAAYF,OAAOC,kBAG5C,CAEA7B,YAAYC,GACRC,KAAKuD,eAAezD,YAAYC,EACpC,CAEAQ,UAAUR,GACNC,KAAKuD,eAAehD,UAAUR,GAE1BC,KAAKuD,eAAe3C,UACpBZ,KAAKwD,SAAS,CACVnD,QAASN,EAAEM,QAAUqB,OAAOC,iBAC5BrB,QAASP,EAAEO,QAAUoB,OAAOC,kBAGxC,CAEA8B,QAAQ1D,GACJC,KAAK0D,WAAW3D,EACpB,CAEAgB,aAAahB,GACTC,KAAK8C,SAAS/B,aAAahB,GAC3BC,KAAKgD,UAAUjC,aAAahB,EAChC,CAEAwB,YAAYxB,GACRC,KAAK8C,SAASvB,YAAYxB,GAC1BC,KAAKgD,UAAUzB,YAAYxB,EAC/B,CAEAkC,WAAWlC,GACPC,KAAKgD,UAAUf,WAAWlC,EAC9B,GAtDkB8C,EAAmBc,EAAA,EADxCC,EAAAA,EAAAA,KAAY,2BACSf,GC1Jf,MAAMgB,EAAiB,CAC1BC,sBAAuBC,OAAO,4BAC9BC,UAAWD,OAAO,cAClBE,UAAWF,OAAO,cAClBG,iBAAkBH,OAAO,gBACzBI,iBAAkBJ,OAAO,gBACzBK,2BAA4BL,OAAO,iCACnCM,2BAA4BN,OAAO,iCACnCO,wBAAyBP,OAAO,6BAChCQ,0BAA2BR,OAAO,8BAClCS,sCAAuCT,OAAO,0CAC9CU,kCAAmCV,OAAO,uCAIjCW,EAA4B,CACrCC,YAAaZ,OAAO,gCACpBa,OAAQb,OAAO,mBAGNc,EAA2B,CACpCC,uBAAwBf,OAAO,2BAC/BgB,uBAAwBhB,OAAO,4BAGtBiB,EAA4B,CACrCC,SAAUlB,OAAO,yBAGRmB,EAAmC,CAC5CD,SAAUlB,OAAO,wBACjBoB,YAAapB,OAAO,4B,aC7BxB,MAAMqB,EAAY,IAAIC,EAAAA,E,+eCgBf,IAAMC,EAAN,MACH5F,YAAkE6F,IAA0B1F,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,aAIpE,IAACA,EAAAA,EAAAA,GAAA,YAEF,MAAGA,EAAAA,EAAAA,GAAA,YAEH,GAAK,IAAMrB,KAAKgH,KAAE3F,EAAAA,EAAAA,GAAA,uBAEU,CAAEvB,IAAK,GAAIC,IAAK,OAAKsB,EAAAA,EAAAA,GAAA,mBAEnD,IAACA,EAAAA,EAAAA,GAAA,qBAMY,CAAE4F,MAAO,IAAKC,OAAQ,OAAK7F,EAAAA,EAAAA,GAAA,wBAEnC,MAAIA,EAAAA,EAAAA,GAAA,uBAEL,MAAIA,EAAAA,EAAAA,GAAA,mBAEK,CAAE4F,MAAO,GAAIC,OAAQ,KAxBW,KAAAH,GAAAA,EAC9DvF,KAAK2F,YAAc3F,KAAKuF,GAAGK,OAAOC,MAAQ7F,KAAKuF,GAAGK,OAAOE,MAC7D,CAYWC,uBACP,OAAOrE,OAAOC,gBAClB,GAjBS2D,EAAW3B,EAAA,EADvBC,EAAAA,EAAAA,KAEgBoC,EAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBAAsB,uBAAmC,oBAAnC,EAAmC,qBAAtBoC,wBAAAA,wBAAsBC,EAAAC,UADnFd,GA4BbF,EAAUiB,KAAKf,GAAagB,SAASC,mB,yfCrC9B,IAAMC,EAAN,MAKH9G,YAAyC+G,IAAqB5G,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,cAJvC6G,EAAAA,OAAa7G,EAAAA,EAAAA,GAAA,kBACT6G,EAAAA,OAAa7G,EAAAA,EAAAA,GAAA,sBACT6G,EAAAA,MAEU,KAAAD,SAAAA,EACrCzG,KAAK2G,mBACL3G,KAAK4G,sBACT,CAEAC,OAAOC,QACYC,IAAfD,EAASrI,IAAoBuB,KAAKgH,OAAO,IAAMF,EAASrI,QACzCsI,IAAfD,EAASpI,IAAoBsB,KAAKgH,OAAO,IAAMF,EAASpI,QACzCqI,IAAfD,EAASG,IAAoBjH,KAAKgH,OAAO,IAAMF,EAASG,GAExDjH,KAAK4G,sBACT,CAEAM,UAAUC,GACNT,EAAAA,GACI1G,KAAKgH,OACLhH,KAAKgH,OACL,CACIG,EAAM1I,GAAK,EACX0I,EAAMzI,GAAK,EACXyI,EAAMF,GAAK,IAGnBjH,KAAK4G,sBACT,CAEIQ,eACA,MAAO,CACH3I,EAAGuB,KAAKgH,OAAO,IACftI,EAAGsB,KAAKgH,OAAO,IACfC,EAAGjH,KAAKgH,OAAO,IAEvB,CAEIK,qBACA,OAAOrH,KAAKsH,cAChB,CAEAC,SACIvH,KAAK2G,mBACL3G,KAAK4G,sBACT,CAEQD,mBACJD,EAAAA,GACI1G,KAAKwH,WACLxH,KAAKyG,SAASgB,KACdzH,KAAKyG,SAASd,YACd3F,KAAKyG,SAASiB,MACd1H,KAAKyG,SAASkB,KACtB,CAEQf,uBACJ,MAAMgB,EAAOlB,EAAAA,GAAYA,EAAAA,KAAe1G,KAAKgH,QAC7ChH,KAAKsH,eAAiBZ,EAAAA,GAASA,EAAAA,KAAe1G,KAAKwH,WAAYI,EACnE,GA5DSpB,EAAa7C,EAAA,EADzBC,EAAAA,EAAAA,KAMgBoC,EAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,uBAA8B,oBAA9B,EAA8B,qBAAXA,GAAAA,GAAWa,EAAAC,UALrDI,GA+DbpB,EAAUiB,KAAKG,GAAeF,SAASC,mB,+eC/DhC,IAAMsB,GAAN,MAWHnI,YAAyC+G,IAAqB5G,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,oBAVxC,IAAKA,EAAAA,EAAAA,GAAA,kBAES,KAAEA,EAAAA,EAAAA,GAAA,gBAEb,CAAEpB,EAAGG,OAAOkJ,kBAAmBpJ,EAAGE,OAAOkJ,qBAAmBjI,EAAAA,EAAAA,GAAA,wBAEpD,CAAEpB,EAAGG,OAAOkJ,kBAAmBpJ,EAAGE,OAAOkJ,qBAAmBjI,EAAAA,EAAAA,GAAA,iBAE9D,CAAEgG,MAAO,EAAGC,OAAQ,IAEV,KAAAW,SAAAA,CAAyB,CAElEsB,MAAMC,GACFA,EAAUC,WAAWC,QAAOF,GAAahI,KAAKmI,iBAAiBH,KAE/DhI,KAAKoI,WAAWC,KAAKL,GACrBhI,KAAKmI,iBAAiBH,EAC1B,CAEIZ,eACA,OAAOpH,KAAK8G,QAChB,CAEIwB,uBACA,OAAOtI,KAAKuI,gBAChB,CAEIC,gBACA,OAAOxI,KAAKyI,SAChB,CAEIC,YACA,OAAO1I,KAAKyG,SAASV,gBACzB,CAEQoC,iBAAiBH,GACrB,IAAKhI,KAAK2I,cAAgBX,EAAUU,MAAQ1I,KAAKyG,SAASV,iBAAmB,GAAKiC,EAAUM,iBAAiB7J,EAAIuJ,EAAUQ,UAAU3C,MAAQ7F,KAAKyG,SAASmC,cAAcnD,OAAQ,CAC7K,MAAMoD,EAAS,GACTC,EAAc9I,KAAKyG,SAASmC,cAAcnD,OAASuC,EAAUZ,SAAS3I,EAAIuJ,EAAUQ,UAAU3C,MAAQmC,EAAUU,MAAQG,GACxHE,EAAQvK,KAAKF,IAAIwK,EAAc9I,KAAKyG,SAASV,iBAAmBnH,OAAOC,QAAS,GAEtFmB,KAAK2I,aAAc,EACnB3I,KAAKoI,WAAWlG,SAAQzD,GAAKA,EAAEiK,MAAQK,IACvC/I,KAAK2I,aAAc,CACvB,CAEA3I,KAAKgJ,2BACT,CAEQA,4BACJ,MAAMC,EAAmB9K,EACpB+K,SAASlJ,KAAKoI,WAAW3F,KAAIhE,IAAK,IAAMA,EAAE2I,cAE/CpH,KAAK8G,SAASrI,EAAIwK,EAAiB3K,IAAIG,EACvCuB,KAAK8G,SAASpI,EAAIuK,EAAiB3K,IAAII,EAGvC,MAAMyK,EAAmBhL,EACpB+K,SAASlJ,KAAKoI,WAAWgB,SAAQ3K,GAAKuB,KAAKqJ,aAAa5K,MAE7DuB,KAAKuI,iBAAiB9J,EAAI0K,EAAiB7K,IAAIG,EAC/CuB,KAAKuI,iBAAiB7J,EAAIyK,EAAiB7K,IAAII,EAE/CsB,KAAKyI,UAAU5C,MAAQsD,EAAiB5K,IAAIE,EAAI0K,EAAiB7K,IAAIG,EACrEuB,KAAKyI,UAAU3C,OAASqD,EAAiB5K,IAAIG,EAAIyK,EAAiB7K,IAAII,CAC1E,CAEQ2K,aAAarB,GACjB,MAAMS,EAAYT,EAAUQ,UAE5B,MAAO,CACHR,EAAUM,iBACV,CACI7J,EAAGuJ,EAAUM,iBAAiB7J,EAAIgK,EAAU5C,MAC5CnH,EAAGsJ,EAAUM,iBAAiB5J,EAAI+J,EAAU3C,QAGxD,GA9ES+B,GAAsBlE,EAAA,EADlCC,EAAAA,EAAAA,KAYgBoC,EAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,uBAA8B,oBAA9B,EAA8B,qBAAXA,GAAAA,GAAWa,EAAAC,UAXrDyB,IAiFbzC,EAAUiB,KAAKwB,IAAwBvB,SAASC,mBC3D1C,MAAO+C,GACTlL,iBAAiBmL,EAAcC,GAC3B,MAAMC,EAAKC,EAAAA,GAAS,CAACH,EAAMI,EAAGJ,EAAMK,EAAGL,EAAMM,GAAIL,EAAKG,GAAKJ,EAAMO,EAC3DC,EAAKL,EAAAA,GAAS,CAACH,EAAMI,EAAGJ,EAAMK,EAAGL,EAAMM,GAAIL,EAAKI,GAAKL,EAAMO,EAC3DE,GAAKP,GAAMM,EAAKN,GAChBQ,EAAeP,EAAAA,GAASA,EAAAA,KAAeF,EAAKG,EAAGD,EAAAA,GAAWA,EAAAA,KAAeA,EAAAA,GAASA,EAAAA,KAAeF,EAAKI,EAAGJ,EAAKG,GAAIK,IAExH,MAAO,CAACC,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAC3D,CAEA7L,0BAA0B8L,EAAsBC,GAC5C,OACIA,EAAM1L,GAAKyL,EAAUzL,EAAIyL,EAAUrE,OACnCsE,EAAM1L,GAAKyL,EAAUzL,GACrB0L,EAAMzL,GAAKwL,EAAUxL,EAAIwL,EAAUpE,QACnCqE,EAAMzL,GAAKwL,EAAUxL,CAE7B,CAEAN,0BAA0BuL,EAAcC,GACpC,MAAMQ,EAAkB,CAAE3L,EAAGkL,EAAElL,EAAIkL,EAAE9D,MAAOnH,EAAGiL,EAAEjL,EAAIiL,EAAE7D,QACjDuE,EAAkB,CAAE5L,EAAGmL,EAAEnL,EAAImL,EAAE/D,MAAOnH,EAAGkL,EAAElL,EAAIkL,EAAE9D,QAEvD,OAAO6D,EAAElL,EAAI4L,EAAU5L,GAAK2L,EAAU3L,EAAImL,EAAEnL,GACxCkL,EAAEjL,EAAI2L,EAAU3L,GAAK0L,EAAU1L,EAAIkL,EAAElL,CAC7C,CAEAN,kBAAkBuL,EAAUC,GACxB,OAAOD,EAAErL,IAAMsL,EAAErL,KAAOoL,EAAEpL,IAAMqL,EAAEtL,GACtC,E,sfClDG,IAAMgM,GAAN,MAOH5K,YAC4C6K,EACX9D,IAAqB5G,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,oBARhC,IAAKA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,wBAIS,IAGQ,KAAA0K,eAAAA,EACX,KAAA9D,SAAAA,CAAyB,CAEtD+D,eAAWC,GACXzK,KAAK0K,WAAaD,EAElBA,EAAMxC,WAAWC,QAAO,IAAMlI,KAAK2K,qBACvC,CAEAA,oBACQ3K,KAAK2I,aAITiC,gBAAe,IAAM5K,KAAK6K,uBAC9B,CAEQA,sBACJ,MAAMC,EAAsB9K,KAAK0K,WAAWlC,UAE5C,GAAIc,GAAayB,WACb,CAAEzM,IAAK0B,KAAK0K,WAAWpC,iBAAiB7J,EAAGF,IAAKyB,KAAK0K,WAAWpC,iBAAiB7J,EAAIqM,EAAoBjF,OACzG,CAAEvH,IAAK0B,KAAKuK,eAAejC,iBAAiB7J,EAAGF,IAAKyB,KAAKuK,eAAejC,iBAAiB7J,EAAIuB,KAAKuK,eAAe/B,UAAU3C,QAAU,CAErI,MAAMgD,EAAS,GAEf7I,KAAK2I,aAAc,EAEnB3I,KAAK0K,WAAWtD,SAAW,CACvB3I,EAAGuB,KAAK0K,WAAWtD,SAAS3I,EAC5BC,GAAIsB,KAAKyG,SAASmC,cAAclD,OAAS1F,KAAKuK,eAAejC,iBAAiB5J,GAAKsB,KAAKuK,eAAe7B,MAAQoC,EAAoBhF,OAAS9F,KAAK0K,WAAWhC,MAAQG,GAGxK7I,KAAK2I,aAAc,CACvB,MACI3I,KAAK2I,aAAc,EAEnB3I,KAAK0K,WAAWtD,SAAW,CACvB3I,EAAGuB,KAAK0K,WAAWtD,SAAS3I,EAC5BC,EAAGsB,KAAKgL,kBAGZhL,KAAK2I,aAAc,CAE3B,GApDS2B,GAAmB3G,GAAA,EAD/BC,EAAAA,EAAAA,KASQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO4B,KACP7B,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAD0D,oBAC1D,GAD0D,qBAAtBuC,IAAAA,IAAsB1B,GAAAC,OAC5B,oBAD4B6E,GAC5B,qBAAX3F,GAAAA,GAAW2F,GAAA7E,UAT7CkE,IAuDblF,EAAUiB,KAAKiE,IAAqBhE,SAASC,mBC/DvC,MAAO2E,WAAoCjM,MAC/CS,YACkByL,EACAC,EACArH,GAChBsH,MAAM,qDAAqDD,KAAUrH,kBAAuBoH,EAAM1M,KAAK0M,EAAMzM,MAAKmB,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAHlG,KAAAsL,MAAAA,EACA,KAAAC,OAAAA,EACA,KAAArH,OAAAA,CAElB,EAGK,IAAKuH,IAAZ,SAAYA,GACVA,EAAAA,EAAA,oBACAA,EAAAA,EAAA,kBACAA,EAAAA,EAAA,kBACAA,EAAAA,EAAA,aACD,EALD,CAAYA,KAAAA,GAAW,KCGhB,MAAMC,GAAqB,CAC9BC,IAAK5M,OAAO6M,kBACZC,OAAQ,EACRC,KAAM/M,OAAOkJ,mBAOX,MAAO8D,GAAoBlM,eAAAG,EAAAA,EAAAA,GAAA,iBACgB,GAAE,CAE/CqI,OAAO2D,EAAuBC,EAAyB,CAAEC,SAAUR,GAAmBG,SAClF,MAAMM,EAAoC,CACtC7K,GAAI4C,SACJgI,SAAUD,EAAQC,SAClBF,YAOJ,OAJA7L,KAAKiM,UAAU5D,KAAK2D,GAEpBhM,KAAKkM,iBAEE,IAAMlM,KAAKiM,UAAUE,OAAOnM,KAAKiM,UAAUG,WAAU3N,GAAKA,EAAE0C,KAAO6K,EAAW7K,KAAK,EAC9F,CAEAkL,YACIrM,KAAKiM,UAAY,EACrB,CAEAK,OAAOC,GACHvM,KAAKiM,UAAU/J,SAAQsK,GAAKA,EAAEX,SAASU,IAC3C,CAEQL,iBACJ,IAAK,IAAIhN,EAAIc,KAAKiM,UAAUjN,OAAS,EACjCE,EAAI,GAAKc,KAAKiM,UAAU/M,GAAG6M,SAAW/L,KAAKiM,UAAU/M,EAAI,GAAG6M,WAC1D7M,EAAG,CACL,MAAMuN,EAAOzM,KAAKiM,UAAU/M,EAAI,GAChCc,KAAKiM,UAAU/M,EAAI,GAAKc,KAAKiM,UAAU/M,GACvCc,KAAKiM,UAAU/M,GAAKuN,CACxB,CACJ,ECnDGC,eAAeC,GAAwDC,EAA8BC,GAExG,aADMA,EAAcC,mBACbD,CACX,CCaM,MAAOE,GAAkBrN,eAAAG,EAAAA,EAAAA,GAAA,kBACQ,GAAE,CAErCmN,IAAI9C,GACAlK,KAAKiN,WAAW5E,KAAK6B,EACzB,CAEAgD,OACI,IAAIC,EAAY,EACZC,EAAW,EACf,IAAK,MAAMC,KAAQrN,KAAKiN,WACpBE,GAAaE,EAAKxH,MAAQwH,EAAKvH,OAC/BsH,EAAW5O,KAAKD,IAAI6O,EAAUC,EAAKxH,OAGvC,MAAMyH,EAAiB9O,KAAKD,IAAIC,KAAK+O,KAAK/O,KAAKc,KAAK6N,IAAaC,GAEjEpN,KAAKiN,WAAWO,MAAK,CAAC7D,EAAGC,IAAMA,EAAE9D,OAAS6D,EAAE7D,SAE5C,MAAM2H,EAAkC,GACxC,IAAIC,EAAiB,EACjBjP,EAAI,EAAGC,EAAI,EACf,IAAK,MAAM2O,KAAQrN,KAAKiN,WAChBxO,EAAI4O,EAAKxH,MAAQyH,IACjB7O,EAAI,EACJC,GAAKgP,EACLA,EAAiB,GAGrBD,EAAKpF,KAAK,CAAEsF,OAAQN,EAAMvG,SAAU,CAAErI,IAAGC,OAEzCgP,EAAiBlP,KAAKD,IAAImP,EAAgBL,EAAKvH,QAC/CrH,GAAK4O,EAAKxH,MAGd,MAAO,CAAE+H,MAAOH,EAAMhF,UAAW,CAAE5C,MAAOyH,EAAgBxH,OAAQpH,EAAIgP,GAC1E,EC1DE,SAAUG,GAAQC,GACtB,MAAM,IAAI7O,MAAM6O,EAClB,CCmBM,MAAOC,GAKTrO,YAA4BsO,EAAkBP,IAA+B5N,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,oBAAjD,KAAAmO,MAAAA,EACxBhO,KAAKiO,aAAaR,GAClBzN,KAAKkO,kBACT,CAEAC,SAAShN,GACL,MAAMiN,EAAQpO,KAAKyN,KAAKG,MAAMvL,MAAK5D,GAAKA,EAAEkP,OAAOxM,KAAOA,IAExD,YAAc4F,IAAVqH,EACOL,GAAaM,YAGjB,CACHC,EAAG,CAAE7P,EAAG2P,EAAMtH,SAASrI,EAAGC,EAAG0P,EAAMtH,SAASpI,GAC5C6P,EAAG,CAAE9P,EAAG2P,EAAMtH,SAASrI,EAAI2P,EAAMT,OAAO9H,MAAOnH,EAAG0P,EAAMtH,SAASpI,EAAI0P,EAAMT,OAAO7H,QAE1F,CAEA1H,qBAAqBoQ,GACjB,OAAOA,IAAOT,GAAaM,WAC/B,CAEQJ,aAAaR,GACjBzN,KAAKyN,KAAO,CACRhF,UAAW,IAAKgF,EAAKhF,WACrBmF,MAAOH,EAAKG,MAAMnL,KAAIhE,IAAK,CAAGqI,SAAU,IAAKrI,EAAEqI,UAAY6G,OAAQ,IAAKlP,EAAEkP,YAElF,CAEQO,mBACJlO,KAAKyN,KAAKG,MAAM1L,SAAQV,IACpBA,EAAKsF,SAASrI,GAAKuB,KAAKyN,KAAKhF,UAAU5C,MACvCrE,EAAKsF,SAASpI,GAAKsB,KAAKyN,KAAKhF,UAAU3C,OACvCtE,EAAKmM,OAAO9H,OAAS7F,KAAKyN,KAAKhF,UAAU5C,MACzCrE,EAAKmM,OAAO7H,QAAU9F,KAAKyN,KAAKhF,UAAU3C,MAAM,GAExD,G,OAzCSiI,GAAY,cACmB,CAAEO,EAAG,CAAE7P,GAAI,EAAGC,GAAI,GAAK6P,EAAG,CAAE9P,GAAI,EAAGC,GAAI,KA2C7E,MAAO+P,GAAmB/O,eAAAG,EAAAA,EAAAA,GAAA,cACS,KAAEA,EAAAA,EAAAA,GAAA,uBAIvCmN,IAAI7L,EAASuN,EAAkBjG,GAC3BzI,KAAK2O,OAAOtG,KAAK,CAAElH,KAAIuN,cAAajG,GACxC,CAEAiE,cACI,MAAMkC,EAAS,IAAI7B,GACnB/M,KAAK2O,OAAOzM,SAAQ2M,GAAOD,EAAO5B,IAAI6B,KACtC,MAAMpB,EAAOmB,EAAO1B,OAEpBlN,KAAK8O,YAAYrB,EAAKhF,UAAU5C,MAAO4H,EAAKhF,UAAU3C,QAEtD,IAAK,MAAMiJ,KAAUtB,EAAKG,MAAO,CAC7B,MAAMiB,QAAYJ,GAAoBO,YAAYD,EAAOpB,OAAOe,UAEhE1O,KAAKiP,QAAQC,UAAUL,EACnBE,EAAOjI,SAASrI,EAAGsQ,EAAOjI,SAASpI,EACnCqQ,EAAOpB,OAAO9H,MAAOkJ,EAAOpB,OAAO7H,OAC3C,CAEA,OAAO,IAAIiI,GACP/N,KAAKiP,QAAQE,aAAa,EAAG,EAAG1B,EAAKhF,UAAU5C,MAAO4H,EAAKhF,UAAU3C,QACrE2H,EAER,CAEQqB,YAAYjJ,EAAeC,GAC/B,MAAMF,EAASwJ,SAASC,cAAc,UAItCzJ,EAAOC,MAAQA,EACfD,EAAOE,OAASA,EAEhB,MAAMmJ,EAAUrJ,EAAO0J,WAAW,OAASzB,GAAQ,yBAEnD7N,KAAKiP,QAAUA,CACnB,CAEQ7Q,yBAAyBmR,GAC7B,MAAMC,EAAQ,IAAIxB,MAClB,OAAO,IAAIyB,SAAQ,CAACC,EAASC,KACzBH,EAAMI,OAAS,IAAMF,EAAQF,GAC7BA,EAAMK,QAAU,IAAMF,EAAO,IAAI1Q,MAAM,8BACvCuQ,EAAMD,IAAM,gBAA0BA,GAAK,GAEnD,E,IC5GQO,G,0UAAZ,SAAYA,GACRA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,kBAAMA,EAAAA,EAAA,kBAAMA,EAAAA,EAAA,8BAAYA,EAAAA,EAAA,4BAAWA,EAAAA,EAAA,4BAAWA,EAAAA,EAAA,wBAASA,EAAAA,EAAA,0BAC9DA,EAAAA,EAAA,kBAAMA,EAAAA,EAAA,4BAAWA,EAAAA,EAAA,qCACjBA,EAAAA,EAAA,6CAAmBA,EAAAA,EAAA,iDAAqBA,EAAAA,EAAA,iCACxCA,EAAAA,EAAA,+BAAYA,EAAAA,EAAA,mCAAcA,EAAAA,EAAA,uCAAgBA,EAAAA,EAAA,qCAAeA,EAAAA,EAAA,qCAAeA,EAAAA,EAAA,iCACxEA,EAAAA,EAAA,uBAAQA,EAAAA,EAAA,mBAAMA,EAAAA,EAAA,yBAASA,EAAAA,EAAA,mBAAMA,EAAAA,EAAA,mBAAMA,EAAAA,EAAA,2BAAUA,EAAAA,EAAA,uBAAQA,EAAAA,EAAA,mBAAMA,EAAAA,EAAA,iBAAKA,EAAAA,EAAA,qBAAOA,EAAAA,EAAA,+BAAYA,EAAAA,EAAA,qBACnFA,EAAAA,EAAA,qBAAOA,EAAAA,EAAA,uBAAQA,EAAAA,EAAA,2BAAUA,EAAAA,EAAA,qBAAOA,EAAAA,EAAA,4BACnC,EAPD,CAAYA,KAAAA,GAAM,KAmBX,IAAMC,GAAN,MAAiBrQ,eAAAG,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,kBAEsB,GAAE,CAE5C6M,+BACU1M,KAAKgQ,YACf,CAEA7B,SAAShN,GACL,OAAQA,GACJ,KAAK2O,GAAOG,UACR,CACI,MAAMzB,EAAKxO,KAAKkQ,MAAM/B,SAAS2B,GAAOK,YACtC,MAAO,CACH7B,EAAG,CAAE7P,EAAG+P,EAAGD,EAAE9P,EAAGC,EAAG8P,EAAGD,EAAE7P,GACxB6P,EAAG,CAAE9P,EAAG+P,EAAGF,EAAE7P,EAAGC,EAAG8P,EAAGF,EAAE5P,GACxB0R,YAAapQ,KAAKqQ,mBAAmBP,GAAOK,YAEpD,CACJ,KAAKL,GAAOQ,QACR,CACI,MAAM9B,EAAKxO,KAAKkQ,MAAM/B,SAAS2B,GAAOS,WACtC,MAAO,CACHjC,EAAG,CAAE7P,EAAG+P,EAAGD,EAAE9P,EAAGC,EAAG8P,EAAGD,EAAE7P,GACxB6P,EAAG,CAAE9P,EAAG+P,EAAGF,EAAE7P,EAAGC,EAAG8P,EAAGF,EAAE5P,GACxB0R,YAAapQ,KAAKqQ,mBAAmBP,GAAOS,WAEpD,CACJ,KAAKT,GAAOU,cACR,CACI,MAAMhC,EAAKxO,KAAKkQ,MAAM/B,SAAS2B,GAAOW,gBACtC,MAAO,CACHnC,EAAG,CAAE7P,EAAG+P,EAAGD,EAAE9P,EAAGC,EAAG8P,EAAGD,EAAE7P,GACxB6P,EAAG,CAAE9P,EAAG+P,EAAGF,EAAE7P,EAAGC,EAAG8P,EAAGF,EAAE5P,GACxB0R,YAAapQ,KAAKqQ,mBAAmBP,GAAOW,gBAEpD,CACJ,KAAKX,GAAOY,cACR,CACI,MAAMlC,EAAKxO,KAAKkQ,MAAM/B,SAAS2B,GAAOa,aACtC,MAAO,CACHrC,EAAG,CAAE7P,EAAG+P,EAAGD,EAAE9P,EAAGC,EAAG8P,EAAGD,EAAE7P,GACxB6P,EAAG,CAAE9P,EAAG+P,EAAGF,EAAE7P,EAAGC,EAAG8P,EAAGF,EAAE5P,GACxB0R,YAAapQ,KAAKqQ,mBAAmBP,GAAOa,aAEpD,CACJ,KAAKb,GAAOc,KACR,CACI,MAAMpC,EAAKxO,KAAKkQ,MAAM/B,SAAS2B,GAAOe,MACtC,MAAO,CACHvC,EAAG,CAAE7P,EAAG+P,EAAGD,EAAE9P,EAAGC,EAAG8P,EAAGF,EAAE5P,GACxB6P,EAAG,CAAE9P,EAAG+P,EAAGF,EAAE7P,EAAGC,EAAG8P,EAAGD,EAAE7P,GACxB0R,YAAapQ,KAAKqQ,mBAAmBP,GAAOe,MAEpD,CACJ,QACI,MAAO,IAAK7Q,KAAKkQ,MAAM/B,SAAShN,GAAKiP,YAAapQ,KAAKqQ,mBAAmBlP,IAEtF,CAEI6M,YACA,OAAOhO,KAAKkQ,MAAMlC,KACtB,CAEQqC,mBAAmBlP,GACvB,OAAOnB,KAAK8Q,WAAWzO,MAAK5D,GAAKA,EAAE0C,KAAOA,IAAKiP,WACnD,CAEQ1D,mBACJ,MAAMqE,EAAU,IAAItC,GAEduC,EAAQ,CACV,CACI7P,GAAI2O,GAAOmB,MACXvC,SAAU,qBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOK,WACXzB,SAAU,2BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOS,UACX7B,SAAU,0BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOoB,SACXxC,SAAU,mBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOqB,KACXzC,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOsB,KACX1C,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOuB,KACX3C,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOwB,UACX5C,SAAU,0BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOyB,cACX7C,SAAU,+BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO0B,kBACX9C,SAAU,kCACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO2B,oBACX/C,SAAU,oCACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO4B,YACXhD,SAAU,4BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO6B,WACXjD,SAAU,0BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO8B,aACXlD,SAAU,8BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOa,YACXjC,SAAU,6BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOW,eACX/B,SAAU,gCACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO+B,OACXnD,SAAU,yBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOgC,KACXpD,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOiC,QACXrD,SAAU,uBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOe,KACXnC,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOkC,SACXtD,SAAU,wBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOmC,OACXvD,SAAU,sBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOoC,KACXxD,SAAU,oBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOqC,IACXzD,SAAU,mBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOsC,MACX1D,SAAU,qBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOuC,WACX3D,SAAU,2BACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOwC,MACX5D,SAAU,qBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAOyC,MACX7D,SAAU,qBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO0C,OACX9D,SAAU,sBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO2C,SACX/D,SAAU,wBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO4C,MACXhE,SAAU,qBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,MAErC,CACI3E,GAAI2O,GAAO6C,UACXjE,SAAU,yBACVjG,UAAW,CAAE5C,MAAO,IAAKC,OAAQ,OAIzC,IAAK,MAAM8M,KAAQ5B,EACfD,EAAQ/D,IAAI4F,EAAKzR,GAAIyR,EAAKlE,SAAUkE,EAAKnK,WACzCzI,KAAK8Q,WAAWzI,KAAK,CAAElH,GAAIyR,EAAKzR,GAAIiP,YAAawC,EAAKnK,UAAU5C,MAAQ+M,EAAKnK,UAAU3C,SAG3F9F,KAAKkQ,YAAca,EAAQ8B,OAC/B,GClQG,IAAKC,GAEAC,GDgBChD,GAAWpM,GAAA,EADvBC,EAAAA,EAAAA,MACYmM,IAmPb3K,EAAUiB,KAAK0J,IAAazJ,SAASC,mBAAmByM,aAAarG,ICrQrE,SAAYmG,GAAmBA,EAAAA,EAAA,kBAAMA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,qBAAQ,CAApD,CAAYA,KAAAA,GAAgB,KAE5B,SAAYC,GAAiBA,EAAAA,EAAA,sBAAQA,EAAAA,EAAA,eAAK,CAA1C,CAAYA,KAAAA,GAAc,KAOpB,MAAOE,GAWTvT,YACYoH,EACAoM,EAAiB,CAAEC,SAAUJ,GAAeK,OAAQC,WAAYP,GAAiBxP,QAAMzD,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,kBAZ9E,IAAI+L,KAAoD/L,EAAAA,EAAAA,GAAA,aAE7D,IAACA,EAAAA,EAAAA,GAAA,cAEe,KAAEA,EAAAA,EAAAA,GAAA,qBAEX,IAAKA,EAAAA,EAAAA,GAAA,iBAEG,CAAEgG,MAAO,EAAGC,OAAQ,IAGvC,KAAAgB,SAAAA,EACA,KAAAoM,OAAAA,CACZ,CAEO3L,SACHvH,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEAuT,YAAYvL,GACRhI,KAAKwT,OAAOnL,KAAKL,GAEZhI,KAAKyT,cACN7I,gBAAe,IAAM5K,KAAK0T,iBAG9B1T,KAAKyT,cAAe,CACxB,CAEQC,eACJ1T,KAAK2T,qBAEL3T,KAAKsT,WAAWhH,OAAOtM,MAEvBA,KAAKyT,cAAe,CACxB,CAEAG,YAAY5L,GACR,MAAM6L,EAAY7T,KAAKwT,OAAOM,QAAQ9L,IAEnB,IAAf6L,GACA7T,KAAKwT,OAAOrH,OAAO0H,EAAW,GAG7B7T,KAAKyT,cACN7I,gBAAe,IAAM5K,KAAK0T,iBAG9B1T,KAAKyT,cAAe,CACxB,CAEIxL,iBACA,OAAOjI,KAAKsT,UAChB,CAEIlM,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIsI,uBACA,MAAMG,EAAYrD,EAAU2O,IAAIzO,GAAasD,cAE7C,MAAO,CACHnK,EAAGuB,KAAKgU,gCAAgCvL,EAAUhD,OAClD/G,EAAGsB,KAAKiU,8BAA8BxL,EAAU/C,QAExD,CAEIgD,YACA,OAAO1I,KAAK+I,MAAQ3D,EAAU2O,IAAIzO,GAAaS,gBACnD,CAEI2C,UAAMK,GACN/I,KAAK+I,MAAQA,EAEb/I,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIwI,gBACA,OAAOxI,KAAKyI,SAChB,CAEAkL,qBACI,GAA2B,IAAvB3T,KAAKwT,OAAOxU,OAKZ,OAHAgB,KAAKyI,UAAU5C,MAAQ,OACvB7F,KAAKyI,UAAU3C,OAAS,GAK5B,MAAMxH,EAAM,CAAEG,EAAGG,OAAOkJ,kBAAmBpJ,EAAGE,OAAOkJ,mBAC/CvJ,EAAM,CAAEE,EAAGG,OAAO6M,kBAAmB/M,EAAGE,OAAO6M,mBAErD,IAAK,MAAMzD,KAAahI,KAAKwT,OAAQ,CACjCP,GAA6BiB,iBAAiBlM,EAAUZ,SAAU,CAAE9I,MAAKC,QAEzE,MAAM4V,EAAW,CACb1V,EAAGuJ,EAAUZ,SAAS3I,EAAIuJ,EAAUU,MAAQV,EAAUQ,UAAU3C,MAChEnH,EAAGsJ,EAAUZ,SAAS1I,EAAIsJ,EAAUU,MAAQV,EAAUQ,UAAU1C,QAGpEmN,GAA6BiB,iBAAiBC,EAAU,CAAE7V,MAAKC,OACnE,CAEAyB,KAAKyI,UAAU5C,MAAQtH,EAAIE,EAAIH,EAAIG,EACnCuB,KAAKyI,UAAU3C,OAASvH,EAAIG,EAAIJ,EAAII,CACxC,CAEA0V,UACI,IAAIpU,KAAKwT,QAAQtR,SAAQzD,GAAKA,EAAE2V,WACpC,CAEQhW,wBAAwB+L,EAAakK,GACrClK,EAAM1L,EAAI4V,EAAS/V,IAAIG,IACvB4V,EAAS/V,IAAIG,EAAI0L,EAAM1L,GAGvB0L,EAAM1L,EAAI4V,EAAS9V,IAAIE,IACvB4V,EAAS9V,IAAIE,EAAI0L,EAAM1L,GAGvB0L,EAAMzL,EAAI2V,EAAS/V,IAAII,IACvB2V,EAAS/V,IAAII,EAAIyL,EAAMzL,GAGvByL,EAAMzL,EAAI2V,EAAS9V,IAAIG,IACvB2V,EAAS9V,IAAIG,EAAIyL,EAAMzL,EAE/B,CAEQsV,gCAAgCM,GACpC,OAAQtU,KAAKkT,OAAOG,YAChB,QACA,KAAKP,GAAiBxP,KAClB,OAAOtD,KAAK8G,SAASrI,EAAIuB,KAAK0I,MAClC,KAAKoK,GAAiByB,MAClB,OAAOD,EAAYtU,KAAK8G,SAASrI,EAAIuB,KAAK0I,MAC9C,KAAKoK,GAAiB0B,OAClB,OAAQF,EAAYtU,KAAKwI,UAAU3C,OAAS,EAAI7F,KAAKoH,SAAS3I,EAE1E,CAEQwV,8BAA8BQ,GAClC,OAAQzU,KAAKkT,OAAOC,UAChB,QACA,KAAKJ,GAAeK,OAChB,OAAOpT,KAAK8G,SAASpI,EAAIsB,KAAK0I,MAClC,KAAKqK,GAAe2B,IAChB,OAAOD,EAAazU,KAAK8G,SAASpI,EAAIsB,KAAK0I,MAEvD,EC7KE,MAAOiM,GACTvW,WAAcwW,EAAYC,GACtB,GAAqB,IAAjBD,EAAM5V,OACN,OAAO4V,EAAM,GAGjB,IAAIrW,EAAMqW,EAAM,GAChB,IAAK,IAAI1V,EAAI,EAAGA,EAAI0V,EAAM5V,SAAUE,EAC5B2V,EAAWtW,EAAKqW,EAAM1V,MACtBX,EAAMqW,EAAM1V,IAIpB,OAAOX,CACX,CAEAH,WAAcwW,EAAYC,GACtB,GAAqB,IAAjBD,EAAM5V,OACN,OAAO4V,EAAM,GAGjB,IAAItW,EAAMsW,EAAM,GAChB,IAAK,IAAI1V,EAAI,EAAGA,EAAI0V,EAAM5V,SAAUE,EAC5B2V,EAAWD,EAAM1V,GAAIZ,KACrBA,EAAMsW,EAAM1V,IAIpB,OAAOZ,CACX,EC/BJ,mVCAA,oYCAA,yJCAA,kPCYM,MAAOwW,GASTpV,YACYoH,EACA2B,EACAsM,EACAnC,EACAoC,EACAC,EACDC,EACCC,EACAC,EAA8C,OAAIvV,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,qBAAAA,EAAAA,EAAAA,GAAA,qBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,kBAjBzC,IAAI+L,KAAyC/L,EAAAA,EAAAA,GAAA,aAElD,IAACA,EAAAA,EAAAA,GAAA,oBAEK,IAAKA,EAAAA,EAAAA,GAAA,sBAEuB,MAGtC,KAAAiH,SAAAA,EACA,KAAA2B,UAAAA,EACA,KAAAsM,OAAAA,EACA,KAAAnC,KAAAA,EACA,KAAAoC,KAAAA,EACA,KAAAC,MAAAA,EACD,KAAAC,OAAAA,EACC,KAAAC,QAAAA,EACA,KAAAC,OAAAA,EACRpV,KAAKqV,eAAiBD,GAAQnN,WAAWC,QAAO,IAAMlI,KAAKsT,WAAWhH,OAAOtM,SAAU,IAC3F,CAEAoU,UACIpU,KAAKsV,aAAc,EAEnBtV,KAAKuV,eAELvV,KAAKoV,QAAQxB,YAAY5T,MAEzBA,KAAKmV,QAAQnV,MAEe,OAAxBA,KAAKqV,gBACLrV,KAAKqV,gBAEb,CAEIpN,iBACA,OAAOjI,KAAKsT,UAChB,CAEIlM,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIwI,gBACA,MAAO,CACH3C,MAAO7F,KAAKyI,UAAU5C,MAAQ7F,KAAK0I,MACnC5C,OAAQ9F,KAAKyI,UAAU3C,OAAS9F,KAAK0I,MAE7C,CAEIF,cAAUC,GACVzI,KAAKyI,UAAYA,EAEjBzI,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIsI,uBACA,GAAItI,KAAKoV,OAAQ,CACb,MAAMI,EAAiB,CAACxV,KAAKoV,OAAO9M,iBAAiB7J,EAAGuB,KAAKoV,OAAO9M,iBAAiB5J,GAC/E6J,EAAmB9H,EAAAA,GAASA,EAAAA,KAAe+U,EAAgB,CAACxV,KAAKoH,SAAS3I,EAAIuB,KAAK0I,MAAO1I,KAAKoH,SAAS1I,EAAIsB,KAAK0I,QAEvH,MAAO,CAAEjK,EAAG8J,EAAiB,GAAI7J,EAAG6J,EAAiB,GACzD,CACI,OAAOvI,KAAKoH,QAEpB,CAEIqO,aACA,OAAOzV,KAAK+U,MAChB,CAEIU,WAAOV,GACP/U,KAAK+U,OAASA,EAEd/U,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0I,YACA,OAAuB,OAAhB1I,KAAKoV,OAAkBpV,KAAK+I,MAAQ/I,KAAK+I,MAAQ/I,KAAKoV,OAAO1M,KACxE,CAEIA,UAAMK,GACN/I,KAAK+I,MAAQA,EAEb/I,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0V,WACA,OAAO1V,KAAK4S,IAChB,CAEI8C,SAAKT,GACLjV,KAAK4S,KAAO,IAAKqC,GAEjBjV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI2V,WACA,OAAO3V,KAAKgV,IAChB,CAEIW,SAAKX,GACLhV,KAAKgV,KAAO,IAAKA,GAEjBhV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI4V,YACA,OAAO5V,KAAKiV,KAChB,CAEIW,UAAMX,GACNjV,KAAKiV,MAAQ,IAAKA,GAElBjV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI6V,kBACA,OAAO7V,KAAKsV,WAChB,CAEQC,eACJvV,KAAK8G,SAAW,CAAErI,EAAG,EAAGC,EAAG,GAC3BsB,KAAKyI,UAAY,CAAE5C,MAAO,EAAGC,OAAQ,EACzC,EC/IE,SAAUgQ,GAA2B/V,GACvC,OAAOqG,OAAO2P,KAAKhW,GAAGf,QAAU,CACpC,CCFM,MAAgBgX,GAUlBtW,YACIuW,IAAgBpW,EAAAA,EAAAA,GAAA,qBAAAA,EAAAA,EAAAA,GAAA,gBAJDmW,GAAkBE,SAAMrW,EAAAA,EAAAA,GAAA,YAC5B,GAIXG,KAAKmW,KAAOC,MAAMC,KAAK,CAAErX,OAAQiX,IAAY,CAACK,EAAGpX,IAAMA,EAAI,IAEvD+W,EAAW,IACXjW,KAAKmW,KAAKnW,KAAKmW,KAAKnX,OAAS,GAAKgX,GAAkBE,OAEpDlW,KAAKuW,SAAW,EAExB,CAMAC,WAGI,KAFExW,KAAKyW,KAEHzW,KAAK0W,YAAa,CAClB,MAAMC,EAAW3W,KAAKuW,SAMtB,OAJAvW,KAAKuW,SAAWvW,KAAKmW,KAAKnW,KAAKuW,UAE/BvW,KAAKmW,KAAKQ,GAAYX,GAAkBY,MAEjCD,CACX,CAAO,CACH,MAAME,EAAO7W,KAAKmW,KAAKnX,OAavB,OAZAgB,KAAKuW,SAAWvW,KAAKmW,KAAKnX,OAAS,EAEnCgB,KAAKmW,KAAO,IACLnW,KAAKmW,QACLC,MAAMC,KAAK,CAAErX,OAAQgB,KAAKmW,KAAKnX,OAASgX,GAAkBc,aAAe9W,KAAKmW,KAAKnX,SAAU,CAACsX,EAAGpX,IAAMc,KAAKmW,KAAKnX,OAASE,EAAI,KAErIc,KAAKmW,KAAKnW,KAAKmW,KAAKnX,OAAS,GAAKgX,GAAkBE,OAEpDlW,KAAKmW,KAAKU,GAAQb,GAAkBY,MAEpC5W,KAAK+W,SAAS/W,KAAKgX,UAEZH,CACX,CACJ,CAEAI,KAAKC,GACGA,GAASlX,KAAKmW,KAAKnX,QAAUgB,KAAKmW,KAAKe,KAAWlB,GAAkBY,QAIxE5W,KAAKmW,KAAKe,GAASlX,KAAKuW,SAExBvW,KAAKuW,SAAWW,IAEdlX,KAAKyW,KAEHzW,KAAKyW,KAAOzW,KAAKgX,UAAYhB,GAAkBmB,eAC/CnX,KAAKoX,SAASpX,KAAKqX,sBAEnBrX,KAAKsX,UAEb,CAGIN,eACA,OAAOhX,KAAKmW,KAAKnX,MACrB,CAMY0X,kBACR,OAAO1W,KAAKuW,SAAWvW,KAAKmW,KAAKnX,QAAUgB,KAAKuW,WAAaP,GAAkBE,MACnF,CAEQmB,qBACJ,MAAME,EAAkB,GAExB,IAAK,IAAIrY,EAAI,EAAGA,EAAIc,KAAKmW,KAAKnX,SAAUE,EAChCc,KAAKmW,KAAKjX,KAAO8W,GAAkBY,OACnCW,EAAMlP,KAAKnJ,GAInB,OAAOqY,CACX,CAEQD,SACJtX,KAAKmW,KAAKhK,OAAOnM,KAAKyW,KAAMzW,KAAKmW,KAAKnX,OAASgB,KAAKyW,MAEpD,IAAK,IAAIvX,EAAI,EAAGA,EAAIc,KAAKmW,KAAKnX,SAAUE,EACpCc,KAAKmW,KAAKjX,GAAK8W,GAAkBY,MAGrC5W,KAAKuW,SAAWP,GAAkBE,MACtC,G,OAzGkBF,GAAiB,UACD,IAACnW,EAAAA,EAAAA,GADjBmW,GAAiB,SAEF,IAACnW,EAAAA,EAAAA,GAFhBmW,GAAiB,eAGL,IAACnW,EAAAA,EAAAA,GAHbmW,GAAiB,eAIL,KCY5B,MAAOwB,GACTpZ,qBACI0I,EACA2B,EACAgP,GAEA,MAAMC,EAAa,CAAC5Q,EAASrI,EAAGqI,EAASpI,GACnCiZ,EAAU,CAAC7Q,EAASrI,EAAGqI,EAASpI,EAAI+J,EAAU3C,QAC9CqO,EAAW,CAACrN,EAASrI,EAAIgK,EAAU5C,MAAOiB,EAASpI,EAAI+J,EAAU3C,QACjE8R,EAAc,CAAC9Q,EAASrI,EAAIgK,EAAU5C,MAAOiB,EAASpI,GAE5D,IAAK,MAAMmZ,KAAQJ,EACXrB,MAAM0B,QAAQD,IACdH,EAAWrP,QAAQwP,GACnBF,EAAQtP,QAAQwP,GAChB1D,EAAS9L,QAAQwP,GACjBD,EAAYvP,QAAQwP,KAEpBH,EAAWrP,QAAQwP,EAAKE,YACxBJ,EAAQtP,QAAQwP,EAAKG,SACrB7D,EAAS9L,QAAQwP,EAAKI,UACtBL,EAAYvP,QAAQwP,EAAKK,cAIjC,MAAO,IACAR,KACAvD,KACAwD,KACAD,KACAE,KACAzD,EAEX,CAEA/V,iBACI0I,EACA2B,EACA0P,EACAV,GACA,MAAMW,EAAYZ,GAAiBa,cAC/B,CAAE5Z,EAAGqI,EAASrI,EAAGC,EAAGoI,EAASpI,EAAI+J,EAAU3C,OAASqS,GACpD,CAAEtS,MAAO4C,EAAU5C,MAAOC,OAAQqS,GAClCV,GAGEa,EAAcd,GAAiBa,cACjC,CAAE5Z,EAAGqI,EAASrI,EAAIgK,EAAU5C,MAAQsS,EAAazZ,EAAGoI,EAASpI,GAC7D,CAAEmH,MAAOsS,EAAarS,OAAQ2C,EAAU3C,OAASqS,GACjDV,GAGEc,EAAef,GAAiBa,cAClC,CAAE5Z,EAAGqI,EAASrI,EAAGC,EAAGoI,EAASpI,GAC7B,CAAEmH,MAAO4C,EAAU5C,MAAQsS,EAAarS,OAAQqS,GAChDV,GAGEe,EAAahB,GAAiBa,cAChC,CAAE5Z,EAAGqI,EAASrI,EAAGC,EAAGoI,EAASpI,EAAIyZ,GACjC,CAAEtS,MAAOsS,EAAarS,OAAQ2C,EAAU3C,OAAS,EAAIqS,GACrDV,GAGJ,MAAO,IACAW,KACAE,KACAC,KACAC,EAEX,E,uEC9EE,MAAOC,GAGX/Y,YAA6B6F,GAC3B,IADqD1F,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,oBAFG,IAAI6Y,MAAK7Y,EAAAA,EAAAA,GAAA,wBAEtC,KAAA0F,GAAAA,GACtBA,EAAI,MAAM,IAAItG,MAAM,0BAEzBe,KAAK2Y,SACHpT,EAAGqT,iBAAmB/K,GAAQ,8BAClC,CAEO3F,OAAO2Q,EAAcC,GAC1B,MAAMC,EAAS/Y,KAAKuF,GAAGyT,aAAaH,GACpC,GAAe,OAAXE,EAAiB,MAAM,IAAI9Z,MAAM,2BAKrC,GAHAe,KAAKuF,GAAG0T,aAAaF,EAAQD,GAC7B9Y,KAAKuF,GAAG2T,cAAcH,IAEjB/Y,KAAKuF,GAAG4T,mBAAmBJ,EAAQ/Y,KAAKuF,GAAG6T,gBAAiB,CAC/D,MAAMC,EAAM,IAAIpa,MACde,KAAKuF,GAAG+T,iBAAiBP,IAAW,4BAGtC,MADA/Y,KAAKuF,GAAGgU,aAAaR,GACfM,CACR,CAEArZ,KAAKuF,GAAGiU,aAAaxZ,KAAK2Y,SAAUI,EACtC,CAEOrM,oBAAoBmM,EAAcY,GACvCzZ,KAAKkI,OAAO2Q,cAAmBa,MAAMD,IAAMzE,OAC7C,CAEO2E,OAEL,GADA3Z,KAAKuF,GAAGqU,YAAY5Z,KAAK2Y,WACpB3Y,KAAKuF,GAAGsU,oBAAoB7Z,KAAK2Y,SAAU3Y,KAAKuF,GAAGuU,aAAc,CACpE,MAAMT,EAAM,IAAIpa,MACde,KAAKuF,GAAGsU,oBAAoB7Z,KAAK2Y,SAAU3Y,KAAKuF,GAAGuU,cACnD,yBAGF,MADA9Z,KAAKuF,GAAGwU,cAAc/Z,KAAK2Y,UACrBU,CACR,CACF,CAEOW,MACLha,KAAKuF,GAAG0U,WAAWja,KAAK2Y,SAC1B,CAEOuB,cAAcC,EAAc9b,GACjC2B,KAAKuF,GAAG6U,WAAWpa,KAAKqa,mBAAmBF,GAAO9b,EACpD,CAEOic,cAAcH,EAAc9b,GACjC2B,KAAKuF,GAAGgV,WAAWva,KAAKqa,mBAAmBF,GAAO9b,EACpD,CAEOmc,cAAcL,EAAc9b,GACjC2B,KAAKuF,GAAGkV,WAAWza,KAAKqa,mBAAmBF,GAAO9b,EACpD,CAEOqc,aAAaP,EAAc9b,GAChC2B,KAAKuF,GAAGoV,UAAU3a,KAAKqa,mBAAmBF,GAAO9b,EACnD,CAEOuc,aAAaT,EAAc9b,GAChC2B,KAAKuF,GAAGsV,UAAU7a,KAAKqa,mBAAmBF,GAAO9b,EACnD,CAEOyc,cAAcX,EAAc9b,GACjC2B,KAAKuF,GAAGwV,WAAW/a,KAAKqa,mBAAmBF,GAAO9b,EACpD,CAEO2c,oBAAoBb,EAAc9b,GACvC2B,KAAKuF,GAAG0V,iBAAiBjb,KAAKqa,mBAAmBF,IAAO,EAAO9b,EACjE,CAEO6c,qBAAqBf,GAC1Bna,KAAKga,MAEL,MAAMmB,EAAMnb,KAAKuF,GAAG6V,kBAAkBpb,KAAK2Y,SAAUwB,GAErD,IAAa,IAATgB,EAAY,MAAM,IAAIlc,MAAM,+BAA+Bkb,MAE/D,OAAOgB,CACT,CAEAE,UACErb,KAAKuF,GAAGwU,cAAc/Z,KAAK2Y,SAC7B,CAEQ0B,mBAAmBF,GACzBna,KAAKga,MAEL,IAAImB,EAAMnb,KAAKsb,aAAavH,IAAIoG,IAAS,KAEzC,GAAY,OAARgB,EAAc,CAGhB,GAFAA,EAAMnb,KAAKuF,GAAGgW,mBAAmBvb,KAAK2Y,SAAUwB,GAEpC,OAARgB,EAAc,MAAM,IAAIlc,MAAM,6BAA6Bkb,MAE/Dna,KAAKsb,aAAaE,IAAIrB,EAAMgB,EAC9B,CAEA,OAAOA,CACT,EC7GI,MAAOM,GAmCJrd,eACLya,GAEA,OACE4C,GAAiBC,MAAMrZ,MAAK5D,GAAKA,EAAE,KAAOoa,IAC1C,EACJ,G,OAzCW4C,GAAgB,QACK,CAC9B,CAAC/Z,OAAOwE,uBAAuByV,KAAMC,UAAUC,mBAC/C,CACEna,OAAOwE,uBAAuB4V,MAC9BC,WAAWF,mBAEb,CACEna,OAAOwE,uBAAuB8V,cAC9BC,WAAWJ,mBAEb,CACEna,OAAOwE,uBAAuBgW,eAC9BC,YAAYN,mBAEd,CACEna,OAAOwE,uBAAuBkW,MAC9BC,aAAaR,mBAEf,CAACna,OAAOwE,uBAAuBoW,WAAY,GAC3C,CAAC5a,OAAOwE,uBAAuBqW,IAAKC,WAAWX,mBAC/C,CACEna,OAAOwE,uBAAuBuW,aAC9BC,YAAYb,mBAEd,CACEna,OAAOwE,uBAAuByW,mBAC9BH,WAAWX,mBAEb,CACEna,OAAOwE,uBAAuB0W,4BAC9BJ,WAAWX,qB,mfCqBV,IAAMgB,GAAN,MAULnd,YACkC6F,EACnB0T,EACAxB,EACiBqF,IAA0Cjd,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,qCAAAA,EAAAA,EAAAA,GAAA,oBAAAA,EAAAA,EAAAA,GAAA,oBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,kBATrC,IAAIwc,eAAcxc,EAAAA,EAAAA,GAAA,iCAEnB,IAACA,EAAAA,EAAAA,GAAA,yBACT,GAGM,KAAA0F,GAAAA,EAGF,KAAAuX,qBAAAA,EAE9B9c,KAAK+c,MAAM9D,GACXjZ,KAAKgd,gBAAgBvF,EACvB,CAEOwF,iBAAiBC,GACtBld,KAAKyX,WAAa,IAAI4E,aAAaa,GAEnCld,KAAKmd,kBACHnd,KAAKyX,WAAWzY,OAASgB,KAAKod,0BAEhCpd,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAC9Cvd,KAAKuF,GAAGiY,WACNxd,KAAKuF,GAAG+X,aACRtd,KAAKyX,WACLzX,KAAKuF,GAAGkY,aAEZ,CAEOC,0BAA0BC,EAAqBC,GACpD5d,KAAKyX,WAAW+D,IAAImC,EAAWC,GAE/B5d,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAC9Cvd,KAAKuF,GAAGsY,cACN7d,KAAKuF,GAAG+X,aACR7B,GAAiBqC,QAAQ9d,KAAKuF,GAAG6W,OAASwB,EAC1C5d,KAAKyX,WACLmG,EACAD,EAAU3e,OACd,CAEO+e,oBAAoB7G,GACzB,MAAO,CACL8G,OAAQhe,KAAKyX,WACbmG,OACE1G,EACAlX,KAAKod,0BACLpd,KAAK8c,qBAAqBmB,oBAEhC,CAEOC,OACLle,KAAK+Y,OAAOiB,MACZha,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAC9Cvd,KAAKuF,GAAG4Y,gBAAgBne,KAAKoe,KAC7Bpe,KAAKuF,GAAG8Y,WACNre,KAAK8c,qBAAqBwB,kBAC1B,EACAte,KAAKmd,kBAET,CAEA9B,UACErb,KAAKuF,GAAGgZ,aAAave,KAAKud,KAC1Bvd,KAAKuF,GAAGiZ,kBAAkBxe,KAAKoe,KAE/Bpe,KAAK+Y,OAAOsC,SACd,CAEQ0B,MAAM9D,GACZjZ,KAAKud,IAAMvd,KAAKuF,GAAGkZ,gBAAkB5Q,GAAQ,wBAC7C7N,KAAKoe,IAAMpe,KAAKuF,GAAGmZ,qBAAuB7Q,GAAQ,wBAElD7N,KAAK+Y,OAAS,IAAIN,GAAczY,KAAKuF,IACrCvF,KAAK+Y,OAAO7Q,OAAOlI,KAAKuF,GAAGoZ,gBAAiB1F,EAAa2F,UACzD5e,KAAK+Y,OAAO7Q,OAAOlI,KAAKuF,GAAGsZ,cAAe5F,EAAa6F,QACvD9e,KAAK+Y,OAAOY,OACZ3Z,KAAK+Y,OAAOiB,KACd,CAEQgD,gBAAgBvF,GACtB,GAA0B,IAAtBA,EAAWzY,OACb,MAAM,IAAIC,MAAM,yCAGlBe,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAE9Cvd,KAAKuF,GAAG4Y,gBAAgBne,KAAKoe,KAE7B,MAAMW,EAAStH,EAAWuH,QACxB,CAACD,EAAQlH,IACPkH,EAASlH,EAAKpB,KAAOgF,GAAiBqC,QAAQjG,EAAKgB,OACrD,GAGF7Y,KAAKod,0BACH2B,EAAStD,GAAiBqC,QAAQrG,EAAW,GAAGoB,MAElD,IACE,IAAI3Z,EAAI,EAAG0e,EAAS,EACpB1e,EAAIuY,EAAWzY,OACf4e,GACAnG,EAAWvY,GAAGuX,KAAOgF,GAAiBqC,QAAQrG,EAAWvY,GAAG2Z,QAC1D3Z,EACF,CACA,MAAM2Y,EAAOJ,EAAWvY,GAElB+f,EAAWjf,KAAK+Y,OAAOmC,qBAAqBrD,EAAKsC,MACvDna,KAAKuF,GAAG2Z,wBAAwBD,GAChCjf,KAAKuF,GAAG4Z,oBACNF,EACApH,EAAKpB,KACLoB,EAAKgB,KACLhB,EAAKuH,WACLL,EACAnB,EAEJ,CAEA5d,KAAKuF,GAAG4Y,gBAAgB,KAC1B,GA7HWtB,GAAkBlZ,GAAA,EAD9BC,EAAAA,EAAAA,KAYIoC,GAAA,GAAAqZ,EAAAA,GAAAA,MACArZ,GAAA,GAAAqZ,EAAAA,GAAAA,MACArZ,GAAA,GAAAqZ,EAAAA,GAAAA,MACArZ,GAAA,GAAAqZ,EAAAA,GAAAA,MAAW,wBAH8C,oBAG9C,GAH8C,qBAAtBnZ,wBAAAA,wBAAsBC,GAAAC,OAAAA,OAAAgQ,MAAAhQ,UAXjDyW,I,mBC7BRyC,GAEAC,G,6eAFL,SAAKD,GAAuBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,cAAI,EAAvF,CAAKA,KAAAA,GAAoB,KAEzB,SAAKC,GAAwBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,CAA/C,CAAKA,KAAAA,GAAqB,KAE1B,IACMC,GADN,cACkC3C,GAK9Bnd,YAA0D6F,GACtD,MAAMka,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASyJ,IAC9BtB,EAAsB,EAE5B5S,MAAM9F,EACF,CAAEqZ,SAAUc,GAAcZ,OAAQa,IAClC,CAAC,CACGxF,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,GAEZ,CACIzD,KAAM,cACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,cACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,SACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,IAEhB,CAAExB,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,2BA3C5B,IAACA,EAAAA,EAAAA,GAAA,sCA6CnCG,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAASwJ,IAAwBtf,KAAK6f,mBACxE,CAEIxY,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEIC,iBACA,OAAOhgB,KAAKyX,UAChB,GAxDE+H,GAAmB7b,GAAA,EADxBC,EAAAA,EAAAA,KAMgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBAAsB,wBAA2B,oBAA3B,GAA2B,qBAAtBoC,wBAAAA,wBAAsBC,GAAAC,UALlFoZ,IA4DNpa,EAAUiB,KAAKmZ,IAAqBlZ,SAASC,mBAGtC,IAAM0Z,GAAN,cAA8BpD,GAiBjCnd,YACkD6F,EACT2a,EACKC,EACOC,EACpB3Z,GAE7B,MAAMgZ,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASyJ,IAC9BtB,EAAsB,EAE5B5S,MAAM9F,EACF,CAAEqZ,SAAUyB,GAAevB,OAAQwB,IACnC,CAAC,CACGnG,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,IAEhB,CAAExB,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,uCAAAA,EAAAA,EAAAA,GAAA,oBAzClC,KAAGA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,cAIG,KAAEA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,2BAIV,OAAKA,EAAAA,EAAAA,GAAA,kBAEL,IAIW,KAAAqgB,UAAAA,EACK,KAAAC,UAAAA,EACO,KAAAC,iBAAAA,EACpB,KAAA3Z,SAAAA,EA0B7BzG,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAASyJ,IAAyBvf,KAAK6f,oBAErE7f,KAAKugB,wBAA0B,IAAK,cAAcvK,GAC9CtW,YAAoB8gB,GAChB,MAAMC,EAAkB,EACxBpV,MAAMoV,IAAiB5gB,EAAAA,EAAAA,GAAA,wBAFP,KAAA2gB,SAAAA,EAIhBA,EAASvD,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQwhB,EAASV,uBAAyBW,IAAmB,IAAM,KAC1GD,EAASN,UAAUjD,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQgB,KAAKwgB,SAASN,UAAUJ,uBAAyBW,IAAmB,IAAM,IACvI,CAEArJ,SAASsJ,GACL,MAAMC,EAAa,IAAIvK,MAAMpW,KAAKwgB,SAASV,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GACxFC,EAAqB,IAAIzK,MAAMpW,KAAKwgB,SAASN,UAAUJ,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GAEhH,IAAK,IAAI1hB,EAAI,EAAGA,EAAIwhB,EAAa1hB,SAAUE,EAAG,CAC1C,MAAM0e,EAAS8C,EAAaxhB,GAE5B,IAAK,IAAI4hB,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASV,yBAA0BgB,EAC9EH,EAAWzhB,EAAIc,KAAKwgB,SAASV,uBAAyBgB,GAAgB9gB,KAAKwgB,SAAS/I,WAAWmG,EAAS5d,KAAKwgB,SAASV,uBAAyBgB,GAGnJ,IAAK,IAAIA,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASN,UAAUJ,yBAA0BgB,EACxFD,EAAmB3hB,EAAIc,KAAKwgB,SAASN,UAAUJ,uBAAyBgB,GAAgB9gB,KAAKwgB,SAASN,UAAUF,WAAWpC,EAAS5d,KAAKwgB,SAASN,UAAUJ,uBAAyBgB,EAE7L,CAEA9gB,KAAKwgB,SAASvD,iBAAiB0D,GAE/B3gB,KAAKwgB,SAASO,OAAO7e,SAAQ8e,IACzB,MAAMC,EAAMP,EAAa5M,QAAQkN,EAAM9L,QAEvC,IAAa,IAAT+L,EACA,MAAM,IAAIhiB,MAAM,kCAAkC+hB,EAAM9L,UAG5D8L,EAAM9L,OAAS+L,CAAG,GAE1B,CAEAlK,SAASmK,GACL,MAAMC,EAAqB/K,MAAMC,KAC7B,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASV,yBAC3C,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAAS/I,WAAWzY,OAASgB,KAAKwgB,SAAS/I,WAAWvY,GAAK,IAElFc,KAAKwgB,SAASvD,iBAAiBkE,GAE/B,MAAMC,EAAyBhL,MAAMC,KACjC,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASN,UAAUJ,yBACrD,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAASN,UAAUF,WAAWhhB,OAASgB,KAAKwgB,SAASN,UAAUF,WAAW9gB,GAAK,IAEtGc,KAAKwgB,SAASN,UAAUjD,iBAAiBmE,EAC7C,GACDphB,KACP,CAEAqhB,OAAOva,EACHiO,EACAnC,EACAoC,EACAC,EACAG,EAA8C,MAE9C,MAAMkM,EAAYthB,KAAKuhB,WAAWC,YAC9B1a,EACAiO,EAAS/U,KAAKyhB,oBACdzM,EAAKA,KACLA,EAAK0M,WACLtM,GACJkM,EAAUK,WAAW,EAAGL,EAAU3L,KAAK3W,OAAQ,CAAE4iB,MAAO5M,EAAK4M,QAE7D,MAAMC,EAAiBP,EAAU9Y,UAAU1C,OAASwb,EAAU5Y,MACxDsY,EAAQ,IAAIlM,GACdhO,EACA,CACIjB,MAAOgc,EAAiB,EAAI7hB,KAAK8hB,WAAaR,EAAU9Y,UAAU3C,MAAQyb,EAAU5Y,MACpF5C,OAAQ+b,EAAiB,EAAI7hB,KAAK8hB,YAEtC/M,EACAnC,EACAoC,EACAC,EACAjV,KAAKugB,wBAAwB/J,YAC5BxO,GAAiChI,KAAKoU,QAAQpM,EAAWsZ,IAC1DlM,GAYJ,OAVe,OAAXA,GACAA,EAAO7B,YAAYyN,GAGvBA,EAAM/Y,WAAWC,QAAQF,GAAiChI,KAAK+hB,gBAAgB/Z,EAAWsZ,KAE1FthB,KAAK+gB,OAAO1Y,KAAK2Y,GAEjBhhB,KAAK+hB,gBAAgBf,EAAOM,GAErBN,CACX,CAEO9C,OACHle,KAAKuF,GAAGyc,YAAYhiB,KAAKuF,GAAG0c,WAAYjiB,KAAKogB,kBAE7C/U,MAAM6S,OACNle,KAAKkgB,UAAUhC,MACnB,CAEIgE,iBACA,OAAOliB,KAAKuhB,UAChB,CAEIW,eAAW1B,GACXxgB,KAAKuhB,WAAaf,CACtB,CAEI2B,aACA,OAAOniB,KAAK+gB,MAChB,CAEI1Z,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,GACjD/f,KAAKkgB,UAAU7Y,eAAiB0Y,CACpC,CAEQgC,gBAAgB/Z,EAA8Boa,GAClDA,EAAMhb,SAAWpH,KAAKqiB,cAAcra,EAAWoa,GAC/CA,EAAMzM,KAAO3N,EAAU2N,KAAKX,KAC5BoN,EAAME,WAAata,EAAU2N,KAAK+L,WAClC1hB,KAAKuiB,iBAAiBva,EAC1B,CAEQqa,cAAcra,EAA8Boa,GAChD,MAAO,CACH3jB,EAAGuJ,EAAUZ,SAAS3I,EAAI,EAAIuB,KAAK8hB,YAAc9Z,EAAUQ,UAAU1C,OAASkC,EAAUU,MAAQ,EAAI1I,KAAK8hB,YACzGpjB,EAAGsJ,EAAUZ,SAAS1I,GAAKsJ,EAAUQ,UAAU1C,OAASkC,EAAUU,MAAQ0Z,EAAM5Z,UAAU1C,OAASsc,EAAM1Z,OAAS,EAE1H,CAEQ6Z,iBAAiBva,GAKrB,GAJAhI,KAAK0d,0BACD1d,KAAKwiB,uBAAuBxa,GAC5BA,EAAUkN,OAASlV,KAAK8f,wBAExB9X,EAAU6N,YAAa,CACvB,MAAM4M,EAAa,IAAIrM,MAAMpW,KAAK6f,oBAAsB/J,GAASwJ,KAAuBsB,KAAK,GAE7F5gB,KAAKkgB,UAAUxC,0BACX+E,EACAza,EAAUkN,OAASlV,KAAKkgB,UAAUJ,uBAC1C,MACI9f,KAAKkgB,UAAUxC,0BACX1d,KAAK0iB,sBAAsB1a,GAC3BA,EAAUkN,OAASlV,KAAKkgB,UAAUJ,uBAE9C,CAEQ0C,uBAAuBxa,GAC3B,OAAOwP,GAAiBa,cACpBrQ,EAAUM,iBACVN,EAAUQ,UACV,CACI,CAACxI,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAC9C3a,EAAU4N,MAAMgN,WAE5B,CAEQF,sBAAsB1a,GAC1B,MAAM6a,EAAa7iB,KAAK8iB,oBAAoB9a,GACtC+a,EAAS/iB,KAAKmgB,UAAUhS,SAASnG,EAAU0N,KAAK9C,MAEtD,OAAO4E,GAAiBa,cACpB,CAAE5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAIuB,KAAK8hB,WAAYpjB,EAAGsJ,EAAUM,iBAAiB5J,EAAIsB,KAAK8hB,YAC5F,CAAEjc,MAAOgd,EAAY/c,OAAQ+c,GAC7B,CACI,CAAC7iB,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAKyhB,oBAAsBzhB,KAAK2iB,cACzE3a,EAAU4N,MAAMgN,UAChB5a,EAAU0N,KAAKkM,MACf,CACI7J,WAAY,CAACgL,EAAOzU,EAAE7P,EAAGskB,EAAOxU,EAAE7P,GAClCsZ,QAAS,CAAC+K,EAAOzU,EAAE7P,EAAGskB,EAAOzU,EAAE5P,GAC/BuZ,SAAU,CAAC8K,EAAOxU,EAAE9P,EAAGskB,EAAOzU,EAAE5P,GAChCwZ,YAAa,CAAC6K,EAAOxU,EAAE9P,EAAGskB,EAAOxU,EAAE7P,KAGnD,CAEQokB,oBAAoB9a,GACxB,OAAOA,EAAUQ,UAAU1C,OAAS,EAAI9F,KAAK8hB,UACjD,CAEQ1N,QAAQpM,EAA8BsZ,GAC1C,MAAM0B,EAAehjB,KAAK+gB,OAAOjN,QAAQ9L,IAEnB,IAAlBgb,IAIJhjB,KAAK+gB,OAAO5U,OAAO6W,EAAc,GAEjChjB,KAAKuiB,iBAAiBva,GAEtBhI,KAAKugB,wBAAwBtJ,KAAKjP,EAAUkN,QAE5CoM,EAAUlN,UACd,GA5PS6L,GAAetc,GAAA,EAD3BC,EAAAA,EAAAA,KAmBQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOuZ,KACPxZ,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeI,YACtB+B,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeM,mBACtB6B,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAJoD,oBAIpD,GAJoD,qBAAtBY,wBAAAA,wBAAsB+E,GAAA7E,OACxBoZ,GACgB,oBADGyD,GACH,qBAAXlT,IAAAA,IAAWkT,GAAA7c,OACe,oBADf8c,GACe,qBAAZC,cAAAA,cAAYD,GAAA9c,OAC7B,oBAD6Bgd,GAC7B,qBAAX9d,GAAAA,GAAW8d,GAAAhd,UAtB7C6Z,IA+Pb7a,EAAUiB,KAAK4Z,IAAiB3Z,SAASC,mBC7VzC,0LCAA,mLCaM,MAAO8c,GAWT3jB,YACIoH,EACA2B,EACAsM,EACAC,EACA0M,EACAH,EACQpM,EACRC,IAA2CvV,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,gBAlB9B,IAAIA,EAAAA,EAAAA,GAAA,gBAEF,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,iBAIhC,IAAKA,EAAAA,EAAAA,GAAA,gBAEL,IAAI+L,IASX,KAAAuJ,QAAAA,EAGRnV,KAAKsjB,SAAW/B,EAAWgC,eACvBzc,EACA2B,EACAsM,EACAC,EACA0M,EACAtM,EACR,CAEIoO,eACA,OAAOxjB,KAAKyjB,QAChB,CAEAC,QAAQ3jB,GACJ,MAAM4jB,EAAU5jB,EAAE6jB,IAAIC,WAAW,GAEjC,GAAc,cAAV9jB,EAAE6jB,KAAuB5jB,KAAK2V,KAAK3W,OAAS,EAAG,CAC/C,MAAM8kB,IAAqD,OAApC9jB,KAAK2V,KAAK3V,KAAK2V,KAAK3W,OAAS,IAAegB,KAAK2V,KAAK3W,OAAS,GAArE,EACjBgB,KAAK2V,KAAO3V,KAAK2V,KAAKoO,MAAM,EAAG/jB,KAAK2V,KAAK3W,OAAS8kB,EACtD,MAA4B,IAAjB/jB,EAAE6jB,IAAI5kB,QAAgB2kB,GAAW,IAAIE,WAAW,IAAMF,GAAW,IAAIE,WAAW,GACvF7jB,KAAK2V,KAAO3V,KAAK2V,KAAO5V,EAAE6jB,IACT,UAAV7jB,EAAE6jB,MACT5jB,KAAK2V,KAAO3V,KAAK2V,KAAO,KAEhC,CAEIvO,eACA,OAAOpH,KAAKsjB,SAASlc,QACzB,CAEIA,aAASN,GACT9G,KAAKsjB,SAASlc,SAAWN,CAC7B,CAEI0B,gBACA,OAAOxI,KAAKsjB,SAAS9a,SACzB,CAEIA,cAAUC,GACVzI,KAAKsjB,SAAS9a,UAAYC,CAC9B,CAEIH,uBACA,OAAOtI,KAAKsjB,SAAShb,gBACzB,CAEIqN,WACA,OAAO3V,KAAKsjB,SAAS3N,IACzB,CAEIA,SAAKX,GACLhV,KAAKsjB,SAAS3N,KAAOX,CACzB,CAEIS,aACA,OAAOzV,KAAKsjB,SAAS7N,MACzB,CAEIA,WAAOV,GACP/U,KAAKsjB,SAAS7N,OAASV,CAC3B,CAEIuN,iBACA,OAAOtiB,KAAKsjB,SAAShB,UACzB,CAEIA,eAAWZ,GACX1hB,KAAKsjB,SAAShB,WAAaZ,CAC/B,CAEIsC,kBACA,OAAOhkB,KAAKsjB,SAASU,WACzB,CAEIC,gBAAY9L,GACZnY,KAAKsjB,SAASU,YAAc7L,CAChC,CAEIzP,YACA,OAAO1I,KAAKsjB,SAAS5a,KACzB,CAEIA,UAAMK,GACN/I,KAAKsjB,SAAS5a,MAAQK,CAC1B,CAEImb,cACA,OAAOlkB,KAAKmkB,OAChB,CAEID,YAAQ7lB,GACR2B,KAAKmkB,QAAU9lB,EAEVA,GACD2B,KAAKyjB,SAASnX,SAGlBtM,KAAKsjB,SAASY,QAAU7lB,CAC5B,CAEI4J,iBACA,OAAOjI,KAAKokB,QAChB,CAEIC,eACA,OAAOrkB,KAAKskB,QAChB,CAEAC,QACIvkB,KAAKskB,UAAW,CACpB,CAEAE,OACIxkB,KAAKskB,UAAW,CACpB,CAEAG,cACIzkB,KAAKsjB,SAASmB,aAClB,CAEArQ,UACIpU,KAAKyjB,SAASnX,SAEdtM,KAAKyjB,SAASpX,YACdrM,KAAKokB,SAAS/X,YAEdrM,KAAKmV,UAELnV,KAAKsjB,SAASlP,SAClB,E,OC/ICsQ,G,6eAAL,SAAKA,GAAoCA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,EAAlD,CAAKA,KAAAA,GAAiC,KAG/B,IAAMC,GAAN,cAAyC9H,GAG5Cnd,YAA0D6F,GACtD,MAAMka,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAAS4O,IAC9BzG,EAAsB,EAE5B5S,MAAM9F,EACF,CAAEqZ,SAAUgG,GAAyB9F,OAAQ+F,IAC7C,CAAC,CACG1K,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,IAEZ,CAAEK,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,yBAClE,CAEAwhB,OAAOva,EACH2B,EACAsM,EACAC,EACA0M,EACAvM,EACAC,EAA8C,MAE9C,OAAO,IAAIiO,GACPvc,EACA2B,EACAsM,EACAC,EACA0M,EACA1hB,KAAKuhB,WACLpM,EACAC,EACR,CAEI8M,iBACA,OAAOliB,KAAKuhB,UAChB,CAEIW,eAAW1B,GACXxgB,KAAKuhB,WAAaf,CACtB,CAEInZ,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,GAlDS4E,GAA0BhhB,GAAA,EADtCC,EAAAA,EAAAA,KAIgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBAAsB,wBAA2B,oBAA3B,GAA2B,qBAAtBoC,wBAAAA,wBAAsBC,GAAAC,UAH3Eue,IAqDbvf,EAAUiB,KAAKse,IAA4Bre,SAASwe,mBAIpD1f,EACKiB,KAA4DxC,EAAeY,mCAC3EsgB,WAAoDC,GAAQzD,IACzD,MAAM5I,EAAWqM,EAAIC,UAAUlR,IAAI4Q,IAGnC,OAFAhM,EAASuJ,WAAaX,EAEf5I,CAAQ,ICtFvB,4fCAA,oYCAA,yJCAA,kPCgBM,MAAOuM,GAiBTxlB,YACYoH,EACA2B,EACAsM,EACAE,EACAkQ,EACAC,EACDlQ,EACCC,EACAC,EAA8C,OAAIvV,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,kBArBzC,IAAI+L,KAA8C/L,EAAAA,EAAAA,GAAA,aAEvD,IAACA,EAAAA,EAAAA,GAAA,kBAEG,IAAKA,EAAAA,EAAAA,GAAA,iBAEN,IAAKA,EAAAA,EAAAA,GAAA,gCAAAA,EAAAA,EAAAA,GAAA,sBAI0B,MAGtC,KAAAiH,SAAAA,EACA,KAAA2B,UAAAA,EACA,KAAAsM,OAAAA,EACA,KAAAE,MAAAA,EACA,KAAAkQ,UAAAA,EACA,KAAAC,cAAAA,EACD,KAAAlQ,OAAAA,EACC,KAAAC,QAAAA,EACA,KAAAC,OAAAA,EACRpV,KAAKqV,eAAiBD,GAAQnN,WAAWC,QAAO,IAAMlI,KAAKsT,WAAWhH,OAAOtM,SAAU,IAC3F,CAEIiI,iBACA,OAAOjI,KAAKsT,UAChB,CAEIlM,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIsI,uBACA,GAAItI,KAAKoV,OAAQ,CACb,MAAMI,EAAiB,CAACxV,KAAKoV,OAAO9M,iBAAiB7J,EAAGuB,KAAKoV,OAAO9M,iBAAiB5J,GAC/E6J,EAAmB9H,EAAAA,GAASA,EAAAA,KAAe+U,EAAgB,CAACxV,KAAKoH,SAAS3I,EAAIuB,KAAK0I,MAAO1I,KAAKoH,SAAS1I,EAAIsB,KAAK0I,QAEvH,MAAO,CAAEjK,EAAG8J,EAAiB,GAAI7J,EAAG6J,EAAiB,GACzD,CACI,OAAOvI,KAAKoH,QAEpB,CAEIoB,gBACA,MAAO,CAAE3C,MAAO7F,KAAKyI,UAAU5C,MAAQ7F,KAAK0I,MAAO5C,OAAQ9F,KAAKyI,UAAU3C,OAAS9F,KAAK0I,MAC5F,CAEIF,cAAUC,GACVzI,KAAKyI,UAAYA,EAEjBzI,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIyV,aACA,OAAOzV,KAAK+U,MAChB,CAEIU,WAAOV,GACP/U,KAAK+U,OAASA,EAEd/U,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0V,WACA,OAAO1V,KAAKmlB,SAChB,CAEIzP,SAAKT,GACLjV,KAAKmlB,UAAYlQ,EAEjBjV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI4V,YACA,OAAO5V,KAAKiV,KAChB,CAEIW,UAAMX,GACNjV,KAAKiV,MAAQ,IAAKA,GAElBjV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0I,YACA,OAAuB,OAAhB1I,KAAKoV,OAAkBpV,KAAK+I,MAAQ/I,KAAK+I,MAAQ/I,KAAKoV,OAAO1M,KACxE,CAEIA,UAAMK,GACN/I,KAAK+I,MAAQA,EAEb/I,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIqlB,gBACA,OAAOrlB,KAAKslB,SAChB,CAEIC,cACA,OAAOvlB,KAAKwlB,QAChB,CAEID,YAAQlnB,GACJA,IAAU2B,KAAKwlB,WAInBxlB,KAAKwlB,SAAWnnB,EAEZA,GACA2B,KAAKylB,gBAAkB,IAAKzlB,KAAKmlB,WAEjCnlB,KAAKmlB,UAAUvD,MAAQsD,GAAuBQ,mBAE9C1lB,KAAKmlB,UAAUvD,MAAQ5hB,KAAKylB,gBAAgB7D,MAGhD5hB,KAAKsT,WAAWhH,OAAOtM,MAC3B,CAEA2lB,QACS3lB,KAAKwlB,UACNxlB,KAAKolB,cAAcplB,KAE3B,CAEAoU,UACIpU,KAAKuV,eAELvV,KAAKoV,QAAQxB,YAAY5T,MAEzBA,KAAKmV,QAAQnV,MAEbA,KAAKkV,OAASgQ,GAAuBU,iBAET,OAAxB5lB,KAAKqV,gBACLrV,KAAKqV,gBAEb,CAEQE,eACJvV,KAAK8G,SAAW,CAAErI,EAAG,EAAGC,EAAG,GAC3BsB,KAAKyI,UAAY,CAAE5C,MAAO,EAAGC,OAAQ,GACrC9F,KAAKslB,WAAY,CACrB,G,OA3JSJ,GAAsB,oBACkB,CAAC,mBAAqB,kBAAoB,oBAAkBrlB,EAAAA,EAAAA,GADpGqlB,GAAsB,oBAGI,G,aCMlCW,GAEAC,G,6eAFL,SAAKD,GAAwBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,cAAI,EAAxF,CAAKA,KAAAA,GAAqB,KAE1B,SAAKC,GAA+BA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,CAAtD,CAAKA,KAAAA,GAA4B,KAEjC,MAAMC,WAAgClJ,GAKlCnd,YAAY6F,GACR,MAAMka,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASgQ,IAEpCza,MAAM9F,EACF,CAAEqZ,SAAUoH,GAAsBlH,OAAQmH,IAC1C,CAAC,CACG9L,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,IAEhB,CAAExB,oBAAqB8H,GAAwBlG,oBAAqBvB,kBAAmB/Y,EAAGqa,WAClG,CAEIvY,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEIC,iBACA,OAAOhgB,KAAKyX,UAChB,G,OApCEsO,GAAwB,sBACG,KAAElmB,EAAAA,EAAAA,GAD7BkmB,GAAwB,yBAGejQ,GAASgQ,IAAgCC,GAAwBlG,qBA2CvG,IAAMqG,GAAN,cAAmCrJ,GAkBtCnd,YACkD6F,EACJ4a,EACOC,GACjD,MAAMX,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OAExC2C,EAASU,EAAY3J,GAAS+P,IAC9B5H,EAAsB,GAC5B5S,MAAM9F,EACF,CAAEqZ,SAAUuH,GAAerH,OAAQsH,IACnC,CAAC,CACGjM,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,GAEZ,CACIzD,KAAM,cACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,cACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,SACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,IAEhB,CAAExB,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,uCAAAA,EAAAA,EAAAA,GAAA,oBAvDlC,KAAGA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,mBAIa,KAAEA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,kBAMN,IAKE,KAAAsgB,UAAAA,EACO,KAAAC,iBAAAA,EAyCjDpgB,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAAS+P,IAAyB7lB,KAAK6f,oBAErE7f,KAAKyG,SAAWrB,EAAU2O,IAAIzO,GAE9BtF,KAAKqmB,QAAU,IAAIN,GAAwBxgB,GAE3CvF,KAAKugB,wBAA0B,IAAK,cAAcvK,GAC9CtW,YAAoB8gB,GAChB,MAAMC,EAAkB,EACxBpV,MAAMoV,IAAiB5gB,EAAAA,EAAAA,GAAA,wBAFP,KAAA2gB,SAAAA,EAIhBA,EAASvD,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQwhB,EAASV,uBAAyBW,IAAmB,IAAM,KAC1GD,EAAS6F,QAAQpJ,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQ+mB,GAAwBjG,uBAAyBW,IAAmB,IAAM,IACrI,CAEArJ,SAASsJ,GACL,MAAM4F,EAAc,IAAIlQ,MAAMpW,KAAKwgB,SAASV,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GACzFC,EAAqB,IAAIzK,MAAM2P,GAAwBjG,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GAEhH,IAAK,IAAI1hB,EAAI,EAAGA,EAAIwhB,EAAa1hB,SAAUE,EAAG,CAC1C,MAAM0e,EAAS8C,EAAaxhB,GAE5B,IAAK,IAAI4hB,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASV,yBAA0BgB,EAC9EwF,EAAYpnB,EAAIc,KAAKwgB,SAASV,uBAAyBgB,GAAgB9gB,KAAKwgB,SAAS/I,WAAWmG,EAAS5d,KAAKwgB,SAASV,uBAAyBgB,GAGpJ,IAAK,IAAIA,EAAe,EAAGA,EAAeiF,GAAwBjG,yBAA0BgB,EACxFD,EAAmB3hB,EAAI6mB,GAAwBjG,uBAAyBgB,GAAgB9gB,KAAKwgB,SAAS6F,QAAQrG,WAAWpC,EAASmI,GAAwBjG,uBAAyBgB,EAE3L,CAEA9gB,KAAKwgB,SAASvD,iBAAiBqJ,GAC/BtmB,KAAKwgB,SAAS6F,QAAQpJ,iBAAiB4D,GAEvC7gB,KAAKwgB,SAAS+F,YAAYrkB,SAAQskB,IAC9B,MAAMvF,EAAMP,EAAa5M,QAAQ0S,EAAItR,QAErC,IAAa,IAAT+L,EACA,MAAM,IAAIhiB,MAAM,kCAAkCunB,EAAItR,UAG1DsR,EAAItR,OAAS+L,CAAG,GAExB,CAEAlK,SAASmK,GACL,MAAMuF,EAAsBrQ,MAAMC,KAC9B,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASV,yBAC3C,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAAS/I,WAAWzY,OAASgB,KAAKwgB,SAAS/I,WAAWvY,GAAK,IAElFc,KAAKwgB,SAASvD,iBAAiBwJ,GAG/B,MAAMC,EAAuBtQ,MAAMC,KAC/B,CAAErX,OAAQkiB,EAAmB6E,GAAwBjG,yBACrD,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAAS6F,QAAQrG,WAAWhhB,OAASgB,KAAKwgB,SAAS6F,QAAQrG,WAAW9gB,GAAK,IAElGc,KAAKwgB,SAAS6F,QAAQpJ,iBAAiByJ,EAC3C,GACD1mB,KACP,CAEAqhB,OAAOva,EACH2B,EACAsM,EACAE,EACAkQ,EACAC,EACAhQ,GAEA,MAAMuR,EAAS,IAAIzB,GACfpe,EACA2B,EACAsM,EACAE,EACAkQ,GACC5Y,GAAyBvM,KAAK4mB,WAAWra,EAAQ6Y,IAClDplB,KAAKugB,wBAAwB/J,YAC5BxO,GAAsChI,KAAKoU,QAAQpM,IACpDoN,GAcJ,OAZe,OAAXA,GACAA,EAAO7B,YAAYoT,GAGvBA,EAAO1e,WAAWC,QAAQF,GAAsChI,KAAKuiB,iBAAiBva,KAEtFhI,KAAKumB,YAAYle,KAAKse,GAEP,OAAXvR,GACApV,KAAKuiB,iBAAiBoE,GAGnBA,CACX,CAEQC,WAAWra,EAAsBsa,GACrC,MAAMC,EAAoB9mB,KAAK+mB,WAAW3a,WAAUoa,GAAOA,EAAI7Y,SAAWpB,IAE1E,IAA2B,IAAvBua,EAA0B,CAC1B,MAAME,EAAYhnB,KAAK+mB,WAAWD,GAClCE,EAAUrZ,OAAOiI,MAAQ,IAAKoR,EAAUrZ,OAAOiI,MAAOgN,UAAWoE,EAAUC,iBAE3EjnB,KAAK+mB,WAAW5a,OAAO2a,EAAmB,EAC9C,CAEA9mB,KAAK+mB,WAAW1e,KAAK,CAAEsF,OAAQpB,EAAQ0a,gBAAiB1a,EAAOqJ,MAAMgN,UAAWsE,UAAWhnB,KAAKC,QAEhG0mB,EAAOta,EACX,CAEQ6H,QAAQpM,GACZ,MAAMgb,EAAehjB,KAAKumB,YAAYzS,QAAQ9L,IAExB,IAAlBgb,IAIJhjB,KAAKumB,YAAYpa,OAAO6W,EAAc,GAEtChjB,KAAKuiB,iBAAiBva,GAEtBhI,KAAKugB,wBAAwBtJ,KAAKjP,EAAUkN,QAChD,CAEAgJ,OACIle,KAAKuF,GAAGyc,YAAYhiB,KAAKuF,GAAG0c,WAAYjiB,KAAKogB,kBAE7CpgB,KAAKmnB,iBAEL9b,MAAM6S,OACNle,KAAKqmB,QAAQnI,MACjB,CAEQiJ,iBACJ,MAAMC,EAAmB,GACnBC,EAAoB,IACpBC,EAAe,IAEfC,EAAqC,GACrCC,EAAkC,GACxC,IAAK,MAAMR,KAAahnB,KAAK+mB,WACrBC,EAAUrZ,OAAO0X,YAIjBnlB,KAAKC,MAAQ6mB,EAAUE,WAAaE,EAAmBC,EACvDE,EAAYlf,KAAK2e,GAEjBQ,EAASnf,KAAK2e,IAItBhnB,KAAK+mB,WAAaQ,EAElBC,EAAStlB,SAAQulB,GAAQA,EAAK9Z,OAAOiI,MAAQ,IAAK6R,EAAK9Z,OAAOiI,MAAOgN,UAAW6E,EAAKR,mBAErF,IAAK,MAAMD,KAAahnB,KAAK+mB,WAAY,CACrC,MAAMnE,EAAiB,IAAIoE,EAAUrZ,OAAOiI,MAAMgN,WAC5C8E,EAAUxnB,KAAKC,MAAQ6mB,EAAUE,UAEvC,GAAIQ,GAAWN,EAAkB,CAC7B,MAAMO,EAAmBD,EAAUN,EAC7BQ,EAAS,GAAKN,EAAe,GAAKK,EAExC/E,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,GAC1DhF,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,GAC1DhF,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,EAC9D,KAAO,CACH,MAAMC,GAAqBH,EAAUN,GAAoBC,EACnDO,EAAS,GAAKN,EAAe,IAAM,EAAIO,GAE7CjF,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,GAC1DhF,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,GAC1DhF,EAAU,GAAKpkB,KAAKF,IAAI,EAAG0oB,EAAUC,gBAAgB,GAAKW,EAC9D,CAEAZ,EAAUrZ,OAAOiI,MAAQ,IAAKoR,EAAUrZ,OAAOiI,MAAOgN,YAC1D,CACJ,CAEIkF,kBACA,OAAO9nB,KAAKumB,WAChB,CAEIlf,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,GACjD/f,KAAKqmB,QAAQhf,eAAiB0Y,CAClC,CAEQwC,iBAAiBva,GACrBhI,KAAK+nB,wBAAwB/f,GAEzBA,EAAUqd,UACVrlB,KAAKgoB,uBAAuBhgB,GAE5BhI,KAAKioB,wBAAwBjgB,EAErC,CAEQ+f,wBAAwB/f,GAC5BhI,KAAK0d,0BACD1d,KAAKkoB,yBAAyBlgB,GAC9BA,EAAUkN,OAASlV,KAAK8f,uBAChC,CAEQkI,uBAAuBhgB,GAC3BhI,KAAKqmB,QAAQ3I,0BACT,IAAItH,MAAM2P,GAAwBlG,oBAAsB/J,GAASgQ,KAA+BlF,KAAK,GACrG5Y,EAAUkN,OAAS6Q,GAAwBjG,uBACnD,CAEQmI,wBAAwBjgB,GAC5BhI,KAAKqmB,QAAQ3I,0BACT1d,KAAKmoB,yBAAyBngB,GAC9BA,EAAUkN,OAAS6Q,GAAwBjG,uBACnD,CAEQoI,yBAAyBlgB,GAC7B,MAAM+a,EAAS/iB,KAAKmgB,UAAUhS,SAASnG,EAAU0N,KAAK9C,MAEtD,GAAI7E,GAAaqa,cAAcrF,GAC3B,MAAM,IAAI9jB,MAAM,2BAA2B+I,EAAU0N,KAAK9C,QAG9D,OAAO5K,EAAUQ,UAAU3C,MAAQmC,EAAUQ,UAAU1C,QAAU,EAC7D9F,KAAKqoB,6BAA6BrgB,EAAW+a,GAC7C/iB,KAAKsoB,6BAA6BtgB,EAAW+a,EACrD,CAEQsF,6BAA6BrgB,EAAmC+a,GACpE,MAAMwF,EAAYvgB,EAAUQ,UAAU1C,OAASid,EAAO3S,YAChDoY,GAAgBxgB,EAAUQ,UAAU3C,MAAQ0iB,GAAa,EAEzDE,EAAwBjR,GAAiBa,cAC3CrQ,EAAUM,iBACV,CAAEzC,MAAO2iB,EAAc1iB,OAAQkC,EAAUQ,UAAU1C,QACnD,CAAC,CAAC9F,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAAe3a,EAAU4N,MAAMgN,UAAW5a,EAAU0N,KAAKkM,MAAO,EAAE,GAAI,KAEnH8G,EAAiBlR,GAAiBa,cACpC,CAAE5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAI+pB,EAAc9pB,EAAGsJ,EAAUM,iBAAiB5J,GAChF,CAAEmH,MAAO0iB,EAAWziB,OAAQkC,EAAUQ,UAAU1C,QAChD,CACI,CAAC9F,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAC9C3a,EAAU4N,MAAMgN,UAChB5a,EAAU0N,KAAKkM,MACf,CACI7J,WAAY,CAACgL,EAAOzU,EAAE7P,EAAGskB,EAAOxU,EAAE7P,GAClCsZ,QAAS,CAAC+K,EAAOzU,EAAE7P,EAAGskB,EAAOzU,EAAE5P,GAC/BuZ,SAAU,CAAC8K,EAAOxU,EAAE9P,EAAGskB,EAAOzU,EAAE5P,GAChCwZ,YAAa,CAAC6K,EAAOxU,EAAE9P,EAAGskB,EAAOxU,EAAE7P,MAIzCiqB,EAAyBnR,GAAiBa,cAC5C,CAAE5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAI+pB,EAAeD,EAAW7pB,EAAGsJ,EAAUM,iBAAiB5J,GAC5F,CAAEmH,MAAO2iB,EAAc1iB,OAAQkC,EAAUQ,UAAU1C,QACnD,CAAC,CAAC9F,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAAe3a,EAAU4N,MAAMgN,UAAW5a,EAAU0N,KAAKkM,MAAO,EAAE,GAAI,KAEzH,MAAO,IAAI6G,KAA0BC,KAAmBC,EAC5D,CAEQL,6BAA6BtgB,EAAmC+a,GACpE,MAAM6F,EAAa5gB,EAAUQ,UAAU3C,MAAQkd,EAAO3S,YAChDyY,GAAiB7gB,EAAUQ,UAAU1C,OAAS8iB,GAAc,EAE5DE,EAA0BtR,GAAiBa,cAC7CrQ,EAAUM,iBACV,CAAEzC,MAAOmC,EAAUQ,UAAU3C,MAAOC,OAAQ+iB,GAC5C,CAAC,CAAC7oB,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAAe3a,EAAU4N,MAAMgN,UAAW5a,EAAU0N,KAAKkM,MAAO,EAAE,GAAI,KAEnH8G,EAAiBlR,GAAiBa,cACpC,CAAE5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAGC,EAAGsJ,EAAUM,iBAAiB5J,EAAImqB,GACrE,CAAEhjB,MAAOmC,EAAUQ,UAAU3C,MAAOC,OAAQ8iB,GAC5C,CACI,CAAC5oB,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAC9C3a,EAAU4N,MAAMgN,UAChB5a,EAAU0N,KAAKkM,MACf,CACI7J,WAAY,CAACgL,EAAOzU,EAAE7P,EAAGskB,EAAOxU,EAAE7P,GAClCsZ,QAAS,CAAC+K,EAAOzU,EAAE7P,EAAGskB,EAAOzU,EAAE5P,GAC/BuZ,SAAU,CAAC8K,EAAOxU,EAAE9P,EAAGskB,EAAOzU,EAAE5P,GAChCwZ,YAAa,CAAC6K,EAAOxU,EAAE9P,EAAGskB,EAAOxU,EAAE7P,MAIzCqqB,EAAuBvR,GAAiBa,cAC1C,CAAE5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAGC,EAAGsJ,EAAUM,iBAAiB5J,EAAImqB,EAAgBD,GACrF,CAAE/iB,MAAOmC,EAAUQ,UAAU3C,MAAOC,OAAQ+iB,GAC5C,CAAC,CAAC7oB,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAAe3a,EAAU4N,MAAMgN,UAAW5a,EAAU0N,KAAKkM,MAAO,EAAE,GAAI,KAEzH,MAAO,IAAIkH,KAA4BJ,KAAmBK,EAC9D,CAEQZ,yBAAyBngB,GAC7B,MAAMnC,EAAQ,EAEd,OAAO2R,GAAiBwR,UACpB,CAAEvqB,EAAGuJ,EAAUM,iBAAiB7J,EAAIoH,EAAOnH,EAAGsJ,EAAUM,iBAAiB5J,EAAImH,GAC7E,CAAEA,MAAOmC,EAAUQ,UAAU3C,MAAQ,EAAIA,EAAOC,OAAQkC,EAAUQ,UAAU1C,OAAS,EAAID,GACzFA,EAAQmC,EAAUU,MAAO,CAAC,CAAC1I,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAAe3a,EAAU4N,MAAMqT,cAC/G,GA5WS/C,GAAoBviB,GAAA,EADhCC,EAAAA,EAAAA,KAoBQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeI,YACtB+B,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeM,mBAAiB,wBAFgC,oBAEhC,GAFgC,qBAAtB+B,wBAAAA,wBAAsBC,GAAAC,OACR,oBADQ6E,GACR,qBAAX8E,IAAAA,IAAW9E,GAAA7E,OACe,oBADf6c,GACe,qBAAZE,cAAAA,cAAYF,GAAA7c,UArB1E8f,IA+Wb9gB,EAAUiB,KAAK6f,IAAsB5f,SAASC,mBC1b9C,wXCAA,4SCeM,MAAO2iB,GAqBTxpB,YACYoH,EACAkO,EACA0M,EACA3M,EACAoU,EACA/T,IAA2CvV,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,qBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,aApBvC,IAACA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,eAIW,KAAEA,EAAAA,EAAAA,GAAA,kBAET,IAAI+L,KAAyC/L,EAAAA,EAAAA,GAAA,iBAEpC,CAAEgG,MAAO,EAAGC,OAAQ,KAAGjG,EAAAA,EAAAA,GAAA,sBAEH,OAAIA,EAAAA,EAAAA,GAAA,qBAE/B,GAGX,KAAAiH,SAAAA,EACA,KAAAkO,KAAAA,EACA,KAAA0M,WAAAA,EACA,KAAA3M,OAAAA,EACA,KAAAoU,eAAAA,EACA,KAAA/T,OAAAA,EAERpV,KAAKopB,aAAe,GACpBppB,KAAKqpB,qBAELrpB,KAAKspB,mBAELtpB,KAAKqV,eAAiBD,GAAQnN,WAAWC,QAAO,IAAMlI,KAAKupB,oBAAqB,IACpF,CAEA5H,WAAW6H,EAAeC,EAAaxU,GACnC,IAAK,IAAI/V,EAAIsqB,EAAOtqB,EAAIuqB,IAAOvqB,EAC3Bc,KAAKopB,aAAalqB,GAAK,IAAK+V,GAGhCjV,KAAKupB,gBACT,CAEAG,cAAcC,EAAa/L,GACvB5d,KAAK4pB,QAAQ5pB,KAAK4pB,QAAQ9V,QAAQ6V,IAAQ/L,CAC9C,CAEIhI,YACA,OAAO5V,KAAKopB,YAChB,CAEIhiB,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAKupB,gBACT,CAEIjhB,uBACA,GAAItI,KAAKoV,OAAQ,CACb,MAAMI,EAAiB,CAACxV,KAAKoV,OAAO9M,iBAAiB7J,EAAGuB,KAAKoV,OAAO9M,iBAAiB5J,GAC/E6J,EAAmB9H,EAAAA,GAASA,EAAAA,KAAe+U,EAAgB,CAACxV,KAAKoH,SAAS3I,EAAIuB,KAAK0I,MAAO1I,KAAKoH,SAAS1I,EAAIsB,KAAK0I,QAEvH,MAAO,CAAEjK,EAAG8J,EAAiB,GAAI7J,EAAG6J,EAAiB,GACzD,CACI,OAAOvI,KAAKoH,QAEpB,CAEIuO,WACA,OAAO3V,KAAKgV,IAChB,CAEIW,SAAKX,GACLhV,KAAKgV,KAAOA,EACZhV,KAAKqpB,qBACLrpB,KAAKspB,mBAELtpB,KAAKupB,gBACT,CAEIjH,iBACA,OAAOtiB,KAAK0hB,UAChB,CAEIY,eAAWZ,GACX1hB,KAAK0hB,WAAaA,EAElB1hB,KAAKupB,gBACT,CAEI9T,aACA,OAAOzV,KAAK+U,MAChB,CAEIU,WAAOV,GACP/U,KAAK+U,OAASA,EAEd/U,KAAKupB,gBACT,CAEI7gB,YACA,OAAuB,OAAhB1I,KAAKoV,OAAkBpV,KAAK+I,MAAQ/I,KAAK+I,MAAQ/I,KAAKoV,OAAO1M,KACxE,CAEIA,UAAMK,GACN/I,KAAK+I,MAAQA,EAEb/I,KAAKupB,gBACT,CAEI/gB,gBACA,MAAO,IAAKxI,KAAKyI,UACrB,CAEAohB,oBAAoBphB,GAChBzI,KAAKyI,UAAYA,CACrB,CAEIqhB,cACA,OAAO9pB,KAAK4pB,OAChB,CAEI3hB,iBACA,OAAOjI,KAAKsT,UAChB,CAEYyW,0BACR,OAAO/pB,KAAKgV,KACPgV,MAAM,IACNC,QAAOC,IAAShB,GAAkBiB,oBAAoBC,SAASF,KAC/DlrB,MACT,CAEYqrB,4BACR,OAAOrqB,KAAK4pB,QACPK,QAAOxrB,GAAKA,IAAMyqB,GAAkBoB,qBACpCtrB,MACT,CAEAoV,UACIpU,KAAKuV,eAELvV,KAAKoV,QAAQxB,YAAY5T,MAEG,OAAxBA,KAAKqV,gBACLrV,KAAKqV,gBAEb,CAEQkU,iBACCvpB,KAAKyT,eACNzT,KAAKyT,cAAe,EACpB7I,gBAAe,IAAM5K,KAAKsM,WAElC,CAEQA,SACJtM,KAAKsT,WAAWhH,OAAOtM,MACvBA,KAAKyT,cAAe,CACxB,CAEQ8B,eACJvV,KAAK2V,KAAO,EAChB,CAEQ4U,mBACJ,IAAIC,EAAoBxqB,KAAK+pB,oBAAsB/pB,KAAKqqB,sBAExD,MAAOG,KAAsB,EAAG,CAC5B,MAAM5M,EAAS5d,KAAKmpB,eAAe3S,SAASxW,MAC5CA,KAAK4pB,QAAQvhB,KAAKuV,EACtB,CACJ,CAEQ6M,mBACJ,MAAMC,EAAgB1qB,KAAKqqB,sBAAwBrqB,KAAK+pB,oBAExD,IAAK,IAAI7qB,EAAIc,KAAK4pB,QAAQ5qB,OAAS,EAAG2rB,EAAW,EAAGA,EAAWD,IAAiBxrB,EAAG,CAC/E,MAAM0e,EAAS5d,KAAK4pB,QAAQ1qB,GAExB0e,IAAWsL,GAAkBoB,qBAC7BtqB,KAAKmpB,eAAelS,KAAK2G,GACzB5d,KAAK4pB,QAAQzd,OAAOjN,EAAG,KAErByrB,EAEV,CACJ,CAEQrB,mBACAtpB,KAAK+pB,oBAAsB/pB,KAAKqqB,sBAChCrqB,KAAKuqB,mBACEvqB,KAAK+pB,oBAAsB/pB,KAAKqqB,uBACvCrqB,KAAKyqB,mBAGLzqB,KAAKgV,KAAKhW,OAASgB,KAAK4pB,QAAQ5qB,OAChCgB,KAAK4qB,8BACE5qB,KAAK4pB,QAAQ5qB,OAASgB,KAAKgV,KAAKhW,QACvCgB,KAAK6qB,kCAGT7qB,KAAK8qB,2BACT,CAEQF,8BACJ,IAAIG,EAA2B/qB,KAAKgV,KAAKhW,OAASgB,KAAK4pB,QAAQ5qB,OAE/D,MAAO+rB,KAA6B,EAChC/qB,KAAK4pB,QAAQvhB,KAAK6gB,GAAkBoB,mBAE5C,CAEQO,kCACJ,MAAMH,EAAgB1qB,KAAK4pB,QAAQ5qB,OAASgB,KAAKgV,KAAKhW,OAEtD,IAAK,IAAIE,EAAIc,KAAK4pB,QAAQ5qB,OAAS,EAAGgsB,EAAU,EAAGA,EAAUN,IAAiBxrB,EAAG,CAC7E,MAAM0e,EAAS5d,KAAK4pB,QAAQ1qB,GAExB0e,IAAWsL,GAAkBoB,qBAC7BtqB,KAAK4pB,QAAQzd,OAAOjN,EAAG,KAErB8rB,EAEV,CACJ,CAEQF,4BACJ,IAAK,IAAIG,EAAU,EAAGC,EAAiB,EAAGD,EAAUjrB,KAAKgV,KAAKhW,SAAUisB,EAAS,CAC7E,MAAME,EAASnrB,KAAKgV,KAAKiW,GACnBrN,EAAS5d,KAAK4pB,QAAQqB,GAE5B,GAAI/B,GAAkBiB,oBAAoBC,SAASe,IAAWvN,IAAWsL,GAAkBoB,mBAAoB,CAC3G,MAAMc,EAAwBprB,KAAK4pB,QAC9B7F,MAAMmH,GACN9e,WAAU,CAAC3N,EAAGS,IAAMT,IAAMyqB,GAAkBoB,qBAAuBpB,GAAkBiB,oBAAoBC,SAASpqB,KAAKgV,KAAKkW,EAAiBhsB,MAAOgsB,EAEzJlrB,KAAK4pB,QAAQqB,GAAW/B,GAAkBoB,mBAC1CtqB,KAAK4pB,QAAQwB,GAAyBxN,EAEtCsN,EAAiBE,EAAwB,CAC7C,CACJ,CACJ,CAEQC,qBACJrrB,KAAKopB,aAAe,IAAIppB,KAAKopB,gBAAiBhT,MAAMC,KAAK,CAAErX,OAAQgB,KAAKgV,KAAKhW,SAAU,KAAM,IAAMkqB,GAAkBoC,uBACzH,CAEQC,qBACJvrB,KAAKopB,aAAajd,OAAOnM,KAAKgV,KAAKhW,OAAQgB,KAAKopB,aAAapqB,OAASgB,KAAKgV,KAAKhW,OACpF,CAEQqqB,qBACArpB,KAAKgV,KAAKhW,OAASgB,KAAKopB,aAAapqB,OACrCgB,KAAKqrB,qBACErrB,KAAKgV,KAAKhW,OAASgB,KAAKopB,aAAapqB,QAC5CgB,KAAKurB,oBAEb,G,OAzQSrC,GAAiB,sBACmB,IAACrpB,EAAAA,EAAAA,GADrCqpB,GAAiB,sBAGoB,CAAC,KAAM,QAAKrpB,EAAAA,EAAAA,GAHjDqpB,GAAiB,qBAKU,CAAEtH,MAAO,CAAC,EAAG,EAAG,KClBxD,MAAM4J,GACF9rB,YAAoB+rB,EAAkBC,IAAsB7rB,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,oBAAxC,KAAA4rB,GAAAA,EAAkB,KAAAC,KAAAA,CAA0B,CAEhEC,QAAiCF,KAAeC,GAC5C,IACI,OAAO1rB,KAAKyrB,MAAMzrB,KAAK0rB,KAC3B,CAAE,MAAO3rB,GACL,OAAO0rB,KAAMC,EACjB,CACJ,CAEAE,WAAcvtB,GACV,IACI,OAAO2B,KAAKyrB,MAAMzrB,KAAK0rB,KAC3B,CAAE,MAAO3rB,GACL,OAAO1B,CACX,CACJ,EAGE,MAAOwtB,GACTztB,WAA+BqtB,KAAUC,GACrC,OAAO,IAAIF,GAAWC,EAAIC,EAC9B,EAKJ,MAAMI,GACFpsB,YAAoB+rB,EAAkBC,IAAsB7rB,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,oBAAxC,KAAA4rB,GAAAA,EAAkB,KAAAC,KAAAA,CAA0B,CAEhEhf,cAA4C+e,KAAeC,GACvD,IACI,aAAa1rB,KAAKyrB,MAAMzrB,KAAK0rB,KACjC,CAAE,MAAO3rB,GACL,aAAa0rB,KAAMC,EACvB,CACJ,CAEAhf,iBAAoBrO,GAChB,IACI,aAAa2B,KAAKyrB,MAAMzrB,KAAK0rB,KACjC,CAAE,MAAO3rB,GACL,aAAa1B,CACjB,CACJ,EAGE,MAAO0tB,GACT3tB,WAAoCqtB,KAAUC,GAC1C,OAAO,IAAII,GAAgBL,EAAIC,EACnC,ECnCE,MAAO1nB,GACTtE,YACqBssB,EACDC,EACAC,EACAC,EACAne,IAAgBnO,EAAAA,EAAAA,GAAA,gCAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,qBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,qBAJf,KAAAmsB,gBAAAA,EACD,KAAAC,QAAAA,EACA,KAAAC,KAAAA,EACA,KAAAC,WAAAA,EACA,KAAAne,MAAAA,CAAoB,CAExCG,SAASgd,GACL,GAAsB,IAAlBA,EAAOnsB,OACP,MAAM,IAAIC,MAAM,gCAGpB,MAAMmtB,EAAajB,EAAOtH,WAAW,GAC/BwI,EAAWD,EAAapsB,KAAKgsB,gBAEnC,GAAIK,EAAW,GAAKA,GAAYrsB,KAAKmsB,WACjC,MAAM,IAAIltB,MAAM,yDAGpB,MAAMqtB,EAASD,EAAWrsB,KAAKisB,QACzBM,EAAM/tB,KAAKguB,MAAMH,EAAWrsB,KAAKisB,SAEjCQ,EAAa,EAAIzsB,KAAKisB,QACtBS,EAAc,EAAI1sB,KAAKksB,KAEvBvU,EAAgB,CAClBlZ,EAAGguB,EAAaH,EAChB5tB,EAAGguB,EAAcH,GAGrB,MAAO,CACHje,EAAGqJ,EACHpJ,EAAG,CAAE9P,EAAGkZ,EAAQlZ,EAAIguB,EAAY/tB,EAAGiZ,EAAQjZ,EAAIguB,GAEvD,EAGJ,MAAMC,GAAoBjtB,eAAAG,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uBAItBgT,MAAM/G,GACF9L,KAAK8L,QAAUA,EAEf,MAAM8gB,EAAY9gB,EAAQ+gB,WAAWC,MAAMjJ,WAAW,GAChDkJ,EAAUjhB,EAAQ+gB,WAAWG,IAAInJ,WAAW,GAElD,GAAI+I,EAAYG,EACZ,MAAM,IAAI9tB,MAAM,uEAGpB,MAAMguB,EAAaF,EAAUH,EAAY,EACnCM,EAAc1uB,KAAK+O,KAAK/O,KAAKc,KAAK2tB,IAClCE,EAAW3uB,KAAK+O,KAAK0f,EAAaC,GAClCE,EAAgBptB,KAAKqtB,gBAErBznB,EAAS5F,KAAK8O,YAAYoe,EAAcE,EAAeD,EAAWC,GAGxE,OAFAptB,KAAKstB,qBAAqBL,EAAYC,GAE/B,IAAIlpB,GACP4oB,EACAM,EACAC,EACAF,EACAjtB,KAAKiP,QAAQE,aAAa,EAAG,EAAGvJ,EAAOC,MAAOD,EAAOE,QAE7D,CAEQgJ,YAAYjJ,EAAeC,GAC/B,MAAMF,EAASwJ,SAASC,cAAc,UAEtCzJ,EAAOC,MAAQA,EACfD,EAAOE,OAASA,EAEhB,MAAMmJ,EAAUrJ,EAAO0J,WAAW,OAASzB,GAAQ,yBAMnD,OALAoB,EAAQse,KAAO,GAAGvtB,KAAK8L,QAAQ0hB,KAAKC,UAAUztB,KAAK8L,QAAQ0hB,KAAKE,OAChEze,EAAQ0e,UAAY,OAEpB3tB,KAAKiP,QAAUA,EAERrJ,CACX,CAEQ0nB,qBAAqBL,EAAoBC,GAC7C,IAAK,IAAIhuB,EAAI,EAAGA,EAAI+tB,IAAc/tB,EAAG,CACjC,MAAM0uB,EAAM1uB,EAAIguB,EACVX,EAAM/tB,KAAKguB,MAAMttB,EAAIguB,GAErBE,EAAgBptB,KAAKqtB,gBACrBQ,EAAoBT,EAAgB,EACpCU,EAAmB,CAAErvB,EAAGmvB,EAAMR,EAAgBS,EAAmBnvB,EAAG6tB,EAAMa,EAAgBS,GAC1F1C,EAAS4C,OAAOC,aAAahuB,KAAK8L,QAAQ+gB,WAAWC,MAAMjJ,WAAW,GAAK3kB,GAE3E+uB,EAAejuB,KAAKkuB,mBAAmBJ,EAAY3C,GAEzDnrB,KAAKiP,QAAQkf,SAAShD,EAAQ8C,EAAaxvB,EAAGwvB,EAAavvB,EAC/D,CACJ,CAEQ2uB,gBACJ,OAAgD,GAAzC7uB,KAAK+O,KAAKvN,KAAK8L,QAAQ0hB,KAAKC,KAAO,GAC9C,CAEQS,mBAAmBE,EAAWjD,GAClC,MAAMkD,EAAUruB,KAAKiP,QAAQqf,YAAYnD,GAEnCrlB,EAASuoB,EAAQE,wBAA0BF,EAAQG,yBAEzD,MAAO,CACH/vB,EAAG2vB,EAAI3vB,EAAI4vB,EAAQxoB,MAAQ,EAC3BnH,EAAG0vB,EAAI1vB,EAAI2vB,EAAQG,yBAA2B1oB,EAAS,EAE/D,EAGE,MAAO2oB,GACTrwB,aAAa0N,GACT,OAAO,IAAI6gB,IAAuB9Z,MAAM/G,EAC5C,E,mfCnGE,MAAO4iB,GACThvB,YACYivB,EACQrM,IAAkBziB,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,0BAD1B,KAAA8uB,QAAAA,EACQ,KAAArM,WAAAA,CAAsB,CAE1CsM,OAAOzD,GACH,GAAsB,IAAlBA,EAAOnsB,OACP,MAAM,IAAIC,MAAM,gCAGpB,MAAM4vB,EAAY7uB,KAAK2uB,QAAQ5a,IAAIoX,GAEnC,QAAkBpkB,IAAd8nB,EACA,MAAM,IAAI5vB,MAAM,yBAAyBksB,MAG7C,OAAO0D,CACX,EAGJ,IACMC,GADN,MAOIpvB,YAAsDqvB,IAAoBlvB,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,WAF5D,IAAI6Y,KAEoC,KAAAqW,UAAAA,CAAwB,CAE9Elc,MAAM/G,GACF9L,KAAK8L,QAAUA,EAEf,MAAM8gB,EAAY9gB,EAAQ+gB,WAAWC,MAAMjJ,WAAW,GAChDkJ,EAAUjhB,EAAQ+gB,WAAWG,IAAInJ,WAAW,GAElD,GAAI+I,EAAYG,EACZ,MAAM,IAAI9tB,MAAM,uEAIpB,MAAM4jB,EAAa7iB,KAAKqtB,gBAKxB,OAJArtB,KAAK8O,YAAY+T,EAAYA,GAE7B7iB,KAAKgvB,gBAAgBjC,EAAUH,EAAY,GAEpC,IAAI8B,GAAoB1uB,KAAKivB,IAAKnjB,EAAQ0hB,KAAKC,KAC1D,CAEQ3e,YAAYjJ,EAAeC,GAC/B,MAAMF,EAASwJ,SAASC,cAAc,UAEtCzJ,EAAOC,MAAQA,EACfD,EAAOE,OAASA,EAEhB,MAAMmJ,EAAUrJ,EAAO0J,WAAW,OAASzB,GAAQ,yBACnDoB,EAAQse,KAAO,GAAGvtB,KAAK8L,QAAQ0hB,KAAKC,UAAUztB,KAAK8L,QAAQ0hB,KAAKE,OAChEze,EAAQ0e,UAAY,OAEpB3tB,KAAKiP,QAAUA,CACnB,CAEQoe,gBACJ,OAAgD,GAAzC7uB,KAAK+O,KAAKvN,KAAK8L,QAAQ0hB,KAAKC,KAAO,GAC9C,CAEQuB,gBAAgB/B,GACpB,IAAK,IAAI/tB,EAAI,EAAGA,EAAI+tB,IAAc/tB,EAAG,CACjC,MAAMisB,EAAS4C,OAAOC,aAAahuB,KAAK8L,QAAQ+gB,WAAWC,MAAMjJ,WAAW,GAAK3kB,GAC3EgwB,EAAUlvB,KAAK+uB,UAAU5gB,SAASgd,GAClCkD,EAAUruB,KAAKiP,QAAQqf,YAAYnD,GAEnCtlB,EAAQwoB,EAAQxoB,MAChBspB,EAAcnvB,KAAK8L,QAAQ0hB,KAAKC,KAAO,IACvC3nB,EAASuoB,EAAQE,wBAA0BF,EAAQG,yBAA2BW,EAE9E3gB,EAAKxO,KAAKovB,mBACZ,CAAE5gB,GAAI0gB,EAASrM,WAAY7iB,KAAKqtB,iBAChC,CAAExnB,QAAOC,WAEPupB,EAAiB,CACnB5wB,EAAG,EACHC,EAAG2vB,EAAQiB,uBAAyBjB,EAAQG,0BAGhDxuB,KAAKivB,IAAIzT,IAAI2P,EAAQ,CAAE3c,KAAI3I,QAAOC,SAAQupB,kBAC9C,CACJ,CAEQD,mBAAmBG,EAA2BC,GAClD,MAAMC,EAAa,CACfhxB,GAAI8wB,EAAK1M,WAAa2M,EAAM3pB,OAAS,EACrCnH,GAAI6wB,EAAK1M,WAAa2M,EAAM1pB,QAAU,GAGpC4pB,EAAa,CAAEjxB,EAAGgxB,EAAKhxB,EAAI+wB,EAAM3pB,MAAOnH,EAAG+wB,EAAK/wB,EAAI8wB,EAAM1pB,QAE1D6pB,EAAUJ,EAAK/gB,GAAGD,EAAE9P,EAAI8wB,EAAK/gB,GAAGF,EAAE7P,EAClCmxB,EAAWL,EAAK/gB,GAAGD,EAAE7P,EAAI6wB,EAAK/gB,GAAGF,EAAE5P,EAEzC,MAAO,CACH4P,EAAG,CACC7P,EAAG8wB,EAAK/gB,GAAGF,EAAE7P,EAAIgxB,EAAKhxB,EAAI8wB,EAAK1M,WAAa8M,EAC5CjxB,EAAG6wB,EAAK/gB,GAAGF,EAAE5P,EAAI+wB,EAAK/wB,EAAI6wB,EAAK1M,WAAa+M,GAEhDrhB,EAAG,CACC9P,EAAG8wB,EAAK/gB,GAAGF,EAAE7P,EAAIixB,EAAKjxB,EAAI8wB,EAAK1M,WAAa8M,EAC5CjxB,EAAG6wB,EAAK/gB,GAAGF,EAAE5P,EAAIgxB,EAAKhxB,EAAI6wB,EAAK1M,WAAa+M,GAGxD,GC/IE,SAAUC,GAAkElX,EAAqBmX,GACnG,OAAQnX,EAASmX,GAAgBzpB,KAAKsS,EAC1C,CDqDMmW,GAA8BnrB,GAAA,EADnCC,EAAAA,EAAAA,KAOgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeG,YAAU,wBAA6B,oBAA7B,GAA6B,qBAATA,IAAAA,IAASmC,GAAAC,UANxE0oB,IA2FN1pB,EAAUiB,KAAKyoB,IAAgCxoB,SAASypB,iBAIxD3qB,EACKiB,KAA8CxC,EAAeO,4BAC7D2gB,WAAmDC,GAAQlZ,GAA8BkZ,EAAIC,UAAUlR,IAAI+a,IAAgCjc,MAAM/G,K,mBEnIjJkkB,G,6eAAL,SAAKA,GAAmBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,aAAI,EAAlD,CAAKA,KAAAA,GAAgB,KAcd,IAAMC,GAAeC,GAArB,cAA8BrT,GAWjCnd,YACkD6F,EACjBkB,EACoB0pB,EACUC,GAC3D,MAAM3Q,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASka,IAC9B/R,EAAsB,EAE5B5S,MAAM9F,EACF,CAAEqZ,SAAUyR,GAAUvR,OAAQwR,IAC9B,CAAC,CACGnW,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,EAAI6B,IAEhB,CAAExB,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,2CAAAA,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,uCAAAA,EAAAA,EAAAA,GAAA,oBAzClC,KAAGA,EAAAA,EAAAA,GAAA,cAElB,IAAI6Y,MAAgC7Y,EAAAA,EAAAA,GAAA,uCAMpB,KAAA4G,SAAAA,EACoB,KAAA0pB,YAAAA,EACU,KAAAC,2BAAAA,EAiC3DpwB,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAASka,IAAoBhwB,KAAK6f,oBAEhE7f,KAAKugB,wBAA0B,IAAK,cAAcvK,GAC9CtW,YAAoB8gB,GAChB,MAAMC,EAAkB,IACxBpV,MAAMoV,IAAiB5gB,EAAAA,EAAAA,GAAA,wBAFP,KAAA2gB,SAAAA,EAIhBA,EAASvD,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQwhB,EAASV,uBAAyBW,IAAmB,IAAM,IAC9G,CAEAxJ,KAAKC,GACD,MAAMuL,EAAa,IAAIrM,MAAMpW,KAAKwgB,SAASV,wBAAwBc,KAAK,GAExE5gB,KAAKwgB,SAAS9C,0BAA0B+E,EAAYvL,EAAQlX,KAAKwgB,SAASV,wBAE1EzU,MAAM4L,KAAKC,EACf,CAEAE,SAASsJ,GACL,MAAM6P,EAAa,IAAIna,MAAMpW,KAAKwgB,SAASV,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GAE9F,IAAK,IAAI1hB,EAAI,EAAGA,EAAIwhB,EAAa1hB,SAAUE,EAAG,CAC1C,MAAM0e,EAAS8C,EAAaxhB,GAE5B,IAAK,IAAI4hB,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASV,yBAA0BgB,EAC9EyP,EAAWrxB,EAAIc,KAAKwgB,SAASV,uBAAyBgB,GAAgB9gB,KAAKwgB,SAAS/I,WAAWmG,EAAS5d,KAAKwgB,SAASV,uBAAyBgB,EAEvJ,CAEA9gB,KAAKwgB,SAASvD,iBAAiBsT,GAE/B7P,EAAaxe,SAAQ,CAACsuB,EAAW5S,KAC7B,MAAMwE,EAAQpiB,KAAKwgB,SAASiQ,OAAO1c,IAAIyc,QAEzBzpB,IAAVqb,IACApiB,KAAKwgB,SAASiQ,OAAOC,OAAOF,GAC5BxwB,KAAKwgB,SAASiQ,OAAOjV,IAAIoC,EAAQwE,GACjCA,EAAMsH,cAAc8G,EAAW5S,GACnC,GAER,CAEA7G,SAASmK,GACL,MAAMyP,EAAqBva,MAAMC,KAC7B,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASV,yBAC3C,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAAS/I,WAAWzY,OAASgB,KAAKwgB,SAAS/I,WAAWvY,GAAK,IAElFc,KAAKwgB,SAASvD,iBAAiB0T,EACnC,GACD3wB,KACP,CAEI4wB,aACA,MAAO,IAAI,IAAIC,IAAI,IAAI7wB,KAAKywB,OAAOK,WAAWA,SAClD,CAEIzpB,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEAsB,OAAOva,EACHiO,EACAC,EACA0M,EACAtM,GACA,MAAMgN,EAAQ,IAAI8G,GACdpiB,EACAkO,EACA0M,EACA3M,EACA,CACIyB,SAAWxO,GAAiChI,KAAK+wB,cAAc/oB,GAC/DiP,KAAOgK,GAAgBjhB,KAAKgxB,UAAU/P,IAE1C7L,GAUJ,OARe,OAAXA,GACAA,EAAO7B,YAAY6O,GAGvBA,EAAMna,WAAWC,QAAQF,GAAiChI,KAAKuiB,iBAAiBva,KAEhFhI,KAAKuiB,iBAAiBH,GAEfA,CACX,CAEAlE,OACIle,KAAKuF,GAAGyc,YAAYhiB,KAAKuF,GAAG0c,WAAYjiB,KAAKmwB,aAE7C9kB,MAAM6S,MACV,CAEQ6S,cAAc/oB,GAElB,MAAM4V,EAAS5d,KAAKugB,wBAAwB/J,WAI5C,OAFAxW,KAAKywB,OAAOjV,IAAIoC,EAAQ5V,GAEjB4V,CACX,CAEQoT,UAAU/P,GACdjhB,KAAKywB,OAAOC,OAAOzP,GACnBjhB,KAAKugB,wBAAwBtJ,KAAKgK,EACtC,CAEQsB,iBAAiBva,GACrB,MAAMipB,EAAsBjxB,KAAKowB,2BAA2B,CAAEvD,WAAY,CAAEC,MAAO,IAAKE,IAAK,KAAOQ,KAAM,CAAEE,KAAM,SAAUD,KAAMzlB,EAAUsa,cAE5I,IAAIzc,EAAQ,EACZ,MAAMqrB,EAAQhB,GAAgBiB,YAAYnpB,EAAU2N,MAEpD,GAAqB,IAAjBub,EAAMlyB,OAEN,YADAgJ,EAAU6hB,oBAAoB,CAAEhkB,MAAO,EAAGC,OAAQ,IAItD,MAAMsrB,EAAgBlB,GAAgBmB,cAAcH,EAAMA,EAAMlyB,OAAS,GAAGgW,KAAMhN,EAAWipB,GAE7F,IAAI,EAAExyB,EAAC,EAAEC,GAAM,CACXD,EAAGuJ,EAAUM,iBAAiB7J,EAC9BC,EAAGsJ,EAAUM,iBAAiB5J,EAAI0yB,GAGtC,IAAK,IAAIlyB,EAAIgyB,EAAMlyB,OAAS,EAAGE,GAAK,IAAKA,EAAG,CACxC,MAAMsK,EAAO0nB,EAAMhyB,GAEnB,GAAyB,IAArBsK,EAAKwL,KAAKhW,OAAd,CAMA,IAAK,IAAIE,EAAI,EAAGA,EAAIsK,EAAKwL,KAAKhW,SAAUE,EAAG,CACvC,MAAMisB,EAAS3hB,EAAKwL,KAAK9V,GACnB+V,EAAQjN,EAAU4N,MAAMpM,EAAK8nB,SAAWpyB,GACxC0e,EAAS5V,EAAU8hB,QAAQtgB,EAAK8nB,SAAWpyB,GAEjD,GAAI0e,IAAWsL,GAAkBoB,mBAC7B,SAGJ,MAAMiH,EAAiBrB,GAAgBsB,YAAYrG,EAAQ8F,GAErDxZ,EAAaD,GAAiBa,cAChC,CAAE5Z,IAAGC,EAAGA,EAAI6yB,EAAelC,eAAe3wB,EAAIsJ,EAAUU,OACxD,CACI7C,MAAO0rB,EAAe1rB,MAAQmC,EAAUU,MACxC5C,OAAQyrB,EAAezrB,OAASkC,EAAUU,OAE9C,CACI,CAAC1I,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,cAC9C1N,EAAM2M,MACN,CACI7J,WAAY,CAACwZ,EAAe/iB,GAAGF,EAAE7P,EAAG8yB,EAAe/iB,GAAGD,EAAE7P,GACxDsZ,QAAS,CAACuZ,EAAe/iB,GAAGF,EAAE7P,EAAG8yB,EAAe/iB,GAAGF,EAAE5P,GACrDuZ,SAAU,CAACsZ,EAAe/iB,GAAGD,EAAE9P,EAAG8yB,EAAe/iB,GAAGF,EAAE5P,GACtDwZ,YAAa,CAACqZ,EAAe/iB,GAAGD,EAAE9P,EAAG8yB,EAAe/iB,GAAGD,EAAE7P,MAIrEsB,KAAK0d,0BAA0BjG,EAAYmG,EAAS5d,KAAK8f,wBAEzDrhB,GAAK8yB,EAAe1rB,MAAQmC,EAAUU,MAEtC7C,EAAQrH,KAAKD,IAAIsH,EAAOpH,EAAIuJ,EAAUM,iBAAiB7J,EAC3D,CAEAA,EAAIuJ,EAAUM,iBAAiB7J,EAC/BC,GAAKsJ,EAAUsa,WAAata,EAAUU,MAAQ0oB,CAtC9C,MAHI3yB,EAAIuJ,EAAUM,iBAAiB7J,EAC/BC,GAAKsJ,EAAUsa,WAAata,EAAUU,KAyC9C,CAEAV,EAAU6hB,oBAAoB,CAAEhkB,QAAOC,OAAQpH,EAAIsJ,EAAUM,iBAAiB5J,GAClF,CAEQN,qBAAqBoL,EAAcxB,EAA8BipB,GACrE,GAAoB,IAAhBznB,EAAKxK,OACL,OAAO,EAGX,MAAMyyB,EAAOA,CAAC9nB,EAAWC,IAAcsmB,GAAgBsB,YAAY7nB,EAAGsnB,GAAqB5B,eAAe3wB,EAAIwxB,GAAgBsB,YAAY5nB,EAAGqnB,GAAqB5B,eAAe3wB,EAC3KgzB,EAA0B/c,GAAYgd,IAAI,IAAInoB,GAAOioB,GAE3D,OAAOvB,GAAgBsB,YAAYE,EAAyBT,GAAqB5B,eAAe3wB,EAAIsJ,EAAUU,KAClH,CAEQtK,mBAAmB+sB,EAAgB8F,GACvC,OAAOpF,GACF+F,IAAI/B,GAASoB,EAAqB,UAAW9F,GAC7CQ,QAAQkE,GAASoB,EAAqB,UAAW,IAC1D,CAEQ7yB,mBAAmByzB,GACvB,MAAMX,EAAuB,GAE7B,GAAmB,IAAfW,EAAI7yB,OACJ,MAAO,GAGX,IAAI8yB,EAAY,EAChB,IAAK,IAAI5yB,EAAI,EAAGA,EAAI2yB,EAAI7yB,SAAUE,EAAG,CACjC,MAAMisB,EAAS0G,EAAI3yB,GAEJ,OAAXisB,IACA+F,EAAM7oB,KAAK,CAAE2M,KAAM6c,EAAI9N,MAAM+N,EAAW5yB,GAAIoyB,SAAUQ,IACtDA,EAAY5yB,EAAI,EAExB,CAMA,OAJI4yB,IAAcD,EAAI7yB,QAClBkyB,EAAM7oB,KAAK,CAAE2M,KAAM6c,EAAI9N,MAAM+N,EAAWD,EAAI7yB,QAASsyB,SAAUQ,IAG5DZ,CACX,GAxQSjB,GAAeC,GAAAvsB,GAAA,EAD3BC,EAAAA,EAAAA,KAaQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeK,mBACtB8B,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeO,6BAA2B,wBAHsB,oBAGtB,GAHsB,qBAAtB8B,wBAAAA,wBAAsBC,GAAAC,OACtB,oBADsB6E,GACtB,qBAAX3F,GAAAA,GAAW2F,GAAA7E,OACwB,oBADxB6c,GACwB,qBAAZE,cAAAA,cAAYF,GAAA7c,OACuC,oBADvC8c,GACuC,qBAA1B9e,EAAAA,4BAAAA,EAAAA,4BAA0B8e,GAAA9c,UAf5G6pB,IA2Qb7qB,EAAUiB,KAAK4pB,IAAiB3pB,SAASC,mBAAmBwrB,sBAC5D3sB,EAAUiB,KAAK4pB,IAAiB3pB,SAASC,mBAAmByrB,gBAAgBttB,EAA0BC,aACtGS,EAAUiB,KAAK4pB,IAAiB3pB,SAASwe,mBAAmBkN,gBAAgBttB,EAA0BE,QChShG,MAAOqtB,GAiBTvyB,YACYoH,EACA2B,EACAsM,EACAE,EACAid,EACA9M,EACR7D,EACQnM,EAA8C,OAAIvV,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,kBAtBzC,IAAI+L,KAA8C/L,EAAAA,EAAAA,GAAA,aAEvD,IAACA,EAAAA,EAAAA,GAAA,kBAEG,IAAKA,EAAAA,EAAAA,GAAA,iBAEN,IAAKA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,sBAM0B,MAGtC,KAAAiH,SAAAA,EACA,KAAA2B,UAAAA,EACA,KAAAsM,OAAAA,EACA,KAAAE,MAAAA,EACA,KAAAid,QAAAA,EACA,KAAA9M,cAAAA,EAEA,KAAAhQ,OAAAA,EAERpV,KAAK2mB,OAASpF,EAAW4Q,iBACrBnyB,KAAK8G,SACL9G,KAAKyI,UACLzI,KAAK+U,OACL/U,KAAKiV,MACL,CAAE2M,MAAO,CAAC,EAAG,EAAG,GAAIhP,KAAM9C,GAAOmB,QAChC1E,GAAyBvM,KAAKoyB,aAAa7lB,IAC5CvM,KAAKoV,QAET,MAAMid,EAAc,KACpBryB,KAAKoiB,MAAQb,EAAWC,YACpBxhB,KAAKoH,SACL2N,EAASsd,EACTryB,KAAKkyB,QAAQld,KACbhV,KAAKkyB,QAAQxQ,WACb1hB,KAAKoV,QACTpV,KAAKoiB,MAAMT,WAAW,EAAG3hB,KAAKoiB,MAAMzM,KAAK3W,OAAQ,CAAE4iB,MAAO5hB,KAAKkyB,QAAQtQ,QAEvE5hB,KAAKoiB,MAAMhb,SAAWpH,KAAKsyB,gBAE3BtyB,KAAKqV,eAAiBD,GAAQnN,WAAWC,QAAO,IAAMlI,KAAKsT,WAAWhH,OAAOtM,SAAU,IAC3F,CAEIiI,iBACA,OAAOjI,KAAKsT,UAChB,CAEIlM,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAK2mB,OAAOvf,SAAWpH,KAAKoH,SAC5BpH,KAAKoiB,MAAMhb,SAAWpH,KAAKsyB,gBAE3BtyB,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIsI,uBACA,GAAItI,KAAKoV,OAAQ,CACb,MAAMI,EAAiB,CAACxV,KAAKoV,OAAO9M,iBAAiB7J,EAAGuB,KAAKoV,OAAO9M,iBAAiB5J,GAC/E6J,EAAmB9H,EAAAA,GAASA,EAAAA,KAAe+U,EAAgB,CAACxV,KAAKoH,SAAS3I,EAAIuB,KAAK0I,MAAO1I,KAAKoH,SAAS1I,EAAIsB,KAAK0I,QAEvH,MAAO,CAAEjK,EAAG8J,EAAiB,GAAI7J,EAAG6J,EAAiB,GACzD,CACI,OAAOvI,KAAKoH,QAEpB,CAEIoB,gBACA,MAAO,CAAE3C,MAAO7F,KAAKyI,UAAU5C,MAAQ7F,KAAK0I,MAAO5C,OAAQ9F,KAAKyI,UAAU3C,OAAS9F,KAAK0I,MAC5F,CAEIF,cAAUC,GACVzI,KAAKyI,UAAYA,EAEjBzI,KAAK2mB,OAAOne,UAAYC,EACxBzI,KAAKoiB,MAAMhb,SAAWpH,KAAKsyB,gBAE3BtyB,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIyV,aACA,OAAOzV,KAAK+U,MAChB,CAEIU,WAAOV,GACP/U,KAAK+U,OAASA,EAEd/U,KAAK2mB,OAAOlR,OAASV,EAErB,MAAMsd,EAAc,KACpBryB,KAAKoiB,MAAM3M,OAASV,EAASsd,EAE7BryB,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIuyB,cACA,OAAOvyB,KAAKkyB,OAChB,CAEIK,YAAQtd,GACRjV,KAAKkyB,QAAU,IAAKjd,GAEpBjV,KAAKoiB,MAAMzM,KAAOV,EAAMD,KACxBhV,KAAKoiB,MAAME,WAAarN,EAAMyM,WAC9B1hB,KAAKoiB,MAAMT,WAAW,EAAG3hB,KAAKoiB,MAAMzM,KAAK3W,OAAQ,CAAE4iB,MAAO3M,EAAM2M,QAEhEhX,gBAAe,IAAM5K,KAAKoiB,MAAMhb,SAAWpH,KAAKsyB,kBAEhDtyB,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI4V,YACA,OAAO5V,KAAKiV,KAChB,CAEIW,UAAMX,GACNjV,KAAKiV,MAAQ,IAAKA,GAElBjV,KAAK2mB,OAAO/Q,MAAQ,IAAKX,GAEzBjV,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0I,YACA,OAAuB,OAAhB1I,KAAKoV,OAAkBpV,KAAK+I,MAAQ/I,KAAK+I,MAAQ/I,KAAKoV,OAAO1M,KACxE,CAEIA,UAAMK,GACN/I,KAAK+I,MAAQA,EAEb/I,KAAK2mB,OAAOje,MAAQK,EACpB/I,KAAKoiB,MAAM1Z,MAAQK,EAEnB/I,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIqlB,gBACA,OAAOrlB,KAAKslB,SAChB,CAEIC,cACA,OAAOvlB,KAAKwlB,QAChB,CAEID,YAAQlnB,GACJA,IAAU2B,KAAKwlB,WAInBxlB,KAAKwlB,SAAWnnB,EAChB2B,KAAK2mB,OAAOpB,QAAUlnB,EAEtB2B,KAAKsT,WAAWhH,OAAOtM,MAC3B,CAEYsyB,sBACR,MAAO,CACH7zB,EAAGuB,KAAKoH,SAAS3I,GAAKuB,KAAKyI,UAAU5C,MAAQ7F,KAAKoiB,MAAM5Z,UAAU3C,MAAQ7F,KAAKoiB,MAAM1Z,OAAS,EAC9FhK,EAAGsB,KAAKoH,SAAS1I,GAAKsB,KAAKyI,UAAU3C,OAAS9F,KAAKoiB,MAAM5Z,UAAU1C,OAAS9F,KAAKoiB,MAAM1Z,OAAS,EAExG,CAEQ0pB,aAAaI,GACjBxyB,KAAKolB,cAAcplB,KACvB,CAEAyyB,kBAAkBjJ,EAAeC,EAAaxU,GAC1CjV,KAAKoiB,MAAMT,WAAW6H,EAAOC,EAAKxU,EACtC,CAEA0Q,QACI3lB,KAAK2mB,OAAOhB,OAChB,CAEAvR,UACIpU,KAAKoiB,MAAMhO,UACXpU,KAAK2mB,OAAOvS,UAEZpU,KAAKoV,QAAQxB,YAAY5T,MAEG,OAAxBA,KAAKqV,gBACLrV,KAAKqV,gBAEb,G,OAlMS4c,GAAsB,oBACkB,CAAC,mBAAqB,kBAAoB,mBCEzF,MAAOS,GA0BThzB,YACYoH,EACA2B,EACAsM,EACRC,EACA0M,EACQvJ,EACDjD,EACCyd,EACApR,EACApM,EACAC,IAA2CvV,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,gBApCtC,IAAIA,EAAAA,EAAAA,GAAA,aAEL,IAACA,EAAAA,EAAAA,GAAA,cAEA,IAACA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,sBAI8B,OAAIA,EAAAA,EAAAA,GAAA,kBAE/B,IAAI+L,KAA4C/L,EAAAA,EAAAA,GAAA,6BAEjB,CAAEgG,MAAO,GAAIC,OAAQ,MAAIjG,EAAAA,EAAAA,GAAA,cAE5D,IAACA,EAAAA,EAAAA,GAAA,yBAEkC,CAChD+iB,UAAW,CAAC,kBAAoB,kBAAoB,mBACpDqG,aAAc,CAAC,kBAAoB,kBAAoB,sBAC1DppB,EAAAA,EAAAA,GAAA,6BAE6C,CAAC,mBAAqB,mBAAqB,qBAAmBA,EAAAA,EAAAA,GAAA,sBAE1D,MAGtC,KAAAiH,SAAAA,EACA,KAAA2B,UAAAA,EACA,KAAAsM,OAAAA,EAGA,KAAAoD,YAAAA,EACD,KAAAjD,OAAAA,EACC,KAAAyd,cAAAA,EACA,KAAApR,WAAAA,EACA,KAAApM,QAAAA,EACA,KAAAC,OAAAA,EAERpV,KAAKoiB,MAAQpiB,KAAK2yB,cAActR,OAC5B,CACI5iB,EAAGqI,EAASrI,EAAIuB,KAAKgkB,YACrBtlB,EAAGoI,EAASpI,GAEhBqW,EACAC,EACA0M,EACAtM,GAEJpV,KAAKqV,eAAiBD,GAAQnN,WAAWC,QAAO,IAAMlI,KAAKsT,WAAWhH,OAAOtM,SAAU,KAEvFA,KAAK4yB,sCACT,CAEIxrB,eACA,OAAOpH,KAAK8G,QAChB,CAEIM,aAASN,GACT9G,KAAK8G,SAAWA,EAEhB9G,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIwI,gBACA,MAAO,CACH3C,MAAO7F,KAAKyI,UAAU5C,MAAQ7F,KAAK0I,MACnC5C,OAAQ9F,KAAKyI,UAAU3C,OAAS9F,KAAK0I,MAE7C,CAEIF,cAAUC,GACVzI,KAAKyI,UAAYA,EAEjBzI,KAAKsT,WAAWhH,OAAOtM,MACvBA,KAAK4yB,sCACT,CAEItqB,uBACA,GAAItI,KAAKoV,OAAQ,CACb,MAAMI,EAAiB,CAACxV,KAAKoV,OAAO9M,iBAAiB7J,EAAGuB,KAAKoV,OAAO9M,iBAAiB5J,GAC/E6J,EAAmB9H,EAAAA,GAASA,EAAAA,KAAe+U,EAAgB,CAACxV,KAAKoH,SAAS3I,EAAIuB,KAAK0I,MAAO1I,KAAKoH,SAAS1I,EAAIsB,KAAK0I,QAEvH,MAAO,CAAEjK,EAAG8J,EAAiB,GAAI7J,EAAG6J,EAAiB,GACzD,CACI,OAAOvI,KAAKoH,QAEpB,CAEIuO,WACA,OAAO3V,KAAKoiB,MAAMzM,IACtB,CAEIA,SAAKX,GACLhV,KAAKoiB,MAAMzM,KAAOX,EAElBhV,KAAK6yB,OAAS,EACd7yB,KAAKoiB,MAAMhb,SAAW,CAClB3I,EAAGuB,KAAK8G,SAASrI,EAAIuB,KAAKgkB,YAC1BtlB,EAAGsB,KAAK8G,SAASpI,GAGrBsB,KAAKsT,WAAWhH,OAAOtM,MACvBA,KAAK4yB,sCACT,CAEInd,aACA,OAAOzV,KAAK+U,MAChB,CAEIU,WAAOV,GACP/U,KAAK+U,OAASA,EAEd/U,KAAKoiB,MAAM3M,OAASV,EAEpB/U,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIsiB,iBACA,OAAOtiB,KAAKoiB,MAAME,UACtB,CAEIA,eAAWZ,GACX1hB,KAAKoiB,MAAME,WAAaZ,EAExB1hB,KAAKsT,WAAWhH,OAAOtM,MACvBA,KAAK4yB,sCACT,CAEI5O,kBACA,OAAOhkB,KAAKmY,YAAcnY,KAAK0I,KACnC,CAEIsb,gBAAYne,GACZ7F,KAAKmY,YAActS,EAEnB7F,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIkkB,cACA,OAAOlkB,KAAKmkB,OAChB,CAEID,YAAQ7lB,GACR2B,KAAKmkB,QAAU9lB,EAEf2B,KAAK4yB,uCAEL5yB,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEI0I,YACA,OAAuB,OAAhB1I,KAAKoV,OAAkBpV,KAAK+I,MAAQ/I,KAAK+I,MAAQ/I,KAAKoV,OAAO1M,KACxE,CAEIA,UAAMK,GACN/I,KAAK+I,MAAQA,EAEO,OAAhB/I,KAAKoV,SACLpV,KAAKoiB,MAAM1Z,MAAQK,GAGvB/I,KAAK4yB,uCAEuB,OAAxB5yB,KAAK8yB,iBACL9yB,KAAK8yB,eAAeC,gBAAgBrqB,MAAQK,EAC5C/I,KAAK8yB,eAAeE,mBAAmBtqB,MAAQK,GAInD/I,KAAKsT,WAAWhH,OAAOtM,KAC3B,CAEIiI,iBACA,OAAOjI,KAAKsT,UAChB,CAEY2f,wBACR,OAAOjzB,KAAKoiB,MAAM5Z,UAAU1C,OAAS9F,KAAKwI,UAAU1C,MACxD,CAEA2e,cACI7Z,gBAAe,KACP5K,KAAKmkB,SAAWnkB,KAAKizB,oBACrBjzB,KAAK6yB,OAAS,EACd7yB,KAAKkzB,cAAclzB,KAAKmzB,WAC5B,GAER,CAEA/e,UACIpU,KAAKoV,QAAQxB,YAAY5T,MAEG,OAAxBA,KAAKqV,gBACLrV,KAAKqV,iBAGTrV,KAAKmV,SACT,CAEQyd,uCACJhoB,gBAAe,IAAM5K,KAAKozB,gCAC9B,CAEQA,+BACApzB,KAAKmkB,SAAWnkB,KAAKizB,mBACO,OAAxBjzB,KAAK8yB,iBACL9yB,KAAK8yB,eAAiB,CAClBC,gBAAiB/yB,KAAKqzB,wBACtBL,mBAAoBhzB,KAAKszB,4BAGT,OAAhBtzB,KAAKoV,SACLpV,KAAK8yB,eAAeE,mBAAmBtqB,MAAQ1I,KAAK0I,MACpD1I,KAAK8yB,eAAeC,gBAAgBrqB,MAAQ1I,KAAK0I,OAGrD1I,KAAKkzB,cAAc,IAGvBlzB,KAAK8yB,eAAeE,mBAAmB5rB,SAAW,CAC9C3I,EAAGuB,KAAKuzB,cACR70B,EAAGsB,KAAKwzB,qBAGZxzB,KAAK8yB,eAAeC,gBAAgB3rB,SAAW,CAC3C3I,EAAGuB,KAAKuzB,cACR70B,EAAGsB,KAAKyzB,mBAGgB,OAAxBzzB,KAAK8yB,iBACL9yB,KAAK8yB,eAAeC,gBAAgB3e,UACpCpU,KAAK8yB,eAAeE,mBAAmB5e,UACvCpU,KAAK8yB,eAAiB,KAGlC,CAEYS,oBACR,OAAOvzB,KAAKoH,SAAS3I,EAAIuB,KAAKyI,UAAU5C,MAAQ7F,KAAKmY,YAAcnY,KAAK0zB,sBAAsB7tB,MAAQ7F,KAAK6I,MAC/G,CAEY4qB,uBACR,OAAOzzB,KAAKoH,SAAS1I,EAAIsB,KAAKyI,UAAU3C,OAAS9F,KAAK0zB,sBAAsB5tB,OAAS9F,KAAKmY,YAAcnY,KAAK6I,MACjH,CAEY2qB,0BACR,OAAOxzB,KAAKoH,SAAS1I,EAAIsB,KAAKgkB,YAAchkB,KAAK6I,MACrD,CAEQwqB,wBACJ,OAAOrzB,KAAKuhB,WAAW4Q,iBACnB,CACI1zB,EAAGuB,KAAKuzB,cACR70B,EAAGsB,KAAKyzB,kBAEZzzB,KAAK0zB,sBACL,EACA1zB,KAAK2zB,kBACL,CAAE/R,MAAO5hB,KAAK4zB,sBAAuBhhB,KAAM9C,GAAOQ,UACjDujB,GAA6B7zB,KAAKkzB,eAAelzB,KAAKsiB,aACvDtiB,KAAKoV,OAEb,CAEQke,2BACJ,OAAOtzB,KAAKuhB,WAAW4Q,iBACnB,CACI1zB,EAAGuB,KAAKuzB,cACR70B,EAAGsB,KAAKwzB,qBAEZxzB,KAAK0zB,sBACL,EACA1zB,KAAK2zB,kBACL,CAAE/R,MAAO5hB,KAAK4zB,sBAAuBhhB,KAAM9C,GAAOS,YACjDsjB,GAA6B7zB,KAAKkzB,cAAclzB,KAAKsiB,aACtDtiB,KAAKoV,OAEb,CAEI+d,gBACA,OAAOnzB,KAAKoH,SAAS1I,EAAIsB,KAAKoiB,MAAM5Z,UAAU1C,OAAS9F,KAAKoiB,MAAM1Z,MAAQ1I,KAAKyI,UAAU3C,OAAS,EAAI9F,KAAKmY,WAC/G,CAEI2b,gBACA,OAAO9zB,KAAKoH,SAAS1I,CACzB,CAEQw0B,cAActV,GAClB5d,KAAK6yB,QAAUjV,EAEf5d,KAAK6yB,OAAS10B,EAAS41B,MAAM/zB,KAAK6yB,OAAQ7yB,KAAKmzB,UAAWnzB,KAAK8zB,WAE/D9zB,KAAKg0B,+BAELh0B,KAAKoiB,MAAMhb,SAAW,IAAKpH,KAAKoiB,MAAMhb,SAAU1I,EAAGsB,KAAK6yB,OAC5D,CAEQmB,+BACAh0B,KAAK6yB,SAAW7yB,KAAKmzB,UACrBnzB,KAAK8yB,eAAgBC,gBAAgBxN,SAAU,EACxCvlB,KAAK8yB,eAAgBC,gBAAgBxN,UAC5CvlB,KAAK8yB,eAAgBC,gBAAgBxN,SAAU,GAG/CvlB,KAAK6yB,SAAW7yB,KAAK8zB,UACrB9zB,KAAK8yB,eAAgBE,mBAAmBzN,SAAU,EAC3CvlB,KAAK8yB,eAAgBE,mBAAmBzN,UAC/CvlB,KAAK8yB,eAAgBE,mBAAmBzN,SAAU,EAE1D,EC7UJ,I,SC0BK0O,GAEAC,GD5BL,wLEAA,mLCAA,iICAA,wL,6eH0BA,SAAKD,GAA4BA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,EAA1C,CAAKA,KAAAA,GAAyB,KAE9B,SAAKC,GAA6BA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,CAAxC,CAAKA,KAAAA,GAA0B,KAE/B,MAAMC,WAAiCtX,GAKnCnd,YAAY6F,GACR,MAAMka,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASme,IAC9BhW,EAAsB,GAE5B5S,MAAM9F,EACF,CAAEqZ,SAAUwV,GAAiBtV,OAAQuV,IACrC,CAAC,CACGla,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,IAEZ,CAAEK,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,sCAE9DG,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAASme,IAA6Bj0B,KAAK6f,mBAC7E,CAEIxY,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEIC,iBACA,OAAOhgB,KAAKyX,UAChB,EAIG,IAAM6c,GAAN,cAAiCzX,GAepCnd,YACiC+G,EACiBlB,EAC4BotB,GAE1E,MAAMlT,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC2C,EAASU,EAAY3J,GAASoe,IAC9BjW,EAAsB,EAE5B5S,MAAM9F,EACF,CAAEqZ,SAAU2V,GAAoBzV,OAAQ0V,IACxC,CAAC,CACGra,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,SACAnB,OAAQ,IAEZ,CAAEK,sBAAqBK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,uCAAAA,EAAAA,EAAAA,GAAA,oBA7BlC,KAAGA,EAAAA,EAAAA,GAAA,mBAEJ,IAACA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,0BASC,KAAA4G,SAAAA,EAE6C,KAAAksB,cAAAA,EAkB1E3yB,KAAK6f,oBAAsB5B,EAC3Bje,KAAK8f,uBAAyBhK,GAASoe,IAA8Bl0B,KAAK6f,oBAE1E7f,KAAKy0B,eAAiB,IAAIN,GAAyBn0B,KAAKuF,IAExDvF,KAAKugB,wBAA0B,IAAK,cAAcvK,GAC9CtW,YAAoB8gB,GAChB,MAAMC,EAAkB,EACxBpV,MAAMoV,IAAiB5gB,EAAAA,EAAAA,GAAA,wBAFP,KAAA2gB,SAAAA,EAIhBA,EAASvD,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQwhB,EAASV,uBAAyBW,IAAmB,IAAM,KAC1GzgB,KAAKwgB,SAASiU,eAAexX,iBAAiB7G,MAAMC,KAAK,CAAErX,OAAQwhB,EAASiU,eAAe3U,uBAAyBW,IAAmB,IAAM,IACjJ,CAEAxJ,KAAKC,GACDlX,KAAKwgB,SAAS9C,0BACV,IAAItH,MAAMpW,KAAKwgB,SAASV,wBAAwBc,KAAK,GACrD1J,EAAQlX,KAAKwgB,SAASV,wBAE1B9f,KAAKwgB,SAASiU,eAAe/W,0BACzB,IAAItH,MAAMpW,KAAKwgB,SAASiU,eAAe3U,wBAAwBc,KAAK,GACpE1J,EAAQlX,KAAKwgB,SAASiU,eAAe3U,wBAEzCzU,MAAM4L,KAAKC,EACf,CAEAE,SAASsJ,GACL,MAAMgU,EAAmB,IAAIte,MAAMpW,KAAKwgB,SAASV,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GAC9F+T,EAAc,IAAIve,MAAMpW,KAAKwgB,SAASiU,eAAe3U,uBAAyBY,EAAa1hB,QAAQ4hB,KAAK,GAE9G,IAAK,IAAI1hB,EAAI,EAAGA,EAAIwhB,EAAa1hB,SAAUE,EAAG,CAC1C,MAAM0e,EAAS8C,EAAaxhB,GAE5B,IAAK,IAAI4hB,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASV,yBAA0BgB,EAC9E4T,EAAiBx1B,EAAIc,KAAKwgB,SAASV,uBAAyBgB,GAAgB9gB,KAAKwgB,SAAS/I,WAAWmG,EAAS5d,KAAKwgB,SAASV,uBAAyBgB,GAGzJ,IAAK,IAAIA,EAAe,EAAGA,EAAe9gB,KAAKwgB,SAASiU,eAAe3U,yBAA0BgB,EAC7F6T,EAAYz1B,EAAIc,KAAKwgB,SAASiU,eAAe3U,uBAAyBgB,GAAgB9gB,KAAKwgB,SAASiU,eAAezU,WAAWpC,EAAS5d,KAAKwgB,SAASiU,eAAe3U,uBAAyBgB,EAErM,CAEA9gB,KAAKwgB,SAASvD,iBAAiByX,GAC/B10B,KAAKwgB,SAASiU,eAAexX,iBAAiB0X,EAClD,CAEA5d,SAASmK,GACL,MAAMyP,EAAqBva,MAAMC,KAC7B,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASV,yBAC3C,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAAS/I,WAAWzY,OAASgB,KAAKwgB,SAAS/I,WAAWvY,GAAK,IAElFc,KAAKwgB,SAASvD,iBAAiB0T,GAG/B,MAAMiE,EAAsBxe,MAAMC,KAC9B,CAAErX,OAAQkiB,EAAmBlhB,KAAKwgB,SAASiU,eAAe3U,yBAC1D,CAACxJ,EAAGpX,IAAMA,EAAIc,KAAKwgB,SAASiU,eAAezU,WAAWhhB,OAASgB,KAAKwgB,SAASiU,eAAezU,WAAW9gB,GAAK,IAEhHc,KAAKwgB,SAASvD,iBAAiB2X,EACnC,GACD50B,KACP,CAEAqhB,OAAOva,EACH2B,EACAsM,EACAC,EACA0M,EACAvM,EACAC,EAA8C,MAE9C,MAAMkO,EAAW,IAAIoP,GACjB5rB,EACA2B,EACAsM,EACAC,EACA0M,EACA1hB,KAAKmY,YACLnY,KAAKugB,wBAAwB/J,WAC7BxW,KAAK2yB,cACL3yB,KAAKkiB,WACL/M,EACAC,GAWJ,OARe,OAAXA,GACAA,EAAO7B,YAAY+P,GAGvBA,EAASrb,WAAWC,QAAQF,GAAoChI,KAAKuiB,iBAAiBva,KAEtFhI,KAAKuiB,iBAAiBe,GAEfA,CACX,CAEApF,OACIle,KAAKuF,GAAGsvB,OAAO70B,KAAKuF,GAAGuvB,cAEvB90B,KAAKuF,GAAGwvB,YACJ/0B,KAAKuF,GAAGyvB,OACR,EACA,KAGJh1B,KAAKuF,GAAG0vB,UACJj1B,KAAKuF,GAAG2vB,KACRl1B,KAAKuF,GAAG4vB,QACRn1B,KAAKuF,GAAG4vB,SAGZ9pB,MAAM6S,OAENle,KAAKuF,GAAGwvB,YACJ/0B,KAAKuF,GAAG6vB,MACR,EACA,KAGJp1B,KAAKuF,GAAG0vB,UACJj1B,KAAKuF,GAAG2vB,KACRl1B,KAAKuF,GAAG2vB,KACRl1B,KAAKuF,GAAG2vB,MAGZl1B,KAAK2yB,cAAczU,OAEnBle,KAAKuF,GAAG8vB,MAAMr1B,KAAKuF,GAAG+vB,oBACtBt1B,KAAKuF,GAAGgwB,QAAQv1B,KAAKuF,GAAGuvB,cAExB90B,KAAKy0B,eAAevW,MACxB,CAGI7W,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,GACjD/f,KAAK2yB,cAActrB,eAAiB0Y,EACpC/f,KAAKy0B,eAAeptB,eAAiB0Y,CACzC,CAEImC,iBACA,OAAOliB,KAAKuhB,UAChB,CAEIW,eAAW1B,GACXxgB,KAAKuhB,WAAaf,CACtB,CAEAnF,UACIrb,KAAKy0B,eAAepZ,UAEpBhQ,MAAMgQ,SACV,CAEQkH,iBAAiBva,GACrBhI,KAAKw1B,wBAAwBxtB,GAC7BhI,KAAKy1B,uBAAuBztB,EAChC,CAEQwtB,wBAAwBxtB,GAC5B,IAAI0tB,EAEAA,EADA1tB,EAAUkc,QACF1M,GAAiBa,cACrB,CACI5Z,EAAGuJ,EAAUM,iBAAiB7J,EAAIuJ,EAAUgc,YAC5CtlB,EAAGsJ,EAAUM,iBAAiB5J,EAAIsJ,EAAUgc,aAEhD,CACIne,MAAOmC,EAAUQ,UAAU3C,MAAQ,EAAImC,EAAUgc,YACjDle,OAAQkC,EAAUQ,UAAU1C,OAAS,EAAIkC,EAAUgc,aAEvD,IAEI,IAAI5N,MAAMpW,KAAK8f,wBAAwBc,KAAK,GAGxD5gB,KAAK0d,0BAA0BgY,EAAO1tB,EAAUkN,OAASlV,KAAK8f,uBAClE,CAEQ2V,uBAAuBztB,GAC3B,IAAI0tB,EAGAA,EADA1tB,EAAUkc,QACF1M,GAAiBwR,UACrBhhB,EAAUM,iBACVN,EAAUQ,UACVR,EAAUgc,YACV,CACI,CAAChkB,KAAKyG,SAASkB,KAAOK,EAAUyN,OAASzV,KAAK2iB,gBAI9C,IAAIvM,MAAMpW,KAAKy0B,eAAe3U,wBAAwBc,KAAK,GAGvE5gB,KAAKy0B,eAAe/W,0BAA0BgY,EAAO1tB,EAAUkN,OAASlV,KAAKy0B,eAAe3U,uBAChG,GAxOSwU,GAAkB3wB,GAAA,EAD9BC,EAAAA,EAAAA,KAiBQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOgqB,KAAkBjqB,GAAA,GAAA2vB,EAAAA,EAAAA,GAAMjxB,EAA0BE,SAAO,wBAFf,oBAEe,GAFf,qBAAXU,GAAAA,GAAWa,GAAAC,OACsB,oBADtB6E,GACsB,qBAAtB/E,wBAAAA,wBAAsB+E,GAAA7E,OACgC,oBADhC6c,GACgC,qBAAfgN,IAAAA,IAAehN,GAAA7c,UAlBnGkuB,IA2OblvB,EAAUiB,KAAKiuB,IAAoBhuB,SAASwe,mBAI5C1f,EACKiB,KAAoDxC,EAAeU,2BACnEwgB,WAA4CC,GAAQzD,IACjD,MAAM5I,EAAWqM,EAAIC,UAAUlR,IAAIugB,IAGnC,OAFA3b,EAASuJ,WAAaX,EAEf5I,CAAQ,I,kgBIxOhB,IAAMuJ,GAAN,MAOHxiB,YAC0D6F,EAChBqwB,EACLC,EACAC,EACyBC,EACQC,IAAoEn2B,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,0CAAAA,EAAAA,EAAAA,GAAA,kDAAAA,EAAAA,EAAAA,GAAA,sBAZrF,OAAIA,EAAAA,EAAAA,GAAA,2BAEL,KAAEA,EAAAA,EAAAA,GAAA,2BAEQ,IAGJ,KAAA0F,GAAAA,EAChB,KAAAqwB,mBAAAA,EACL,KAAAC,cAAAA,EACA,KAAAC,eAAAA,EACyB,KAAAC,0BAAAA,EACQ,KAAAC,kCAAAA,EAClEh2B,KAAK61B,cAAc3T,WAAaliB,IACpC,CAEAmyB,iBAAiBrrB,EACb2B,EACAsM,EACAE,EACAkQ,EACAC,EACAhQ,EAA8C,MAC9C,OAAOpV,KAAK41B,mBAAmBvU,OAAOva,EAAU2B,EAAWsM,EAAQE,EAAOkQ,EAAWC,EAAehQ,EACxG,CAEA6gB,iBAAiBnvB,EACb2B,EACAsM,EACAE,EACAid,EACA9M,EACAhQ,EAA8C,MAC9C,OAAO,IAAI6c,GAAuBnrB,EAAU2B,EAAWsM,EAAQE,EAAOid,EAAS9M,EAAeplB,KAAMoV,EACxG,CAEAoM,YAAY1a,EACRiO,EACAC,EACA0M,EACAtM,EAA8C,MAC9C,OAAOpV,KAAK81B,eAAezU,OAAOva,EAAUiO,EAAQC,EAAM0M,EAAYtM,EAC1E,CAEA8gB,YAAYpvB,EACRiO,EACAnC,EACAoC,EACAC,EACAG,EAA8C,MAC9C,OAAOpV,KAAK61B,cAAcxU,OAAOva,EAAUiO,EAAQnC,EAAMoC,EAAMC,EAAOG,EAC1E,CAEAmO,eAAezc,EACX2B,EACAsM,EACAC,EACA0M,EACAtM,EAA8C,MAC9C,MAAMoL,EAAWxgB,KAAK+1B,0BAA0B/1B,MAQhD,OAN4B,OAAxBA,KAAKsH,iBACLkZ,EAASnZ,eAAiBrH,KAAKsH,gBAGnCtH,KAAKm2B,oBAAoB9tB,KAAKmY,GAEvBA,EAASa,OACZva,EACA2B,EACAsM,EACAC,EACA0M,GACA,IAAM1hB,KAAKo2B,4BAA4B5V,IACvCpL,EACR,CAEAihB,uBAAuBvvB,EACnB2B,EACAsM,EACAC,EACA0M,EACAtM,EAA8C,MAC9C,MAAMoL,EAAWxgB,KAAKg2B,kCAAkCh2B,MAE5B,OAAxBA,KAAKsH,iBACLkZ,EAASnZ,eAAiBrH,KAAKsH,gBAInC,MAAM0E,EAA2C,CAAEwU,YAE7C8V,EAAmB9V,EAASa,OAC9Bva,EACA2B,EACAsM,EACAC,EACA0M,GACA,IAAM1hB,KAAKu2B,oCAAoCvqB,IAC/CoJ,GAMJ,OAJApJ,EAAWsqB,iBAAmBA,EAE9Bt2B,KAAKw2B,oBAAoBnuB,KAAK2D,GAEvBsqB,CACX,CAEA3Q,MAAM5lB,GACF,MAAM02B,EAAcz2B,KAAK02B,YAAY32B,EAAEM,QAASN,EAAEO,UAC9CN,KAAK22B,aAAa52B,EAAEM,QAASN,EAAEO,UAC/BN,KAAK42B,YAAY72B,EAAEM,QAASN,EAAEO,SAElC,OAAOm2B,IAAgBz2B,KAAK62B,sBAAsB92B,EAAEM,QAASN,EAAEO,WAAY,EAC/E,CAEQq2B,aAAal4B,EAAWC,GAC5B,MAAMo4B,EAAc92B,KAAK41B,mBAAmB9N,YACvCmC,QAAOzD,GAAOld,GAAaytB,mBACxB,CAAEt4B,EAAG+nB,EAAIle,iBAAiB7J,EAAGC,EAAG8nB,EAAIle,iBAAiB5J,EAAGmH,MAAO2gB,EAAIhe,UAAU3C,MAAOC,OAAQ0gB,EAAIhe,UAAU1C,QAC1G,CAAErH,IAAGC,QAEb,OAA2B,IAAvBo4B,EAAY93B,SAIhB2V,GACKqiB,IAAIF,GAAa,CAACntB,EAAiBC,IAAoBD,EAAE8L,OAAS7L,EAAE6L,SACpEkQ,SAEE,EACX,CAEQiR,YAAYn4B,EAAWC,GAC3B,MAAMo4B,EAAc92B,KAAK81B,eAAelF,OACnC3G,QAAO7H,GAAS9Y,GAAaytB,mBAC1B,CAAEt4B,EAAG2jB,EAAM9Z,iBAAiB7J,EAAGC,EAAG0jB,EAAM9Z,iBAAiB5J,EAAGmH,MAAOuc,EAAM5Z,UAAU3C,MAAOC,OAAQsc,EAAM5Z,UAAU1C,QAClH,CAAErH,IAAGC,QAGb,OAA2B,IAAvBo4B,EAAY93B,MAKpB,CAEQ03B,YAAYj4B,EAAWC,GAC3B,MAAMo4B,EAAc92B,KAAK61B,cAAc1T,OAClC8H,QAAOjJ,GAAS1X,GAAaytB,mBAC1B,CAAEt4B,EAAGuiB,EAAM1Y,iBAAiB7J,EAAGC,EAAGsiB,EAAM1Y,iBAAiB5J,EAAGmH,MAAOmb,EAAMxY,UAAU3C,MAAOC,OAAQkb,EAAMxY,UAAU1C,QAClH,CAAErH,IAAGC,QAGb,OAA2B,IAAvBo4B,EAAY93B,SAIhB83B,EAAY,GAAG1iB,WAER,EACX,CAEQyiB,sBAAsBp4B,EAAWC,GACrC,MAAMo4B,EAAc92B,KAAKw2B,oBACpBvM,QAAOgN,GAAQA,EAAKX,iBAAiBpS,SAAW5a,GAAaytB,mBAC1D,CACIt4B,EAAGw4B,EAAKX,iBAAiBhuB,iBAAiB7J,EAC1CC,EAAGu4B,EAAKX,iBAAiBhuB,iBAAiB5J,EAC1CmH,MAAOoxB,EAAKX,iBAAiB9tB,UAAU3C,MACvCC,OAAQmxB,EAAKX,iBAAiB9tB,UAAU1C,QAE5C,CAAErH,IAAGC,QAGb,OAA2B,IAAvBo4B,EAAY93B,OACL,KAGJ2V,GACFqiB,IACGF,GACA,CAACntB,EAAiCC,IAAoCD,EAAE2sB,iBAAiB7gB,OAAS7L,EAAE0sB,iBAAiB7gB,SACxH6gB,gBACT,CAEQF,4BAA4B5V,GAChCxgB,KAAKm2B,oBAAoBhqB,OAAOnM,KAAKm2B,oBAAoB/pB,WAAU3N,GAAKA,IAAM+hB,IAAW,EAC7F,CAEQ+V,oCAAoCvqB,GACxChM,KAAKw2B,oBAAoBrqB,OAAOnM,KAAKw2B,oBAAoBpqB,WAAU3N,GAAKA,IAAMuN,IAAa,EAC/F,CAEAkS,OACIle,KAAK61B,cAAc3X,OACnBle,KAAK41B,mBAAmB1X,OACxBle,KAAK81B,eAAe5X,OACpBle,KAAKm2B,oBAAoBj0B,SAAQzD,GAAKA,EAAEyf,SACxCle,KAAKw2B,oBAAoBt0B,SAAQzD,GAAKA,EAAE+hB,SAAStC,QACrD,CAEI7W,mBAAeG,GACfxH,KAAKsH,eAAiBE,EAEtBxH,KAAK41B,mBAAmBvuB,eAAiBG,EACzCxH,KAAK81B,eAAezuB,eAAiBG,EACrCxH,KAAK61B,cAAcxuB,eAAiBG,EACpCxH,KAAKm2B,oBAAoBj0B,SAAQzD,GAAKA,EAAE4I,eAAiBG,IACzDxH,KAAKw2B,oBAAoBt0B,SAAQzD,GAAKA,EAAE+hB,SAASnZ,eAAiBG,GACtE,G,OAnNS0a,GAAUve,GAAA,EADtBC,EAAAA,EAAAA,KASQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOigB,KACPlgB,GAAA,GAAAC,EAAAA,EAAAA,GAAOga,KACPja,GAAA,GAAAC,EAAAA,EAAAA,GAAOgqB,KACPjqB,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeU,4BACtByB,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeY,oCAAkC,wBALuB,oBAKvB,GALuB,qBAAtByB,wBAAAA,wBAAsBC,GAAAC,OACF,oBADE6E,GACF,qBAApBib,IAAAA,IAAoBjb,GAAA7E,OACf,oBADe6c,GACf,qBAAfhD,IAAAA,IAAegD,GAAA7c,OACC,oBADD8c,GACC,qBAAf+M,IAAAA,IAAe/M,GAAA9c,OAC8C,oBAD9Cgd,GAC8C,qBAAzB7e,EAAAA,2BAAAA,EAAAA,2BAAyB6e,GAAAhd,OACwB,oBADxB8wB,GACwB,qBAAjCzyB,EAAAA,mCAAAA,EAAAA,mCAAiCyyB,GAAA9wB,UAbjI8b,IAsNb9c,EAAUiB,KAAK6b,IAAY5b,SAASC,mB,aChRxB4wB,G,6eAAZ,SAAYA,GAAcA,EAAAA,EAAA,4CAAmBA,EAAAA,EAAA,8CAAoBA,EAAAA,EAAA,2BAAW,EAA5E,CAAYA,KAAAA,GAAW,KAGhB,IAAMC,IAAaC,GAAnB,MAoCH33B,YACgC6hB,EACS+V,IAA2Bz3B,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,sBAxBN,OAAIA,EAAAA,EAAAA,GAAA,qCAAAA,EAAAA,EAAAA,GAAA,6BAGnC,IAAKA,EAAAA,EAAAA,GAAA,2BAC+B,OAAIA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,yBAIlC,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,uBAElC,IAAI+L,KAAmC/L,EAAAA,EAAAA,GAAA,gCAE9B,IAAI+L,KAA4C/L,EAAAA,EAAAA,GAAA,sCAC1C,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,uBAEzD,IAAKA,EAAAA,EAAAA,GAAA,yBACO,IAAI+L,KAAgD/L,EAAAA,EAAAA,GAAA,kBAErE,IAAKA,EAAAA,EAAAA,GAAA,yBAEC,GAGM,KAAA0hB,WAAAA,EACS,KAAA+V,OAAAA,EACrCt3B,KAAKyK,MAAQ,IAAIwI,GACb,CAAExU,EAAG,EAAGC,EAAG,IACX,CAAEyU,SAAUJ,GAAe2B,IAAKrB,WAAYP,GAAiB0B,SAEjE,MAAM3L,EAAS,GACT0uB,EAAmB,GAEzBv3B,KAAKw3B,cAAgBx3B,KAAKuhB,WAAW4Q,iBACjC,CAAE1zB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAO0xB,EAAkBzxB,OAAQyxB,GACnC,EACA,CAAE3U,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOuB,KAAMuQ,MAAO6V,GAAcG,yBAC1CpF,GAAWxyB,KAAK63B,kBAAkBvrB,UAClCtM,KAAKyK,OAGTzK,KAAK83B,YAAc93B,KAAKuhB,WAAW4Q,iBAC/B,CAAE1zB,EAAG84B,EAAmB1uB,EAAQnK,EAAG,GACnC,CAAEmH,MAAO0xB,EAAkBzxB,OAAQyxB,GACnC,EACA,CAAE3U,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOwB,UAAWsQ,MAAO6V,GAAcG,yBAC/CpF,GAAWxyB,KAAK+3B,gBAAgBzrB,OAAO6qB,GAAYa,oBACnDh4B,KAAKyK,OAGTzK,KAAKi4B,qBAAuBj4B,KAAKuhB,WAAW4Q,iBACxC,CAAE1zB,EAAG,EAAI84B,EAAmB,EAAI1uB,EAAQnK,EAAG,GAC3C,CAAEmH,MAAO0xB,EAAkBzxB,OAAQyxB,GACnC,EACA,CAAE3U,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAO6B,WAAYiQ,MAAO6V,GAAcS,4BAChD1F,GAAWxyB,KAAKm4B,8BAChBn4B,KAAKyK,OAGTzK,KAAKo4B,cAAgBp4B,KAAKuhB,WAAW4Q,iBACjC,CAAE1zB,EAAG,EAAI84B,EAAmB,EAAI1uB,EAAQnK,EAAG,GAC3C,CAAEmH,MAAO0xB,EAAkBzxB,OAAQyxB,GACnC,EACA,CAAE3U,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOiC,QAAS6P,MAAO6V,GAAcY,0BAC7C9rB,GAAUvM,KAAKs4B,cAAc/rB,IAC7BvM,KAAKyK,OAGTzK,KAAKs3B,OAAO9sB,WAAaxK,KAAKyK,KAClC,CAEAlD,SACIvH,KAAKyK,MAAMlD,SACXvH,KAAKu4B,qBAAqBhxB,SAC1BvH,KAAKw4B,gBAAgBjxB,QACzB,CAEIkxB,gBACA,OAAOz4B,KAAK04B,SAChB,CAEID,cAAUE,GACV,GAAIA,IAAS34B,KAAK04B,UAAW,CACzB14B,KAAK83B,YAAYpiB,KAAO,CACpB9C,KAAM9C,GAAOwB,UACbsQ,MAAO+W,EAAOlB,GAAcmB,yBAA2BnB,GAAcG,wBAGzE,MAAM/uB,EAAS,GACTga,EAAa,GAEnB,GAAI8V,EAAM,CACN34B,KAAKw4B,eAAiB,IAAIvlB,GACtB,CACIxU,EAAGuB,KAAK83B,YAAYxvB,iBAAiB7J,EAAIuB,KAAKyK,MAAM/B,MACpDhK,EAAGsB,KAAKyK,MAAMrD,SAAS1I,EAAI,EAAImK,EAAS,EAAIga,GAEhD,CAAE1P,SAAUJ,GAAe2B,MAEM1U,KAAKuhB,WAAW4Q,iBACjD,CAAE1zB,EAAG,EAAGC,EAAGmK,EAASga,GACpB,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOyB,cAAeqQ,MAAO6V,GAAcmB,2BACnDpG,GAAWxyB,KAAK+3B,gBAAgBzrB,OAAO6qB,GAAY0B,qBACnD74B,KAAKw4B,gBAEmBx4B,KAAKuhB,WAAW4Q,iBACxC,CAAE1zB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOgC,KAAM8P,MAAO,CAAC,kBAAoB,kBAAoB,sBACrE4Q,GAAWxyB,KAAK+3B,gBAAgBzrB,OAAO6qB,GAAY2B,YACnD94B,KAAKw4B,eACb,MACIx4B,KAAKw4B,gBAAgBpkB,UACrBpU,KAAKw4B,eAAiB,KAG1Bx4B,KAAKw3B,cAAcjS,QAAUoT,EAC7B34B,KAAKo4B,cAAc7S,QAAUoT,CACjC,CAEA34B,KAAK04B,UAAYC,CACrB,CAEII,qBACA,OAAO/4B,KAAKg5B,cAChB,CAEIC,cACA,OAAOj5B,KAAK63B,iBAChB,CAEIqB,YACA,OAAOl5B,KAAK+3B,eAChB,CAEIoB,qBACA,OAAOn5B,KAAKo5B,wBAChB,CAEIC,2BACA,OAAOr5B,KAAKs5B,8BAChB,CAEIvnB,cACA,OAAO/R,KAAKu5B,iBAChB,CAEQpB,6BACAn4B,KAAKw5B,qBACLx5B,KAAKy5B,mCAELz5B,KAAK05B,iCAEb,CAEQA,kCACJ15B,KAAKw5B,sBAAuB,EAE5Bx5B,KAAKi4B,qBAAqBviB,KAAO,CAAE9C,KAAM9C,GAAO6B,WAAYiQ,MAAO,CAAC,kBAAoB,kBAAoB,oBAE5G,MAAM/Y,EAAS,GACTga,EAAa,GACb8W,GAAoB35B,KAAK45B,iBAAV,EACrB55B,KAAKu4B,oBAAsB,IAAItlB,GAC3B,CACIxU,EAAGuB,KAAKi4B,qBAAqB3vB,iBAAiB7J,EAAIuB,KAAKi4B,qBAAqBvvB,MAC5EhK,EAAGsB,KAAKyK,MAAMrD,SAAS1I,EAAIi7B,EAAe9wB,EAAS8wB,EAAe9W,GAEtE,CAAE1P,SAAUJ,GAAe2B,MAEM1U,KAAKuhB,WAAW4Q,iBACjD,CAAE1zB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAO8B,aAAcgQ,MAAO,CAAC,kBAAoB,kBAAoB,sBAC7E4Q,GAAWxyB,KAAK65B,8BAA8B,CAAC,IAC/C75B,KAAKu4B,qBAE6Bv4B,KAAKuhB,WAAW4Q,iBAClD,CAAE1zB,EAAG,EAAGC,EAAGmK,EAASga,GACpB,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOU,cAAeoR,MAAO,CAAC,kBAAoB,kBAAoB,sBAC9E4Q,GAAWxyB,KAAK65B,8BAA8B,CAAEC,UAAWxuB,GAAYhI,QACvEtD,KAAKu4B,qBAE2Bv4B,KAAKuhB,WAAW4Q,iBAChD,CAAE1zB,EAAG,EAAGC,EAAG,EAAImK,EAAS,EAAIga,GAC5B,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOa,YAAaiR,MAAO,CAAC,kBAAoB,kBAAoB,sBAC5E4Q,GAAWxyB,KAAK65B,8BAA8B,CAAEC,UAAWxuB,GAAYyuB,MACvE/5B,KAAKu4B,qBAE8Bv4B,KAAKuhB,WAAW4Q,iBACnD,CAAE1zB,EAAG,EAAGC,EAAG,EAAImK,EAAS,EAAIga,GAC5B,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOW,eAAgBmR,MAAO,CAAC,kBAAoB,kBAAoB,sBAC/E4Q,GAAWxyB,KAAK65B,8BAA8B,CAAEC,UAAWxuB,GAAYiJ,SACvEvU,KAAKu4B,qBAE6Bv4B,KAAKuhB,WAAW4Q,iBAClD,CAAE1zB,EAAG,EAAGC,EAAG,EAAImK,EAAS,EAAIga,GAC5B,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAOY,cAAekR,MAAO,CAAC,kBAAoB,kBAAoB,sBAC9E4Q,GAAWxyB,KAAK65B,8BAA8B,CAAEC,UAAWxuB,GAAY0uB,QACvEh6B,KAAKu4B,qBAET,GAAIv4B,KAAK45B,iBAAkB,CACY55B,KAAKuhB,WAAW4Q,iBAC/C,CAAE1zB,EAAG,EAAGC,EAAG,EAAImK,EAAS,EAAIga,GAC5B,CAAEhd,MAAOgd,EAAY/c,OAAQ+c,GAC7B,EACA,CAAED,UAAW6U,GAAcC,uBAAwBzO,aAAcwO,GAAcE,2BAC/E,CAAE/kB,KAAM9C,GAAO+B,OAAQ+P,MAAO,CAAC,kBAAoB,kBAAoB,sBACvE4Q,GAAWxyB,KAAKi6B,wCAChBj6B,KAAKu4B,oBACb,CACJ,CAEQsB,8BAA8BK,GAClCl6B,KAAKy5B,mCAELz5B,KAAKo5B,yBAAyB9sB,OAAO4tB,EACzC,CAEQD,uCACJj6B,KAAKy5B,mCAELz5B,KAAKs5B,+BAA+BhtB,QACxC,CAEQmtB,mCACJz5B,KAAKw5B,sBAAuB,EAE5Bx5B,KAAKi4B,qBAAqBviB,KAAO,CAAE9C,KAAM9C,GAAO6B,WAAYiQ,MAAO6V,GAAcS,2BAEjFl4B,KAAKu4B,qBAAqBnkB,UAC1BpU,KAAKu4B,oBAAsB,IAC/B,CAEQD,cAActwB,GAClBhI,KAAKg5B,gBAAkBh5B,KAAKg5B,eAE5B,MAAMmB,EAAqC,CAAEC,QAASp6B,KAAKg5B,gBAG3D,GAFAh5B,KAAKu5B,kBAAkBjtB,OAAO6tB,GAE1BA,EAASC,UAAYp6B,KAAKg5B,eAAgB,CAE1C,MAAM/P,EAAejpB,KAAKg5B,eACtBvB,GAAc4C,yBACd5C,GAAcE,0BAElB3vB,EAAU4N,MAAQ,IAAK5N,EAAU4N,MAAOqT,gBAEpCjpB,KAAKg5B,gBACLh5B,KAAKy5B,mCAGTz5B,KAAKw3B,cAAcjS,QAAUvlB,KAAKg5B,eAClCh5B,KAAK83B,YAAYvS,QAAUvlB,KAAKg5B,eAChCh5B,KAAKi4B,qBAAqB1S,QAAUvlB,KAAKg5B,cAC7C,CAEAh5B,KAAKg5B,eAAiBmB,EAASC,OACnC,G,0CAtSsD,CAAC,kBAAoB,kBAAoB,qBAAmBv6B,EAAAA,EAAAA,GAAAw3B,GAAA,4BACzD,CAAC,kBAAoB,kBAAoB,qBAAmBx3B,EAAAA,EAAAA,GAAAw3B,GAAA,2BAC7D,CAAC,EAAG,EAAG,KAAEx3B,EAAAA,EAAAA,GAAAw3B,GAAA,yBACX,CAAC,mBAAqB,kBAAoB,qBAAmBx3B,EAAAA,EAAAA,GAAAw3B,GAAA,2BAC3D,CAAC,kBAAoB,kBAAoB,qBAAmBx3B,EAAAA,EAAAA,GAAAw3B,GAAA,4BAC3D,CAAC,kBAAoB,kBAAoB,sBAAoBx3B,EAAAA,EAAAA,GAAAw3B,GAAA,0BAC/D,CAAC,mBAAqB,kBAAoB,IAAEA,IAP1FD,GAAaK,GAAA9zB,GAAA,EADzBC,EAAAA,EAAAA,KAsCQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAOqE,KAAoB,wBADsB,oBACtB,GADsB,qBAAV4X,IAAAA,IAAU/b,GAAAC,OACc,oBADd6E,GACc,qBAAnBX,IAAAA,IAAmBW,GAAA7E,UAtC3DgxB,IA0SbhyB,EAAUiB,KAAK+wB,IAAe9wB,SAASC,mB,sfCpThC,IAAM+zB,GAAN,MAeH56B,YACgC6hB,EACY+V,IAA8Bz3B,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,wBAR/C,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,qBACnC,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,sBAC/B,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,uBAC/B,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,wBAC/B,IAAI+L,IAGC,KAAA2V,WAAAA,EACY,KAAA+V,OAAAA,EACxC,MAAM1U,EAAiB,CAAC,kBAAoB,kBAAoB,mBAC1DqG,EAAoB,CAAC,kBAAoB,kBAAoB,mBAC7DsR,EAAuB,CAAC,mBAAqB,mBAAqB,mBAElE1xB,EAAS,GACT2xB,EAAgB,GAEtBx6B,KAAKyK,MAAQ,IAAIwI,GACb,CAAExU,EAAG,EAAIoK,EAAS,EAAI2xB,EAAe97B,EAAGmK,EAAS2xB,GACjD,CAAErnB,SAAUJ,GAAe2B,MAG/B1U,KAAKy6B,aAAez6B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAGC,EAAG,GAC5D,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOmC,OAAQ2P,MAAO2Y,IAC9B/H,GAAWxyB,KAAK06B,iBAAiBpuB,UACjCtM,KAAKyK,OAGTzK,KAAK26B,UAAY36B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAGoK,EAAS2xB,EAAe97B,EAAG,GAC9E,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOqC,IAAKyP,MAAO2Y,IAC3B/H,GAAWxyB,KAAK46B,cAActuB,UAC9BtM,KAAKyK,OAGTzK,KAAK66B,WAAa76B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAIoK,EAAS,EAAI2xB,EAAe97B,EAAG,GACvF,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOoC,KAAM0P,MAAO2Y,IAC5B/H,GAAWxyB,KAAK86B,eAAexuB,UAC/BtM,KAAKyK,OAGTzK,KAAK+6B,YAAc/6B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAIoK,EAAS,EAAI2xB,EAAe97B,EAAG,GACxF,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOsC,MAAOwP,MAAO2Y,IAC7B/H,GAAWxyB,KAAKg7B,gBAAgB1uB,UAChCtM,KAAKyK,OAGTzK,KAAKi7B,aAAej7B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAIoK,EAAS,EAAI2xB,EAAe97B,EAAG,GACzF,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOuC,WAAYuP,MAAO2Y,IAClC/H,GAAWxyB,KAAKk7B,iBAAiB5uB,UACjCtM,KAAKyK,OAGTzK,KAAKs3B,OAAOvvB,MAAM/H,KAAKyK,MAC3B,CAEAlD,SACIvH,KAAKyK,MAAMlD,QACf,CAEIge,cACA,OAAOvlB,KAAKy6B,aAAalV,OAC7B,CAEIA,YAAQlnB,GACR2B,KAAKy6B,aAAalV,QAAUlnB,EAC5B2B,KAAK26B,UAAUpV,QAAUlnB,EACzB2B,KAAK66B,WAAWtV,QAAUlnB,EAC1B2B,KAAK+6B,YAAYxV,QAAUlnB,EAC3B2B,KAAKi7B,aAAa1V,QAAUlnB,CAChC,CAEI88B,uBACA,OAAOn7B,KAAK06B,gBAChB,CAEIU,oBACA,OAAOp7B,KAAK46B,aAChB,CAEIS,qBACA,OAAOr7B,KAAK86B,cAChB,CAEIQ,sBACA,OAAOt7B,KAAKg7B,eAChB,CAEIO,uBACA,OAAOv7B,KAAKk7B,gBAChB,CAEI9zB,eACA,OAAOpH,KAAKyK,MAAMnC,gBACtB,CAEIE,gBACA,OAAOxI,KAAKyK,MAAMjC,SACtB,G,OAxHS8xB,GAAY32B,GAAA,EADxBC,EAAAA,EAAAA,KAiBQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAO4B,KAAuB,wBADmB,oBACnB,GADmB,qBAAVqa,IAAAA,IAAU/b,GAAAC,OACoB,oBADpB6E,GACoB,qBAAtBpD,IAAAA,IAAsBoD,GAAA7E,UAjBjEk0B,IA2Hbl1B,EAAUiB,KAAKi0B,IAAch0B,SAASC,mB,sfC/G/B,IAAMi1B,IAAqBnE,GAA3B,MAUH33B,YAAwC6hB,IAAsB1hB,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,sCAAAA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,+BAF5B,IAAI+L,IAEE,KAAA2V,WAAAA,EACpC,MAAMka,EAAe,GACdC,EAAaC,GAAa,CAAC,KAAM,IAElC/Y,EAAiB,CAAC,kBAAoB,kBAAoB,mBAC1DqG,EAAoB,CAAC,kBAAoB,kBAAoB,mBAEnEjpB,KAAKyK,MAAQ,IAAIwI,GACb,CACIxU,EAAG,GACHC,EAAG,EAAIg9B,EAAc,EAAID,EAAeE,EAAY,IAExD,CAAExoB,SAAUJ,GAAe2B,MAE/B1U,KAAK47B,sBAAwB,CACzBnxB,MAAOzK,KAAKyK,MACZoxB,KAAM77B,KAAKuhB,WAAW4Q,iBAClB,CAAE1zB,EAAG,EAAGC,EAAGg9B,EAAcD,GACzB,CAAE51B,MAAO61B,EAAa51B,OAAQ61B,GAC9B,EACA,CAAE/Y,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOG,UAAW2R,MAAOka,GAAsBC,oCACvDxvB,GAAUvM,KAAKg8B,oBAAoBzvB,EAAQ0vB,GAAiB34B,OAC5DtD,KAAKyK,OACTyxB,GAAIl8B,KAAKuhB,WAAW4Q,iBAChB,CAAE1zB,EAAGi9B,EAAcD,EAAe,EAAIE,EAAY,EAAGj9B,EAAGg9B,EAAc,EAAID,EAAeE,GACzF,CAAE91B,MAAO81B,EAAW71B,OAAQ41B,GAC5B,EACA,CAAE9Y,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOQ,QAASsR,MAAOka,GAAsBC,oCACrDxvB,GAAUvM,KAAKg8B,oBAAoBzvB,EAAQ0vB,GAAiBlC,KAC5D/5B,KAAKyK,OACT0xB,MAAOn8B,KAAKuhB,WAAW4Q,iBACnB,CAAE1zB,EAAGi9B,EAAcD,EAAc/8B,EAAGg9B,EAAcD,GAClD,CAAE51B,MAAO61B,EAAa51B,OAAQ61B,GAC9B,EACA,CAAE/Y,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOK,WAAYyR,MAAOka,GAAsBM,mCACxD7vB,GAAUvM,KAAKg8B,oBAAoBzvB,EAAQ0vB,GAAiB1nB,QAC5DvU,KAAKyK,OACT4xB,KAAMr8B,KAAKuhB,WAAW4Q,iBAClB,CAAE1zB,EAAGi9B,EAAcD,EAAe,EAAIE,EAAY,EAAGj9B,EAAG,GACxD,CAAEmH,MAAO81B,EAAW71B,OAAQ41B,GAC5B,EACA,CAAE9Y,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOS,UAAWqR,MAAOka,GAAsBC,oCACvDxvB,GAAUvM,KAAKg8B,oBAAoBzvB,EAAQ0vB,GAAiBjC,OAC5Dh6B,KAAKyK,QAGbzK,KAAKs8B,wBAA0Bt8B,KAAK47B,sBAAsBO,KAC9D,CAEII,8BACA,OAAOv8B,KAAKw8B,uBAChB,CAEAj1B,SACIvH,KAAKyK,MAAMlD,QACf,CAEAk1B,mBAAmBvC,GACfl6B,KAAKs8B,wBAAwB5mB,KAAO,IAC7B1V,KAAKs8B,wBAAwB5mB,KAChCkM,MAAOka,GAAsBC,mCAGjC,MAAMW,EAAUxC,IAAc+B,GAAiB34B,KAAOtD,KAAK47B,sBAAsBC,KAC7E3B,IAAc+B,GAAiBlC,GAAK/5B,KAAK47B,sBAAsBM,GAC3DhC,IAAc+B,GAAiB1nB,MAAQvU,KAAK47B,sBAAsBO,MAC9Dn8B,KAAK47B,sBAAsBS,KAEvCK,EAAQhnB,KAAO,IACRgnB,EAAQhnB,KACXkM,MAAOka,GAAsBM,kCAGjCp8B,KAAKs8B,wBAA0BI,CACnC,CAEQV,oBAAoBzvB,EAAsB2tB,GAC1C3tB,IAAWvM,KAAKs8B,0BAIpBt8B,KAAKs8B,wBAAwB5mB,KAAO,IAC7B1V,KAAKs8B,wBAAwB5mB,KAChCkM,MAAOka,GAAsBC,mCAGjCxvB,EAAOmJ,KAAO,IACPnJ,EAAOmJ,KACVkM,MAAOka,GAAsBM,kCAGjCp8B,KAAKs8B,wBAA0B/vB,EAC/BvM,KAAKw8B,wBAAwBlwB,OAAO4tB,GACxC,CAEIyC,iBACA,MAAMl0B,EAAYzI,KAAKyK,MAAMjC,UAE7B,MAAO,CACHo0B,GAAI58B,KAAKyK,MAAMnC,iBACfu0B,GAAI,CACAp+B,EAAGuB,KAAKyK,MAAMnC,iBAAiB7J,EAAIgK,EAAU5C,MAC7CnH,EAAGsB,KAAKyK,MAAMnC,iBAAiB5J,EAAI+J,EAAU3C,QAGzD,G,qDAtHwD,CAAC,mBAAqB,mBAAqB,qBAAmBjG,EAAAA,EAAAA,GAAAw3B,GAAA,mCAC/D,CAAC,kBAAoB,kBAAoB,oBAAmBA,IAF1GmE,GAAqBM,GAAAn4B,GAAA,EADjCC,EAAAA,EAAAA,KAWgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KAAW,wBAA+B,oBAA/B,GAA+B,qBAAVA,IAAAA,IAAU/b,GAAAC,UAVrDo1B,IA0Hbp2B,EAAUiB,KAAKm1B,IAAuBl1B,SAASC,mB,sfCvIxC,IAAMu2B,GAAN,MAaHp9B,YACgC6hB,EACY+V,IAA8Bz3B,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,8BAPzC,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,4BAClC,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,uBACrC,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,8BACzB,IAAI+L,IAGL,KAAA2V,WAAAA,EACY,KAAA+V,OAAAA,EACxC,MAAM1U,EAAiB,CAAC,kBAAoB,kBAAoB,mBAC1DqG,EAAoB,CAAC,kBAAoB,kBAAoB,mBAC7D8T,EAA2B,CAAC,kBAAoB,kBAAoB,mBACpEC,EAA2B,CAAC,mBAAqB,iBAAmB,mBACpEC,EAA+B,CAAC,mBAAqB,mBAAqB,mBAC1Ep0B,EAAS,GACT2xB,EAAgB,GAEtBx6B,KAAKyK,MAAQ,IAAIwI,GACb,CAAExU,EAAGoK,EAAQnK,EAAGmK,EAAS2xB,GACzB,CAAErnB,SAAUJ,GAAe2B,MAE/B1U,KAAKk9B,WAAal9B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAGC,EAAG,GAC1D,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOqB,KAAMyQ,MAAOmb,IAC5BvK,GAAWxyB,KAAKm9B,uBAAuB7wB,UACvCtM,KAAKyK,OAGTzK,KAAKo9B,WAAap9B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG+7B,EAAgB3xB,EAAQnK,EAAG,GAC/E,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOsB,KAAMwQ,MAAOob,IAC5BxK,GAAWxyB,KAAKq9B,qBAAqB/wB,UACrCtM,KAAKyK,OAETzK,KAAKo9B,WAAW7X,SAAU,EAE1BvlB,KAAKs9B,YAAct9B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAI+7B,EAAgB,EAAI3xB,EAAQnK,EAAG,GACxF,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOwC,MAAOsP,MAAOob,IAC7BxK,GAAWxyB,KAAKu9B,gBAAgBjxB,UAChCtM,KAAKyK,OAETzK,KAAKs9B,YAAY/X,SAAU,EAE3BvlB,KAAKw9B,eAAiBx9B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAI+7B,EAAgB,EAAI3xB,EAAQnK,EAAG,GAC3F,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOkC,SAAU4P,MAAOqb,IAChCzK,GAAWxyB,KAAKy9B,uBAAuBnxB,UACvCtM,KAAKyK,OAGTzK,KAAKs3B,OAAOvvB,MAAM/H,KAAKyK,MAC3B,CAEAlD,SACIvH,KAAKyK,MAAMlD,QACf,CAEIm2B,oBACA,OAAO19B,KAAKs9B,YAAY/X,OAC5B,CAEImY,kBAAcr/B,GACd2B,KAAKo9B,WAAW7X,QAAUlnB,EAC1B2B,KAAKs9B,YAAY/X,QAAUlnB,CAC/B,CAEIs/B,2BACA,OAAO39B,KAAKk9B,WAAW3X,OAC3B,CAEIoY,yBAAqBt/B,GACrB2B,KAAKk9B,WAAW3X,QAAUlnB,CAC9B,CAEIu/B,6BACA,OAAO59B,KAAKm9B,sBAChB,CAEIU,2BACA,OAAO79B,KAAKq9B,oBAChB,CAEIS,sBACA,OAAO99B,KAAKu9B,eAChB,CAEIQ,6BACA,OAAO/9B,KAAKy9B,sBAChB,GAxGSX,GAAYn5B,GAAA,EADxBC,EAAAA,EAAAA,KAeQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAO4B,KAAuB,wBADmB,oBACnB,GADmB,qBAAVqa,IAAAA,IAAU/b,GAAAC,OACoB,oBADpB6E,GACoB,qBAAtBpD,IAAAA,IAAsBoD,GAAA7E,UAfjE02B,IA2Gb13B,EAAUiB,KAAKy2B,IAAcx2B,SAASC,mB,6UChH/B,IAAMy3B,GAAN,MAAgBt+B,eAAAG,EAAAA,EAAAA,GAAA,eACU,KAAEA,EAAAA,EAAAA,GAAA,eAEb,IAACA,EAAAA,EAAAA,GAAA,wBAEQ,IAAI+L,GAA4B,CAE3DqyB,KAAKC,GACGl+B,KAAKm+B,SACLn+B,KAAKo+B,QAAQjyB,OAAOnM,KAAKq+B,OAAS,GAGtCr+B,KAAKo+B,QAAQ/1B,KAAK61B,GAClBl+B,KAAKq+B,OAASr+B,KAAKo+B,QAAQp/B,OAAS,EAEpCgB,KAAKs+B,iBAAiBhyB,QAC1B,CAEAsE,OACS5Q,KAAKu+B,UAIVv+B,KAAKo+B,QAAQp+B,KAAKq+B,UAAUztB,OAE5B5Q,KAAKs+B,iBAAiBhyB,SAC1B,CAEAuE,OACS7Q,KAAKm+B,UAIVn+B,KAAKo+B,UAAUp+B,KAAKq+B,QAAQG,QAE5Bx+B,KAAKs+B,iBAAiBhyB,SAC1B,CAEAmyB,QACIz+B,KAAKo+B,QAAQp/B,OAAS,EACtBgB,KAAKq+B,QAAU,EAEfr+B,KAAKs+B,iBAAiBhyB,QAC1B,CAEIiyB,cACA,OAAOv+B,KAAKq+B,QAAU,CAC1B,CAEIF,cACA,OAAOn+B,KAAKq+B,OAASr+B,KAAKo+B,QAAQp/B,OAAS,CAC/C,CAEI0/B,uBACA,OAAO1+B,KAAKs+B,gBAChB,GAvDSN,GAAUr6B,GAAA,EADtBC,EAAAA,EAAAA,MACYo6B,IA0Db54B,EAAUiB,KAAK23B,IAAY13B,SAASC,mB,yfCnD7B,IAAMo4B,GAAN,MAUHj/B,YACgC6hB,EACA6c,EACY9G,IAA8Bz3B,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,sBAPjD,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,sBAEhC,IAAI+L,IAGG,KAAA2V,WAAAA,EACA,KAAA6c,QAAAA,EACY,KAAA9G,OAAAA,EACxC,MAAM1U,EAAiB,CAAC,kBAAoB,kBAAoB,mBAC1DqG,EAAoB,CAAC,kBAAoB,kBAAoB,mBAC7DsR,EAAuB,CAAC,mBAAqB,iBAAmB,mBAEhE1xB,EAAS,GACT2xB,EAAgB,GAEtBx6B,KAAKyK,MAAQ,IAAIwI,GACb,CAAExU,EAAG,EAAIoK,EAAS,EAAI2xB,EAAe97B,EAAGmK,EAAS2xB,GACjD,CAAErnB,SAAUJ,GAAe2B,MAE/B1U,KAAK4+B,WAAa5+B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG,EAAGC,EAAG,GAC1D,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOc,KAAMgR,MAAO2Y,IAC5B/H,GAAWxyB,KAAK6+B,eAAevyB,UAC/BtM,KAAKyK,OAETzK,KAAK4+B,WAAWrZ,SAAU,EAE1BvlB,KAAK8+B,WAAa9+B,KAAKuhB,WAAW4Q,iBAAiB,CAAE1zB,EAAG+7B,EAAgB3xB,EAAQnK,EAAG,GAC/E,CAAEmH,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOe,KAAM+Q,MAAO2Y,IAC5B/H,GAAWxyB,KAAK++B,eAAezyB,UAC/BtM,KAAKyK,OAETzK,KAAK8+B,WAAWvZ,SAAU,EAE1BvlB,KAAKo+B,QAAQM,iBAAiBx2B,QAAO,IAAMlI,KAAKg/B,8BAEhDh/B,KAAKs3B,OAAOvvB,MAAM/H,KAAKyK,MAC3B,CAEAlD,SACIvH,KAAKyK,MAAMlD,QACf,CAEIg3B,cACA,OAAOv+B,KAAK4+B,WAAWrZ,OAC3B,CAEIgZ,YAAQlgC,GACJ2B,KAAK4+B,WAAWrZ,UAAYlnB,IAC5B2B,KAAK4+B,WAAWrZ,QAAUlnB,EAElC,CAEI8/B,cACA,OAAOn+B,KAAK8+B,WAAWvZ,OAC3B,CAEI4Y,YAAQ9/B,GACJ2B,KAAK8+B,WAAWvZ,UAAYlnB,IAC5B2B,KAAK8+B,WAAWvZ,QAAUlnB,EAElC,CAEI4gC,qBACA,OAAOj/B,KAAK6+B,cAChB,CAEIK,qBACA,OAAOl/B,KAAK++B,cAChB,CAEAI,OACIn/B,KAAK4+B,WAAWrZ,SAAU,EAC1BvlB,KAAK8+B,WAAWvZ,SAAU,CAC9B,CAEA6Z,SACIp/B,KAAKg/B,2BACT,CAEQA,4BACJh/B,KAAK4+B,WAAWrZ,SAAWvlB,KAAKo+B,QAAQG,QACxCv+B,KAAK8+B,WAAWvZ,SAAWvlB,KAAKo+B,QAAQD,OAC5C,GA9FSQ,GAAeh7B,GAAA,EAD3BC,EAAAA,EAAAA,KAYQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAO+3B,KACPh4B,GAAA,GAAAC,EAAAA,EAAAA,GAAO4B,KAAuB,wBAFmB,oBAEnB,GAFmB,qBAAVqa,IAAAA,IAAU/b,GAAAC,OACH,oBADG6E,GACH,qBAAV+yB,IAAAA,IAAU/yB,GAAA7E,OACuB,oBADvB6c,GACuB,qBAAtBpb,IAAAA,IAAsBob,GAAA7c,UAbjEu4B,IAiGbv5B,EAAUiB,KAAKs4B,IAAiBr4B,SAASC,mB,yfC9FlC,IAAM84B,GAAN,MAaH3/B,YACiC+G,EACD8a,EAC+B6O,IAAsDvwB,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,2CAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,sCAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,2BAP3D,OAAIA,EAAAA,EAAAA,GAAA,qBAE7B,KAGA,KAAA4G,SAAAA,EACD,KAAA8a,WAAAA,EAC+B,KAAA6O,2BAAAA,EAC3D,MAAMxN,EAAiB,CAAC,kBAAoB,kBAAoB,mBAC1DqG,EAAoB,CAAC,kBAAoB,kBAAoB,mBAC7DqW,EAAoB,CAAC,mBAAqB,mBAAqB,mBAE/Dz2B,EAAS,GACT2xB,EAAgB,GAChB+E,EAAiB,IAEvBv/B,KAAKyK,MAAQ,IAAIwI,GAA6B,CAAExU,EAAG,IAAKC,EAAG,IAAM,CAAEyU,SAAUJ,GAAeK,SAC5FpT,KAAKw/B,YAAcx/B,KAAKuhB,WAAW4Q,iBAC/B,CAAE1zB,EAAG,EAAGC,EAAG6gC,EAAiB12B,EAAS,GACrC,CAAEhD,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAOyC,MAAOqP,MAAO0d,IAC7B9M,GAAWxyB,KAAKy/B,WAAU,IAC1Bz/B,KAAKyK,OAGTzK,KAAK0/B,aAAe1/B,KAAKuhB,WAAW4Q,iBAChC,CAAE1zB,EAAG+7B,EAAgB3xB,EAAQnK,EAAG6gC,EAAiB12B,EAAS,GAC1D,CAAEhD,MAAO20B,EAAe10B,OAAQ00B,GAChC,EACA,CAAE5X,YAAWqG,gBACb,CAAErW,KAAM9C,GAAO0C,OAAQoP,MAAO0d,IAC9B9M,GAAWxyB,KAAKy/B,WAAU,IAC1Bz/B,KAAKyK,OACTzK,KAAK0/B,aAAana,SAAU,EAE5BvlB,KAAK2/B,eAAiB3/B,KAAKuhB,WAAWgC,eAClC,CAAE9kB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAO7F,KAAK4/B,cAAe95B,OAAQy5B,GACrC,EACA,GACA,GACAv/B,KAAKyK,OAETzK,KAAK6/B,sBAAwB7/B,KAAKuhB,WAAW8U,uBACzC,CAAE53B,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAO7F,KAAK4/B,cAAe95B,OAAQy5B,GACrC,EACA,GACA,GACAv/B,KAAKyK,OACTzK,KAAK6/B,sBAAsB3b,SAAU,CACzC,CAEQub,UAAUK,GACd9/B,KAAKw/B,YAAYja,QAAUua,EAC3B9/B,KAAK0/B,aAAana,SAAWua,EAE7B9/B,KAAK6/B,sBAAsB3b,QAAU4b,EACrC9/B,KAAK2/B,eAAezb,SAAW4b,EAE3B9/B,KAAK2/B,eAAezb,SACpBlkB,KAAK2/B,eAAelb,aAE5B,CAEIjS,aACA,OAAOxS,KAAK2/B,eAAehqB,IAC/B,CAEInD,WAAOwC,GACPhV,KAAK2/B,eAAehqB,KAAO3V,KAAK+/B,iBAAiB/qB,GAEjDhV,KAAK2/B,eAAelb,aACxB,CAEIlS,YACA,OAAOvS,KAAK6/B,sBAAsBlqB,IACtC,CAEApO,SACIvH,KAAK6/B,sBAAsBr3B,UAAY,CACnC3C,MAAO7F,KAAKggC,WACZl6B,OAAQ9F,KAAK6/B,sBAAsBr3B,UAAU1C,OAAS9F,KAAK6/B,sBAAsBn3B,OAGrF1I,KAAK2/B,eAAen3B,UAAY,CAC5B3C,MAAO7F,KAAKggC,WACZl6B,OAAQ9F,KAAK6/B,sBAAsBr3B,UAAU1C,OAAS9F,KAAK6/B,sBAAsBn3B,OAGrF1I,KAAKyK,MAAMlD,QACf,CAGIy4B,iBACA,MAAMC,EAAajgC,KAAKyG,SAASmC,cAAcnD,MAAQzF,KAAKyK,MAAMnC,iBAAiB7J,EACnF,OAAOD,KAAKF,IAAI0B,KAAK4/B,cAAeK,GAAcjgC,KAAKyK,MAAM/B,KACjE,CAEQq3B,iBAAiBlO,GACrB,MAAMZ,EAAsBjxB,KAAKkgC,8BAE3BC,EAAS,IAAItO,GACbuO,EAAU,GAAKpgC,KAAKyK,MAAM/B,MAEhC,IAAK,IAAIxJ,EAAI,EAAG2G,EAAQu6B,EAASlhC,EAAIihC,EAAOnhC,SAAUE,EAAG,CACrD,MAAMisB,EAASgV,EAAOjhC,GAEtB,GAAe,OAAXisB,EAAiB,CACjBtlB,EAAQu6B,EACR,QACJ,CAEA,MAAM5Q,EAAQ3D,GACT+F,IAAI/B,GAASoB,EAAqB,UAAW9F,GAC7CQ,QAAQkE,GAASoB,EAAqB,UAAW,KAClDprB,EAAQ2pB,EAAM3pB,MAAQ7F,KAAK2/B,eAAen3B,UAAU3C,OACpDA,EAAQu6B,EACRD,EAAOh0B,OAAOjN,EAAG,EAAG,OAEpB2G,GAAS2pB,EAAM3pB,KAEvB,CAEA,OAAOs6B,EAAOE,KAAK,GACvB,CAEQH,8BACJ,OAAiC,OAA7BlgC,KAAKixB,qBAAgCjxB,KAAKixB,oBAAoB3O,aAAetiB,KAAK2/B,eAAerd,WAAatiB,KAAK2/B,eAAej3B,QAItI1I,KAAKixB,oBAAsBjxB,KAAKowB,2BAA2B,CAAEvD,WAAY,CAAEC,MAAO,IAAKE,IAAK,KAAOQ,KAAM,CAAEE,KAAM,SAAUD,KAAMztB,KAAK2/B,eAAerd,WAAatiB,KAAK2/B,eAAej3B,UAH3K1I,KAAKixB,mBAMpB,GAlJSoO,GAAU17B,GAAA,EADtBC,EAAAA,EAAAA,KAeQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeO,6BAA2B,wBAFA,oBAEA,GAFA,qBAAXkB,GAAAA,GAAWa,GAAAC,OACA,oBADA6E,GACA,qBAAViX,IAAAA,IAAUjX,GAAA7E,OAC+D,oBAD/D6c,GAC+D,qBAA1B7e,EAAAA,4BAAAA,EAAAA,4BAA0B6e,GAAA7c,UAhB5Gi5B,IAqJbj6B,EAAUiB,KAAKg5B,IAAY/4B,SAASC,mB,sfC3J7B,IAAM+5B,GAAN,MAaH5gC,YACgC6hB,EACC9a,IAAqB5G,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,gBAZnB,OAAIA,EAAAA,EAAAA,GAAA,oBAEX,CAAC,GAAK,GAAK,MAAIA,EAAAA,EAAAA,GAAA,kBAEtB,KAAEA,EAAAA,EAAAA,GAAA,gBAEJ,MAAIA,EAAAA,EAAAA,GAAA,kBAEF,GAGW,KAAA0hB,WAAAA,EACC,KAAA9a,SAAAA,EAC7BzG,KAAKyK,MAAQ,IAAIwI,GACb,CAAExU,EAAG,EAAGC,EAAG,GACX,CAAEyU,SAAUJ,GAAeK,OAAQC,WAAYP,GAAiB0B,QACxE,CAEA+rB,KAAK3tB,EAAwBoC,EAAmBC,GACtB,OAAlBjV,KAAKwgC,UACLxgC,KAAKygC,OAGTzgC,KAAKwgC,SAAWxgC,KAAKuhB,WAAW2U,YAC5B,CAAEz3B,EAAG,EAAGC,EAAG,GACX,EACAkU,EACAoC,EACAC,EACAjV,KAAKyK,OAETzK,KAAK0gC,uBAEL1gC,KAAK2gC,UAAYC,YAAW,IAAM5gC,KAAKygC,QAAQzgC,KAAK6gC,SACxD,CAEQH,uBACJ,MAAMI,EAAa9gC,KAAKyK,MAAMjC,UAAU3C,MACxC,GAAIi7B,EAAa9gC,KAAKyG,SAASmC,cAAcnD,MAAO,CAChD,MAAMqD,EAAc9I,KAAKyG,SAASmC,cAAcnD,MAAQq7B,EACxD9gC,KAAKyK,MAAM/B,MAAQI,CACvB,CACJ,CAEAi4B,UAAUjzB,GACN9N,KAAKugC,KACD,CAAE3tB,KAAM9C,GAAO0B,kBAAmBoQ,MAAO5hB,KAAKghC,cAC9C,CAAEhsB,KAAMlH,EAAK4T,WAAY1hB,KAAK0hB,WAAYE,MAAO5hB,KAAKghC,cACtD,CAAEpe,UAAW,CAAC,IAAM,IAAM,MAElC,CAEAqe,YAAYnzB,GACR9N,KAAKugC,KACD,CAAE3tB,KAAM9C,GAAO2B,oBAAqBmQ,MAAO5hB,KAAKghC,cAChD,CAAEhsB,KAAMlH,EAAK4T,WAAY1hB,KAAK0hB,WAAYE,MAAO5hB,KAAKghC,cACtD,CAAEpe,UAAW,CAAC,IAAM,IAAM,MAElC,CAEAse,gBAAgBpzB,GACZ9N,KAAKugC,KACD,CAAE3tB,KAAM9C,GAAO0B,kBAAmBoQ,MAAO5hB,KAAKghC,cAC9C,CAAEhsB,KAAMlH,EAAK4T,WAAY1hB,KAAK0hB,WAAYE,MAAO5hB,KAAKghC,cACtD,CAAEpe,UAAW,CAAC,GAAK,IAAM,MAEjC,CAEAue,YAAYrzB,GACR9N,KAAKugC,KACD,CAAE3tB,KAAM9C,GAAO0B,kBAAmBoQ,MAAO5hB,KAAKghC,cAC9C,CAAEhsB,KAAMlH,EAAK4T,WAAY1hB,KAAK0hB,WAAYE,MAAO5hB,KAAKghC,cACtD,CAAEpe,UAAW,CAAC,IAAM,IAAM,KAElC,CAEA6d,OACIzgC,KAAKwgC,UAAUpsB,UACfpU,KAAKwgC,SAAW,KAChBY,aAAaphC,KAAK2gC,UACtB,CAEAp5B,SACIvH,KAAKyK,MAAMlD,QACf,GCnGE,SAAU85B,GAAaxP,GACzB,MAAO,IAAIA,GAAKpvB,KAAIhE,GAAK6iC,GAAS7iC,KAAI4hC,MAC1C,CAEA,SAASiB,GAASnW,GACd,MAAe,OAAXA,EACO,MACW,OAAXA,EACA,MAEAA,CAEf,CDAamV,GAAgB38B,GAAA,EAD5BC,EAAAA,EAAAA,KAeQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAD8B,oBAC9B,GAD8B,qBAAV4c,IAAAA,IAAU/b,GAAAC,OACA,oBADA6E,GACA,qBAAX3F,GAAAA,GAAW2F,GAAA7E,UAf7Ck6B,IA0Fbl7B,EAAUiB,KAAKi6B,IAAkBh6B,SAASC,mB,sfE3FnC,IAAMg7B,GAAN,MAKH7hC,YACgC6hB,EACC9a,IAAqB5G,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,6BADtB,KAAA0hB,WAAAA,EACC,KAAA9a,SAAAA,EAC7BzG,KAAKyK,MAAQ,IAAIwI,GACb,CACIxU,EAAG,GACHC,EAAG,KAEP,CAAEyU,SAAUJ,GAAe2B,MAG/B1U,KAAKwhC,cAAgBxhC,KAAKuhB,WAAWgC,eACjC,CAAE9kB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAO,IAAKC,OAAQ,KACtB,EACA,GACA,GACA9F,KAAKyK,OAETzK,KAAKwhC,cAActd,SAAU,CACjC,CAEAO,cACIzkB,KAAKwhC,cAAc/c,aACvB,CAEAld,SACIvH,KAAKyK,MAAMlD,QACf,CAEIk6B,UAAMC,GACN1hC,KAAKwhC,cAAc7rB,KAAO,IAAI+rB,GACzBC,UACAl/B,KAAIhE,GAAK,GAAGA,MAAM4iC,GAAatT,OAAOC,aAAavvB,SACnD4hC,KAAK,KACd,CAEInc,cACA,OAAOlkB,KAAKwhC,cAActd,OAC9B,CAEIA,YAAQC,GACRnkB,KAAKwhC,cAActd,QAAUC,CACjC,GAhDSod,GAAa59B,GAAA,EADzBC,EAAAA,EAAAA,KAOQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAD8B,oBAC9B,GAD8B,qBAAV4c,IAAAA,IAAU/b,GAAAC,OACA,oBADA6E,GACA,qBAAX3F,GAAAA,GAAW2F,GAAA7E,UAP7Cm7B,IAmDbn8B,EAAUiB,KAAKk7B,IAAej7B,SAASC,mB,OCjDlCq7B,G,6eAAL,SAAKA,GAAoBA,EAAAA,EAAA,4BAAWA,EAAAA,EAAA,4BAAWA,EAAAA,EAAA,2BAAW,EAA1D,CAAKA,KAAAA,GAAiB,KAOtB,MAAMC,GAGFniC,YACYoiC,EACRC,EACAC,IAAkBniC,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,uBAFV,KAAAiiC,cAAAA,EAGR9hC,KAAKiiC,aAAwBl7B,IAAdi7B,EACX,CAACD,GACD,CAACC,EAAWD,EACpB,CAEIxP,cACA,IAAIwP,EAAU/hC,KAAKiiC,QAAQjiC,KAAKiiC,QAAQjjC,OAAS,GAOjD,GANA+iC,EAAU/hC,KAAKkiC,YAAcH,EAAQI,cAAgBJ,EAAQK,cAEzDpiC,KAAK8hC,cAAcO,UAAYT,GAAkBU,WAAatiC,KAAK8hC,cAAcS,UACjFR,EAAUA,EAAQle,WAAW,GAAG2e,YAGhCxiC,KAAKyiC,aAAc,CACnB,IAAIT,EAAYhiC,KAAKiiC,QAAQ,GAM7B,OAJIjiC,KAAK8hC,cAAcO,UAAYT,GAAkBU,WAAatiC,KAAK8hC,cAAcS,UACjFP,EAAYA,EAAUne,WAAW,GAAG2e,YAGjC,GAAGR,MAAcD,GAC5B,CACI,OAAOA,CAEf,CAEIh+B,aACA,MAAMonB,EAASnrB,KAAKiiC,QAAQjiC,KAAK0iC,OAEjC,OAAO1iC,KAAKkiC,YAAc/W,EAAOgX,cAAgBhX,EAAOiX,aAC5D,CAEIO,uBACA,OAAO3iC,KAAK8hC,cAAcO,UAAYT,GAAkBU,WAAatiC,KAAK8hC,cAAcS,QACpFviC,KAAKiiC,QAAQ,GAAGpe,WAAW,GAAG2e,WAAWxjC,OACzCgB,KAAKiiC,QAAQ,GAAGjjC,MACxB,CAEIyjC,mBACA,OAAOziC,KAAKiiC,QAAQjjC,OAAS,CACjC,CAEY0jC,YACR,QAAS1iC,KAAK8hC,cAAcO,UAAYT,GAAkBgB,WACtD5iC,KAAK8hC,cAAcO,UAAYT,GAAkBiB,WAAa7iC,KAAKiiC,QAAQjjC,MACnF,CAEYkjC,kBACR,OAAOliC,KAAK8hC,cAAcO,UAAYT,GAAkBiB,SAC5D,EAWG,IAAMC,GAAN,MA+CHpjC,YAAwC6hB,IAAsB1hB,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,iBA9C5B,CAAC,kBAAoB,kBAAoB,qBAAmBA,EAAAA,EAAAA,GAAA,oBACzD,CAAC,kBAAoB,kBAAoB,qBAAmBA,EAAAA,EAAAA,GAAA,cAChF,IAACA,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,uBAGO,IAAKA,EAAAA,EAAAA,GAAA,qCAAAA,EAAAA,EAAAA,GAAA,sBAEL,CACrBkjC,UAAW,CAAC,mBAAqB,mBAAqB,mBACtDC,UAAW,CAAC,mBAAqB,iBAAmB,mBACpDhB,UAAW,CAAC,kBAAoB,mBAAqB,sBACxDniC,EAAAA,EAAAA,GAAA,0BAE4B,CACzBojC,SAAU,CAAC,kBAAoB,kBAAoB,mBACnDC,OAAQ,CAAC,mBAAqB,mBAAqB,sBACtDrjC,EAAAA,EAAAA,GAAA,+BAEiC,CAC9BojC,SAAU,CAAC,kBAAoB,kBAAoB,mBACnDC,OAAQ,CAAC,EAAG,EAAG,MAClBrjC,EAAAA,EAAAA,GAAA,0BAEiC,CAAC,mBAAqB,mBAAqB,qBAAmBA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,qBAG9C,KAAEA,EAAAA,EAAAA,GAAA,uBAC1B,CAAEgG,MAAO,GAAIC,OAAQ,MAAIjG,EAAAA,EAAAA,GAAA,oBACnB,IAACA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,qBAIQ,KAAEA,EAAAA,EAAAA,GAAA,kBAEtB,KAAEA,EAAAA,EAAAA,GAAA,iBACH+hC,GAAkBgB,YAAS/iC,EAAAA,EAAAA,GAAA,kBAE3B,IAAKA,EAAAA,EAAAA,GAAA,gCAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,gCAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,kBAOJ,IAAI+L,IAEe,KAAA2V,WAAAA,EACpCvhB,KAAKmjC,oBAAsB,IAAIlwB,GAA6B,CAAExU,EAAG,GAAIC,EAAG,KAExEsB,KAAKojC,qBAAuBpjC,KAAKuhB,WAAW4Q,iBACxC,CAAE1zB,EAAG,EAAGC,EAAG,GACX,CAAEmH,MAAO,GAAIC,OAAQ,IACrB9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAErW,KAAM9C,GAAO2C,SAAUmP,MAAO5hB,KAAKqjC,eAAeN,YACnDvQ,GAA0BxyB,KAAKsjC,kBAChCtjC,KAAKmjC,qBAETnjC,KAAKujC,cAAgB,IAAItwB,GACrB,CAAExU,EAAG,EAAGC,EAAGsB,KAAKwjC,cAChB,CAAEnwB,WAAYP,GAAiB0B,SAEnCxU,KAAKyjC,uBAELzjC,KAAKsT,WAAWpL,QAAOw7B,GAAW1jC,KAAK2jC,iBAC3C,CAEQF,uBACJ,MAAMG,EAAuB,CACzBvB,MAAOA,IAAMriC,KAAK6jC,UAClBtB,MAAOA,IAAMviC,KAAK8jC,WAGtB9jC,KAAK+jC,gBAAkB,CACnB,IAAIlC,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,MACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,KAC/C,IAAI/B,GAAqB+B,EAAsB,KAC/C,IAAI/B,GAAqB+B,EAAsB,KAC/C,IAAI/B,GAAqB+B,EAAsB,MAGnD5jC,KAAKgkC,eAAiB,CAClB,IAAInC,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,MAGxD5jC,KAAKikC,gBAAkB,CACnB,IAAIpC,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,MAGxD5jC,KAAKkkC,eAAiB,CAClB,IAAIrC,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KACpD,IAAI/B,GAAqB+B,EAAsB,IAAK,KAE5D,CAEQN,iBACJtjC,KAAKmkC,gBAAkBnkC,KAAKmkC,eAE5BnkC,KAAKojC,qBAAqB1tB,KAAO,CAC7B9C,KAAM5S,KAAKojC,qBAAqB1tB,KAAK9C,KACrCgP,MAAO5hB,KAAKmkC,eAAiBnkC,KAAKqjC,eAAeL,UAAYhjC,KAAKqjC,eAAeN,WAGrF/iC,KAAKmkC,eACDnkC,KAAKokC,gBACLpkC,KAAKqkC,cACb,CAEQD,gBACJpkC,KAAKskC,gBAAgB,CAAE7lC,EAAG,EAAGC,EAAG,EAAIsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cACvExjC,KAAK+jC,iBAET/jC,KAAKskC,gBACD,CAAE7lC,EAAG,EAAGC,EAAG,EAAIsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cACtDxjC,KAAKgkC,gBAEThkC,KAAKskC,gBACD,CAAE7lC,EAAGuB,KAAKukC,gBAAgB1+B,MAAQ,EAAGnH,EAAG,EAAIsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cACnFxjC,KAAKikC,iBAETjkC,KAAKskC,gBACD,CAAE7lC,EAAGuB,KAAKwkC,WAAaxkC,KAAKwjC,aAAc9kC,EAAGsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cACpFxjC,KAAKkkC,gBAETlkC,KAAKykC,iBACT,CAEQH,gBAAgBx9B,EAAgB49B,GACpC,IAAK,IAAIxlC,EAAI,EAAGA,EAAIwlC,EAAQ1lC,SAAUE,EAAG,CACrC,MAAMo4B,EAASoN,EAAQxlC,GACjBynB,EAAS3mB,KAAKuhB,WAAW0U,iBAC3B,CACIx3B,EAAGqI,EAASrI,GAAKuB,KAAKukC,gBAAgB1+B,MAAQ7F,KAAKwjC,cAAgBtkC,EACnER,EAAGoI,EAASpI,GAEhB,CACImH,MAAO7F,KAAKukC,gBAAgB1+B,MAC5BC,OAAQ9F,KAAKukC,gBAAgBz+B,QAEjC9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAEjU,KAAMsiB,EAAO/E,QAAS7Q,WAAY,GAAIE,MAAO5hB,KAAK2kC,qBACnDnS,GAA0BxyB,KAAKsT,WAAWhH,OAAOo4B,EAAQxlC,GAAG6E,SAC7D/D,KAAKujC,eAETvjC,KAAK4kC,mBAAmBje,EAAQ2Q,GAAQ,GAExCt3B,KAAK6kC,cAAcx8B,KAAK,CAAEse,SAAQ2Q,WAClCt3B,KAAK8kC,cAAcz8B,MAAK,IAAMse,EAAOvS,WACzC,CACJ,CAEQqwB,kBACJ,MAAMpC,EAAQriC,KAAKuhB,WAAW4Q,iBAC1B,CACI1zB,EAAG,EACHC,EAAGsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cAE9C,CAAE39B,MAAO7F,KAAKwkC,WAAY1+B,OAAQ9F,KAAKukC,gBAAgBz+B,QACvD9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAErW,KAAM9C,GAAO4C,MAAOkP,MAAO5hB,KAAK2kC,qBACjCp4B,GAAyBvM,KAAK+kC,YAAYx4B,IAC3CvM,KAAKujC,eAETvjC,KAAK8kC,cAAcz8B,MAAK,IAAMg6B,EAAMjuB,YAGpCpU,KAAKglC,eAAiBhlC,KAAKuhB,WAAW0U,iBAClC,CACIx3B,EAAGuB,KAAKwkC,WAAaxkC,KAAKwjC,aAC1B9kC,EAAGsB,KAAKwjC,cAEZ,CACI39B,MAAO7F,KAAKkkC,eAAellC,OAASgB,KAAKukC,gBAAgB1+B,MAAQ7F,KAAKwjC,cAAgBxjC,KAAKkkC,eAAellC,OAAS,GACnH8G,OAAQ9F,KAAKukC,gBAAgBz+B,QAEjC9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAEjU,KAAM,GAAI0M,WAAY,GAAIE,MAAO5hB,KAAK2kC,qBACvCnS,GAA0BxyB,KAAKsT,WAAWhH,OAAO,MAClDtM,KAAKujC,eAETvjC,KAAK8kC,cAAcz8B,MAAK,IAAMrI,KAAKglC,eAAe5wB,YAGlD,MAAM6wB,EAAYjlC,KAAKuhB,WAAW4Q,iBAC9B,CACI1zB,EAAGuB,KAAKwkC,WAAaxkC,KAAKkkC,eAAellC,OAASgB,KAAKukC,gBAAgB1+B,OAAS7F,KAAKkkC,eAAellC,OAAS,GAAKgB,KAAKwjC,aACvH9kC,EAAGsB,KAAKukC,gBAAgBz+B,OAAS,EAAI9F,KAAKwjC,cAE9C,CAAE39B,MAAO7F,KAAKwkC,WAAY1+B,OAAQ9F,KAAKukC,gBAAgBz+B,QACvD9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAErW,KAAM9C,GAAO6C,UAAWiP,MAAO5hB,KAAK2kC,qBACrCnS,GAA0BxyB,KAAKsT,WAAWhH,OAAO,cAClDtM,KAAKujC,eAETvjC,KAAK8kC,cAAcz8B,MAAK,IAAM48B,EAAU7wB,YAGxC,MAAM8wB,EAAallC,KAAKuhB,WAAW0U,iBAC/B,CACIx3B,EAAGuB,KAAKwkC,WAAaxkC,KAAKkkC,eAAellC,OAASgB,KAAKukC,gBAAgB1+B,OAAS7F,KAAKkkC,eAAellC,OAAS,GAAKgB,KAAKwjC,aACvH9kC,EAAGsB,KAAKwjC,cAEZ,CAAE39B,MAAO7F,KAAKwkC,WAAY1+B,OAAQ9F,KAAKukC,gBAAgBz+B,QACvD9F,KAAK+U,OACL,CAAE6N,UAAW5iB,KAAK4iB,UAAWqG,aAAcjpB,KAAKipB,cAChD,CAAEjU,KAAM,QAAS0M,WAAY,GAAIE,MAAO5hB,KAAK2kC,qBAC5Cp4B,GAAyBvM,KAAKmlC,YAAY54B,IAC3CvM,KAAKujC,eAETvjC,KAAK8kC,cAAcz8B,MAAK,IAAM68B,EAAW9wB,WAC7C,CAEQ2wB,YAAYx4B,GAChBvM,KAAK2jC,gBAEL3jC,KAAK6jC,WAAa7jC,KAAK6jC,UAAY,GAAK/tB,GAAS8rB,IAEjD,MAAMhgB,EAAQ,CACV5hB,KAAKqjC,eAAeN,UACpB/iC,KAAKqjC,eAAeL,UACpBhjC,KAAKqjC,eAAerB,WACtBhiC,KAAK6jC,WAEPt3B,EAAOmJ,KAAO,IAAKnJ,EAAOmJ,KAAMkM,SAEhC5hB,KAAKolC,6BACT,CAEQD,YAAY54B,GAChBvM,KAAK2jC,gBAEL3jC,KAAK8jC,WAAa9jC,KAAK8jC,UAEvB9jC,KAAKglC,eAAezS,QAAU,IACvBvyB,KAAKglC,eAAezS,QACvBvd,KAAMhV,KAAK8jC,UAAY,IAAIjgB,WAAW,GAAG2e,WAAa,IAI1Dj2B,EAAOqJ,MAAQ,IACRrJ,EAAOqJ,MACVqT,aAAcjpB,KAAKqlC,wBAAwBrlC,KAAK8jC,UAAY,SAAW,aAG3E9jC,KAAKolC,6BACT,CAEQA,8BACJplC,KAAK6kC,cAAc3iC,SAAQ8J,IACvB,MAAM,OAAE2a,EAAM,OAAE2Q,GAAWtrB,EAI3B,OAFA2a,EAAO4L,QAAU,IAAK5L,EAAO4L,QAASvd,KAAMsiB,EAAO/E,SAE3CvyB,KAAK6jC,WACT,KAAKjC,GAAkBgB,UACvB,KAAKhB,GAAkBiB,UACnB7iC,KAAK4kC,mBAAmBje,EAAQ2Q,GAAQ,GACxC,MACJ,KAAKsK,GAAkBU,UACnBtiC,KAAK4kC,mBAAmBje,EAAQ2Q,GAAQ,GACxC,MACR,GAER,CAEQsN,mBAAmBje,EAAsB2Q,EAA8ByK,GAC3E,GAAIzK,EAAOmL,aAAc,CACrB,MAAO6C,EAAcC,GAAkBxD,EACnC,CAAC/hC,KAAKwlC,mBAAmBvC,SAAUjjC,KAAKwlC,mBAAmBtC,QAC3D,CAACljC,KAAKwlC,mBAAmBtC,OAAQljC,KAAKwlC,mBAAmBvC,UAE7Dtc,EAAO8L,kBAAkB,EAAG6E,EAAOqL,iBAAkB,CAAE/gB,MAAO0jB,IAC9D3e,EAAO8L,kBAAkB6E,EAAOqL,iBAAmB,EAAGhc,EAAO4L,QAAQvd,KAAKhW,OAAQ,CAAE4iB,MAAO2jB,GAC/F,MACI5e,EAAO8L,kBAAkB,EAAG9L,EAAO4L,QAAQvd,KAAKhW,OAAQ,CAAE4iB,MAAO5hB,KAAKwlC,mBAAmBtC,QAEjG,CAEQmB,eACJrkC,KAAK8kC,cAAc5iC,SAAQujC,GAAWA,MACtCzlC,KAAK8kC,cAAc9lC,OAAS,EAE5BgB,KAAK6kC,cAAc7lC,OAAS,EAE5BgB,KAAK6jC,UAAYjC,GAAkBgB,SACvC,CAEQe,gBACJ+B,UAAUC,QAAQ,GACtB,CAEI19B,iBACA,OAAOjI,KAAKsT,UAChB,CAEIhL,uBACA,OAAOtI,KAAKujC,cAAcj7B,gBAC9B,CAEIE,gBACA,OAAOxI,KAAKujC,cAAc/6B,SAC9B,CAEAjB,SACIvH,KAAKmjC,oBAAoB57B,SACzBvH,KAAKujC,cAAch8B,QACvB,GAlVSu7B,GAAuBn/B,GAAA,EADnCC,EAAAA,EAAAA,KAgDgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KAAW,wBAA+B,oBAA/B,GAA+B,qBAAVA,IAAAA,IAAU/b,GAAAC,UA/CrD08B,IAqVb19B,EAAUiB,KAAKy8B,IAAyBx8B,SAASC,mB,ihBCrZ1C,IAAMq/B,GAAN,MAKHlmC,YAC0D6F,EAC1Bgc,EACMskB,EACJC,EACGC,EACHC,EACSpK,EACRqK,EACAC,EACUC,EACbC,IAAsBvmC,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,gCAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,sCAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,gCAVI,KAAA0F,GAAAA,EAC1B,KAAAgc,WAAAA,EACM,KAAAskB,iBAAAA,EACJ,KAAAC,aAAAA,EACG,KAAAC,gBAAAA,EACH,KAAAC,aAAAA,EACS,KAAApK,sBAAAA,EACR,KAAAqK,cAAAA,EACA,KAAAC,cAAAA,EACU,KAAAC,wBAAAA,EACb,KAAAC,WAAAA,EAC5BpmC,KAAKyG,SAAWrB,EAAU2O,IAAIzO,GAE9BtF,KAAKqmC,uBACT,CAEI7K,4BACA,OAAOx7B,KAAK47B,qBAChB,CAEIxE,oBACA,OAAOp3B,KAAKimC,aAChB,CAEI5G,iBACA,OAAOr/B,KAAKomC,UAChB,CAEIE,eACA,OAAOtmC,KAAK6lC,gBAChB,CAEI/I,mBACA,OAAO98B,KAAK8lC,YAChB,CAEInH,sBACA,OAAO3+B,KAAK+lC,eAChB,CAEIzL,mBACA,OAAOt6B,KAAKgmC,YAChB,CAEIzE,oBACA,OAAOvhC,KAAKkmC,aAChB,CAEIpD,8BACA,OAAO9iC,KAAKmmC,uBAChB,CAEA5+B,SACIvH,KAAKqmC,wBAELrmC,KAAKuhB,WAAWla,eAAiBrH,KAAKumC,iBAEtCvmC,KAAK47B,sBAAsBr0B,SAC3BvH,KAAKimC,cAAc1+B,SACnBvH,KAAK8lC,aAAav+B,SAClBvH,KAAK6lC,iBAAiBt+B,SACtBvH,KAAK+lC,gBAAgBx+B,SACrBvH,KAAKgmC,aAAaz+B,SAClBvH,KAAKkmC,cAAc3+B,SACnBvH,KAAKmmC,wBAAwB5+B,SAC7BvH,KAAKomC,WAAW7+B,QACpB,CAEAoe,MAAM5lB,GACF,MAAMtB,EAAIsB,EAAEM,QACN3B,EAAIsB,KAAKuF,GAAGK,OAAOE,OAAS/F,EAAEO,QAE9BkmC,EAAoBl9B,GAAaytB,mBACnC,CACIt4B,EAAGuB,KAAKmmC,wBAAwB79B,iBAAiB7J,EACjDC,EAAGsB,KAAKmmC,wBAAwB79B,iBAAiB5J,EACjDmH,MAAO7F,KAAKmmC,wBAAwB39B,UAAU3C,MAC9CC,OAAQ9F,KAAKmmC,wBAAwB39B,UAAU1C,QAEnD,CAAErH,IAAGC,MAET,OAAOsB,KAAKuhB,WAAWoE,MAAM,CAAEtlB,QAAS5B,EAAG6B,QAAS5B,KAAQ8nC,CAChE,CAEAtoB,OACIle,KAAKuhB,WAAWrD,MACpB,CAEQmoB,wBACJrmC,KAAKumC,iBAAmB7/B,EAAAA,GACpBA,EAAAA,KACA,EAAG1G,KAAKuF,GAAGK,OAAOC,MAClB,EAAG7F,KAAKuF,GAAGK,OAAOE,QACjB9F,KAAKyG,SAASiB,OAAQ1H,KAAKyG,SAASkB,KAC7C,GApGSi+B,GAAcjiC,GAAA,EAD1BC,EAAAA,EAAAA,KAOQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOic,KACPlc,GAAA,GAAAC,EAAAA,EAAAA,GAAOq6B,KACPt6B,GAAA,GAAAC,EAAAA,EAAAA,GAAO62B,KACP92B,GAAA,GAAAC,EAAAA,EAAAA,GAAO04B,KACP34B,GAAA,GAAAC,EAAAA,EAAAA,GAAOq0B,KACPt0B,GAAA,GAAAC,EAAAA,EAAAA,GAAOu1B,KACPx1B,GAAA,GAAAC,EAAAA,EAAAA,GAAOmxB,KACPpxB,GAAA,GAAAC,EAAAA,EAAAA,GAAOs7B,KACPv7B,GAAA,GAAAC,EAAAA,EAAAA,GAAO68B,KACP98B,GAAA,IAAAC,EAAAA,EAAAA,GAAOo5B,KAAW,wBAV6D,oBAU7D,GAV6D,qBAAtBn5B,wBAAAA,wBAAsBC,GAAAC,OAC9B,oBAD8B6E,GAC9B,qBAAViX,IAAAA,IAAUjX,GAAA7E,OACkB,oBADlB6c,GACkB,qBAAhBqd,IAAAA,IAAgBrd,GAAA7c,OACZ,oBADY8c,GACZ,qBAAZ4Z,IAAAA,IAAY5Z,GAAA9c,OACS,oBADTgd,GACS,qBAAfub,IAAAA,IAAevb,GAAAhd,OACT,oBADS8wB,GACT,qBAAZoD,IAAAA,IAAYpD,GAAA9wB,OAC2B,oBAD3BqgC,GAC2B,qBAArBjL,IAAAA,IAAqBiL,GAAArgC,OACxB,oBADwBsgC,GACxB,qBAAbtP,IAAAA,IAAasP,GAAAtgC,OACA,oBADAugC,GACA,qBAAbpF,IAAAA,IAAaoF,GAAAvgC,OAC8B,oBAD9BwgC,GAC8B,qBAAvB9D,IAAAA,IAAuB8D,GAAAxgC,OACvC,oBADuCygC,GACvC,qBAAVxH,IAAAA,IAAUwH,GAAAzgC,UAhB7Cw/B,IAuGbxgC,EAAUiB,KAAKu/B,IAAgBt/B,SAASC,mB,6UCtHjC,IAAMugC,GAAN,MAAsBpnC,eAAAG,EAAAA,EAAAA,GAAA,qBACD,IAACA,EAAAA,EAAAA,GAAA,sBAIzBknC,WAAqDC,KAAWtb,GAC5D1rB,KAAKinC,cAAgB,EACrBjnC,KAAK2N,OAAS,IAAIq5B,KAAOtb,EAC7B,CAEAwb,KAAKC,GACD,OAAOnnC,KAAK2N,OAAOu5B,KAAKC,EAC5B,CAEAC,MAAMD,EAAc9oC,GAChB,MAAMgpC,EAAa,IAAIxjB,WAAW,GAC5ByjB,EAAStnC,KAAK2N,OAAOu5B,KAAKC,GAE5BG,IAAWjpC,IACPipC,IAAWD,IACTrnC,KAAKinC,cACA5oC,IAAUgpC,KACfrnC,KAAKinC,eAIfjnC,KAAK2N,OAAOy5B,MAAMD,EAAK9oC,EAC3B,CAEAkJ,OAAOggC,GACHvnC,KAAK2N,OAAOpG,OAAOggC,EACvB,CAEAC,QACI,OAAOxnC,KAAK2N,OAAO65B,OACvB,CAEIv2B,YACA,OAA8B,IAAvBjR,KAAKinC,aAChB,CAEIQ,yBACA,OAAOznC,KAAK2N,OAAO85B,kBACvB,CAEIC,aACA,OAAO1nC,KAAK2N,MAChB,GA/CSm5B,GAAgBnjC,GAAA,EAD5BC,EAAAA,EAAAA,MACYkjC,IAkDb1hC,EAAUiB,KAAKygC,IAAkBxgC,SAASC,mBChDpC,MAAOohC,GACTzpB,OAAe,CAEf0pB,SAAiB,CAEbvgC,mBAAe0Y,GAA4B,ECfnD,I,YCmBK8nB,GDnBL,yJEAA,sPCAA,0RCAA,gS,6eHmBA,SAAKA,GAAoBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,aAAI,EAAhD,CAAKA,KAAAA,GAAiB,KAQf,IAAMC,GAAN,cAAiCjrB,GAGpCnd,YACiC+G,EACiBlB,EACJwpB,EACOgZ,GACjD,MAAMtoB,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC4rB,EAAavoB,EAAY3J,GAAS+xB,IAExCx8B,MAAM9F,EACF,CAAEqZ,SAAUqpB,GAAOnpB,OAAQopB,IAC3B,CAAC,CACG/tB,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,EAAI6B,GAEhB,CACItF,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,EAAI6B,EAAY,EAAIA,IAEhC,CAAExB,oBAAqB,EAAGK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,gBApC1C,IAGM,KAAA4G,SAAAA,EAEa,KAAAsoB,UAAAA,EACO,KAAAgZ,iBAAAA,EAgCjD/nC,KAAKmoC,eACT,CAEAC,aAEI,MAAMC,EAAuB,GAC7B,IAAK,IAAI9b,EAAM,EAAGA,EAAMvsB,KAAKyG,SAAS6hC,YAAY5iC,SAAU6mB,EACxD,IAAK,IAAIqB,EAAM,EAAGA,EAAM5tB,KAAKyG,SAAS6hC,YAAY7iC,QAASmoB,EAAK,CAC5D,MAAM2B,EAAOvvB,KAAKuoC,UACd,CAAE9pC,EAAGmvB,EAAM5tB,KAAKwoC,SAAU9pC,EAAG6tB,EAAMvsB,KAAKwoC,UACxC,CAAC,EAAG,iBAAmB,mBACvB,KAEJH,EAAWhgC,QAAQknB,EACvB,CAGJvvB,KAAKid,iBAAiBorB,EAC1B,CAEAtkC,OAAOonB,EAAgBmB,EAAgBC,GACnCA,EAAMvsB,KAAKyG,SAAS6hC,YAAY5iC,OAAS6mB,EAAM,EAE/C,MAAMkc,EAAYzoC,KAAK+d,oBAAoBwO,EAAMvsB,KAAKyG,SAAS6hC,YAAY7iC,MAAQ6mB,GAC7Eoc,EAAW1oC,KAAK+uB,UAAU5gB,SAASgd,GAEnCwd,EAAW,EACXC,EAAgBH,EAAU7qB,OAAS+qB,EAGzCF,EAAUzqB,OAAO4qB,GAAiBF,EAASp6B,EAAE7P,EAC7CgqC,EAAUzqB,OAAO4qB,EAAgB,GAAKF,EAASn6B,EAAE7P,EAEjD,MAAMqgB,EAASjJ,GAAS+xB,IAGxBY,EAAUzqB,OAAO4qB,EAAgB7pB,GAAU2pB,EAASn6B,EAAE9P,EACtDgqC,EAAUzqB,OAAO4qB,EAAgB7pB,EAAS,GAAK2pB,EAASp6B,EAAE5P,EAG1D+pC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,GAAU2pB,EAASp6B,EAAE7P,EAC1DgqC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,EAAS,GAAK2pB,EAASp6B,EAAE5P,EAG9D+pC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,GAAU2pB,EAASp6B,EAAE7P,EAC1DgqC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,EAAS,GAAK2pB,EAASn6B,EAAE7P,EAG9D+pC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,GAAU2pB,EAASn6B,EAAE9P,EAC1DgqC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,EAAS,GAAK2pB,EAASn6B,EAAE7P,EAG9D+pC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,GAAU2pB,EAASn6B,EAAE9P,EAC1DgqC,EAAUzqB,OAAO4qB,EAAgB,EAAI7pB,EAAS,GAAK2pB,EAASp6B,EAAE5P,EAE9D,MAAM+gB,EAAYhE,GAAiBqC,QAAQ9d,KAAKuF,GAAG6W,OAEnDpc,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAC9Cvd,KAAKuF,GAAGsY,cAAc7d,KAAKuF,GAAG+X,aAAcmC,EAAYmpB,EAAe5oC,KAAKyX,WAAYmxB,EAAe,EAAI7pB,EAAS,EACxH,CAEAb,OACIle,KAAKuF,GAAGyc,YAAYhiB,KAAKuF,GAAG0c,WAAYjiB,KAAK+nC,kBAE7C18B,MAAM6S,MACV,CAEQqqB,UACJzhC,EACA8a,EACAuJ,GAEA,MAAM3c,EAAKxO,KAAK+uB,UAAU5gB,SAASgd,GAEnC,OAAO3T,GAAiBa,cACpBvR,EACA,CAAEjB,MAAO7F,KAAKwoC,SAAU1iC,OAAQ9F,KAAKwoC,UACrC,CACI5mB,EACA,CACI7J,WAAY,CAACvJ,EAAGF,EAAE7P,EAAG+P,EAAGD,EAAE7P,GAC1BsZ,QAAS,CAACxJ,EAAGF,EAAE7P,EAAG+P,EAAGF,EAAE5P,GACvBuZ,SAAU,CAACzJ,EAAGD,EAAE9P,EAAG+P,EAAGF,EAAE5P,GACxBwZ,YAAa,CAAC1J,EAAGD,EAAE9P,EAAG+P,EAAGD,EAAE7P,KAI3C,CAEI2I,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEIvX,gBACA,MAAO,CACHyjB,QAASjsB,KAAKyG,SAAS6hC,YAAY7iC,MACnCymB,KAAMlsB,KAAKyG,SAAS6hC,YAAY5iC,OAExC,CAEQyiC,gBACJnoC,KAAKooC,YACT,GA7ISN,GAAkBnkC,GAAA,EAD9BC,EAAAA,EAAAA,KAKQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeG,YACtBgC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeK,mBAAiB,wBAHU,oBAGV,GAHU,qBAAXoB,GAAAA,GAAWa,GAAAC,OACsB,oBADtB6E,GACsB,qBAAtB/E,wBAAAA,wBAAsB+E,GAAA7E,OACV,oBADU6c,GACV,qBAATjf,IAAAA,IAASif,GAAA7c,OACiB,oBADjB8c,GACiB,qBAAZC,cAAAA,cAAYD,GAAA9c,UAP1E0hC,IAgJb1iC,EAAUiB,KAAKyhC,IAAoBxhC,SAASC,mB,UI3JvCsiC,G,6eAAL,SAAKA,GAA2BA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,EAA/C,CAAKA,KAAAA,GAAwB,KAGtB,IAAMC,GAAN,cAA6CjsB,GAOhDnd,YAC4D6F,EACpBwjC,GACpC,MAAMtpB,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC4rB,EAAavoB,EAAY3J,GAAS+yB,IAExCx9B,MACI9F,EACA,CAAEqZ,SAAUoqB,GAAelqB,OAAQmqB,IACnC,CAAC,CACG9uB,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,EAAI6B,IAEhB,CAAExB,oBAAqB,EAAGK,kBAAmB/Y,EAAGqa,aAClD/f,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,oBAhC0B,KAAGA,EAAAA,EAAAA,GAAA,wBACM,CAAC,kBAAoB,kBAAoB,qBAAmBA,EAAAA,EAAAA,GAAA,wBAE1E,KAAGA,EAAAA,EAAAA,GAAA,wBACW,CAAC,mBAAqB,iBAAmB,oBAGtB,KAAA0F,GAAAA,EACpB,KAAAwjC,aAAAA,EA0BpC/oC,KAAKmoC,eACT,CAEI9gC,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEQooB,gBACJ,MAAME,EAAuB,GAEvBa,EAAgB1xB,GAAiBwR,UACnC,CAAEvqB,EAAG,EAAGC,EAAG,GACX,CACImH,MAAO7F,KAAK+oC,aAAavgC,UAAUyjB,QAAUjsB,KAAK+oC,aAAaP,SAC/D1iC,OAAQ9F,KAAK+oC,aAAavgC,UAAU0jB,KAAOlsB,KAAK+oC,aAAaP,UAEjExoC,KAAKmpC,iBACL,CAACnpC,KAAKopC,mBAEVf,EAAWhgC,QAAQ6gC,GAEnB,IAAK,IAAI3c,EAAM,EAAGA,EAAMvsB,KAAK+oC,aAAavgC,UAAU0jB,OAAQK,EAAK,CAC7D,MAAM8c,EAAW7xB,GAAiBa,cAC9B,CAAE5Z,EAAG,EAAGC,EAAG6tB,EAAMvsB,KAAK+oC,aAAaP,UACnC,CACI3iC,MAAO7F,KAAK+oC,aAAavgC,UAAUyjB,QAAUjsB,KAAK+oC,aAAaP,SAC/D1iC,OAAQ9F,KAAKspC,cAEjB,CAACtpC,KAAKupC,mBAEVlB,EAAWhgC,QAAQghC,EACvB,CAEA,IAAK,IAAIzb,EAAM,EAAGA,EAAM5tB,KAAK+oC,aAAavgC,UAAUyjB,UAAW2B,EAAK,CAChE,MAAM4b,EAAWhyB,GAAiBa,cAC9B,CAAE5Z,EAAGmvB,EAAM5tB,KAAK+oC,aAAaP,SAAU9pC,EAAG,GAC1C,CACImH,MAAO7F,KAAKspC,aACZxjC,OAAQ9F,KAAK+oC,aAAavgC,UAAU0jB,KAAOlsB,KAAK+oC,aAAaP,UAEjE,CAACxoC,KAAKupC,mBAEVlB,EAAWhgC,QAAQmhC,EACvB,CAEAxpC,KAAKid,iBAAiBorB,EAC1B,GAjFSS,GAA8BnlC,GAAA,EAD1CC,EAAAA,EAAAA,KASQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6hC,KAAmB,wBADuD,oBACvD,GADuD,qBAAtB5hC,wBAAAA,wBAAsBC,GAAAC,OACd,oBADc6E,GACd,qBAAlB68B,IAAAA,IAAkB78B,GAAA7E,UAT/D0iC,IAoFb1jC,EAAUiB,KAAKyiC,IAAgCxiC,SAASC,mBCvGxD,I,YCiBKkjC,GDjBL,0KEAA,oP,6eDiBA,SAAKA,GAAqBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,EAAzC,CAAKA,KAAAA,GAAkB,KAahB,IAAMC,IAAiBrS,GAAvB,cAAgCxa,GAKnCnd,YACkD6F,EACVokC,GACpC,MAAMlqB,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OAExCwtB,EAAkBnqB,EAAY3J,GAAS2zB,IAE7Cp+B,MACI9F,EACA,CAAEqZ,SAAUirB,GAAY/qB,OAAQgrB,IAChC,CACI,CACI3vB,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQ6qB,EACRhsB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQ6qB,EACRhsB,OAAQ,EAAI6B,IAGpB,CAAExB,oBAAqB8rB,GAAkBlqB,oBAAqBvB,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,gBA9BhE,IAID,KAAA8pC,mBAAAA,CA2BxC,CAEA13B,OAAOxT,EAAWC,EAAWkjB,GACzB5hB,KAAKgqC,aAAa,CAAEvrC,IAAGC,KAAK,CAAED,IAAGC,KAAKkjB,EAC1C,CAEAooB,aAAa5qC,EAAUC,EAAUuiB,GAC7B,MAAMqoB,EAAS9rC,EAAS+K,SAAS,CAAClJ,KAAKkqC,MAAM9qC,GAAKY,KAAKkqC,MAAM7qC,KAE7D,GAAIW,KAAKmqC,UAAUF,EAAO3rC,MAAQ0B,KAAKmqC,UAAUF,EAAO1rC,KACpD,OAGJ,MAAM6rC,EAAepqC,KAAKqqC,SACrBj+B,WAAUk+B,GAAKA,EAAE3gC,EAAElL,IAAMwrC,EAAO3rC,IAAIG,GAAK6rC,EAAE3gC,EAAEjL,IAAMurC,EAAO3rC,IAAII,GAAK4rC,EAAE1gC,EAAEnL,IAAMwrC,EAAO1rC,IAAIE,GAAK6rC,EAAE1gC,EAAElL,IAAMurC,EAAO1rC,IAAIG,IAEvH,IAAsB,IAAlB0rC,EAAqB,CACrB,MAAMG,EAAc,EACd7U,EAAQ11B,KAAK+d,oBAAoBqsB,GAEjC3qB,EAAYhE,GAAiBqC,QAAQ9d,KAAKuF,GAAG6W,OAC7CouB,EAAsB10B,GAAS2zB,IAErC,IAAK,IAAIvqC,EAAI,EAAGA,EAAI6qC,GAAkBlqB,sBAAuB3gB,EAAG,CAC5D,MAAMurC,EAAa/U,EAAM9X,OAAS2sB,EAAcrrC,EAAIsrC,EAEpD9U,EAAM1X,OAAOysB,GAAc7oB,EAAM,GACjC8T,EAAM1X,OAAOysB,EAAa,GAAK7oB,EAAM,GACrC8T,EAAM1X,OAAOysB,EAAa,GAAK7oB,EAAM,EACzC,CAEA5hB,KAAKuF,GAAG8X,WAAWrd,KAAKuF,GAAG+X,aAActd,KAAKud,KAC9Cvd,KAAKuF,GAAGsY,cAAc7d,KAAKuF,GAAG+X,aAC1BmC,GAAaiW,EAAM9X,OAAS2sB,GAC5BvqC,KAAKyX,WACLie,EAAM9X,OAAS2sB,GACdR,GAAkBlqB,oBAAsB,GAAK2qB,EAAsB,EAC5E,KAAO,CACHxqC,KAAKqqC,SAAShiC,KAAK,CAAEsB,EAAGsgC,EAAO3rC,IAAKsL,EAAGqgC,EAAO1rC,MAE9C,MAAMmsC,EAAYlzB,GAAiBwR,UAC/B,CACIvqB,EAAGwrC,EAAO3rC,IAAIG,EAAIuB,KAAK2pC,mBAAmBnB,SAC1C9pC,EAAGurC,EAAO3rC,IAAII,EAAIsB,KAAK2pC,mBAAmBnB,UAE9C,CACI3iC,OAAQokC,EAAO1rC,IAAIE,EAAIwrC,EAAO3rC,IAAIG,EAAI,GAAKuB,KAAK2pC,mBAAmBnB,SACnE1iC,QAASmkC,EAAO1rC,IAAIG,EAAIurC,EAAO3rC,IAAII,EAAI,GAAKsB,KAAK2pC,mBAAmBnB,UAExE,GACA,CAAC5mB,IAEL5hB,KAAKid,iBAAiB,IAAIjd,KAAKyX,cAAeizB,GAClD,CACJ,CAEQP,UAAUhrC,GACd,OAAOA,EAAEV,EAAI,GAAKU,EAAEV,GAAKuB,KAAK2pC,mBAAmBnhC,UAAUyjB,SACvD9sB,EAAET,EAAI,GAAKS,EAAET,GAAKsB,KAAK2pC,mBAAmBnhC,UAAU0jB,IAC5D,CAEQge,MAAM//B,GACV,MAAO,CACH1L,EAAG0L,EAAM1L,EACTC,EAAGsB,KAAK2pC,mBAAmBnhC,UAAU0jB,KAAO/hB,EAAMzL,EAAI,EAE9D,CAEAisC,SAASlsC,EAAWC,GAChBsB,KAAK4qC,eAAe,CAAEnsC,IAAGC,KAAK,CAAED,IAAGC,KACvC,CAEAksC,eAAexrC,EAAUC,GACrB,MAAM4qC,EAAS9rC,EAAS+K,SAAS,CAAClJ,KAAKkqC,MAAM9qC,GAAKY,KAAKkqC,MAAM7qC,KAEvD+qC,EAAepqC,KAAKqqC,SACrBj+B,WAAUk+B,GAAKA,EAAE3gC,EAAElL,IAAMwrC,EAAO3rC,IAAIG,GAAK6rC,EAAE3gC,EAAEjL,IAAMurC,EAAO3rC,IAAII,GAAK4rC,EAAE1gC,EAAEnL,IAAMwrC,EAAO1rC,IAAIE,GAAK6rC,EAAE1gC,EAAElL,IAAMurC,EAAO1rC,IAAIG,IAEvH,IAAsB,IAAlB0rC,EACA,OAGJ,MAAM1U,EAAQ11B,KAAK+d,oBAAoBqsB,GAEjCS,EAAO,IAAI7qC,KAAKyX,YAEtBozB,EAAK1+B,OAAOupB,EAAM9X,OAAQ9H,GAAS2zB,IAAsBM,GAAkBlqB,qBAC3E7f,KAAKid,iBAAiB4tB,GAEtB7qC,KAAKqqC,SAASl+B,OAAOi+B,EAAc,EACvC,CAEI/iC,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,G,uCA/H8C,IAAEsX,IADvCqS,GAAiBK,GAAApmC,GAAA,EAD7BC,EAAAA,EAAAA,KAOQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6hC,KAAmB,wBAD6C,oBAC7C,GAD6C,qBAAtB5hC,wBAAAA,wBAAsBC,GAAAC,OACE,oBADF6E,GACE,qBAAlB68B,IAAAA,IAAkB78B,GAAA7E,UAPrEsjC,IAmIbtkC,EAAUiB,KAAKqjC,IAAmBpjC,SAASC,mB,yfEtJpC,IAAMukC,GAAN,MAGHprC,YACwCiqC,EACYoB,EACbC,IAAoCnrC,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,+CAAAA,EAAAA,EAAAA,GAAA,kCAAAA,EAAAA,EAAAA,GAAA,8BAFnC,KAAA8pC,mBAAAA,EACY,KAAAoB,+BAAAA,EACb,KAAAC,kBAAAA,CAAwC,CAE3E3jC,mBAAe0Y,GACf/f,KAAKsH,eAAiByY,EAEtB/f,KAAK2pC,mBAAmBtiC,eAAiB0Y,EACzC/f,KAAK+qC,+BAA+B1jC,eAAiB0Y,EACrD/f,KAAKgrC,kBAAkB3jC,eAAiB0Y,CAC5C,CAEI1Y,qBACA,OAAOrH,KAAKsH,cAChB,CAEAvD,OAAOonB,EAAgBmB,EAAgBC,GACnCvsB,KAAK2pC,mBAAmB5lC,OAAOonB,EAAQmB,EAAQC,EACnD,CAEAta,OAAOqa,EAAgBC,EAAa3K,GAChC5hB,KAAKgrC,kBAAkB/4B,OAAOqa,EAAQC,EAAK3K,EAC/C,CAEAooB,aAAa5qC,EAAUC,EAAUuiB,GAC7B5hB,KAAKgrC,kBAAkBhB,aAAa5qC,EAAIC,EAAIuiB,EAChD,CAEA+oB,SAASre,EAAgBC,GACrBvsB,KAAKgrC,kBAAkBL,SAASre,EAAQC,EAC5C,CAEAqe,eAAexrC,EAAUC,GACrBW,KAAKgrC,kBAAkBJ,eAAexrC,EAAIC,EAC9C,CAEA6e,OACIle,KAAK2pC,mBAAmBzrB,OACxBle,KAAK+qC,+BAA+B7sB,OACpCle,KAAKgrC,kBAAkB9sB,MAC3B,CAEA+sB,QACI,IAAK,IAAI1e,EAAM,EAAGA,EAAMvsB,KAAKwI,UAAU0jB,OAAQK,EAC3C,IAAK,IAAID,EAAS,EAAGA,EAAStsB,KAAKwI,UAAUyjB,UAAWK,EACpDtsB,KAAK+D,OAAO,IAAKuoB,EAAQC,EAGrC,CAEI/jB,gBACA,OAAOxI,KAAK2pC,mBAAmBnhC,SACnC,CAEIggC,eACA,OAAOxoC,KAAK2pC,mBAAmBnB,QACnC,GA5DSsC,GAAkBnnC,GAAA,EAD9BC,EAAAA,EAAAA,KAKQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6hC,KACP9hC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6iC,KACP9iC,GAAA,GAAAC,EAAAA,EAAAA,GAAOyjC,KAAkB,wBAFgD,oBAEhD,GAFgD,qBAAlB5B,IAAAA,IAAkB3hC,GAAAC,OACoC,oBADpC6E,GACoC,qBAA9B69B,IAAAA,IAA8B79B,GAAA7E,OACvC,oBADuC6c,GACvC,qBAAjBymB,IAAAA,IAAiBzmB,GAAA7c,UANlE0kC,IA+Db1lC,EAAUiB,KAAKykC,IAAoBxkC,SAASC,mB,UChEhC2kC,G,6eAAZ,SAAYA,GAAkBA,EAAAA,EAAA,8BAAYA,EAAAA,EAAA,wBAASA,EAAAA,EAAA,0BAAUA,EAAAA,EAAA,+BAAa,EAA1E,CAAYA,KAAAA,GAAe,KAYpB,IAAMC,GAAN,MAGHzrC,YACwC0rC,EAC2CC,IAAyCxrC,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,yCAAAA,EAAAA,EAAAA,GAAA,gBAJrF,IAGC,KAAAurC,mBAAAA,EAC2C,KAAAC,yBAAAA,CAA6C,CAEhIC,QAAQhf,EAAgBC,EAAavX,EAAclO,GAC/C,MAAMykC,EAAavrC,KAAKwrC,UAAUlf,EAAQC,EAAKzlB,GAE/C,IAAoB,IAAhBykC,EAOA,MANa,KAATv2B,EACAhV,KAAKyrC,eAAeF,GAEpBvrC,KAAK0rC,SAASH,GAAY5yB,SAAShD,KAAOX,EAGvChV,KAAK2rC,cAAcrf,EAAQC,EAAKzlB,GAG3C,MAAM8kC,EAAW,GACX/iC,EAAS,GAET8P,EAAW3Y,KAAKqrC,yBAAyBhqB,OAC3C,CAAE5iB,EAAG,EAAGC,EAAG,GACX,MACAsW,EACA,EACA,MAEJ2D,EAASjQ,MAAQ,GAEjB,IAAIjK,EAAI,EAAGC,EAAI,EACf,OAAQoI,GACJ,KAAKokC,GAAgBnzB,WACjBtZ,EAAIoK,EAASyjB,EAASsf,EACtBltC,EAAImK,GAAU7I,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOK,EAAM,GAAKqf,EAClE,MACJ,KAAKV,GAAgBlzB,QACjBvZ,EAAIoK,EAASyjB,EAASsf,EACtBltC,GAAKsB,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOK,EAAM,GAAKqf,EAAWA,EAAWjzB,EAASnQ,UAAU1C,OAAS+C,EAC3G,MACJ,KAAKqiC,GAAgBjzB,SACjBxZ,EAAI6tB,EAASsf,EAAWA,EAAWjzB,EAASnQ,UAAU3C,MAAQgD,EAC9DnK,GAAKsB,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOK,EAAM,GAAKqf,EAAWA,EAAWjzB,EAASnQ,UAAU1C,OAAS+C,EAC3G,MACJ,KAAKqiC,GAAgBhzB,YACjBzZ,EAAI6tB,EAASsf,EAAWA,EAAWjzB,EAASnQ,UAAU3C,MAAQgD,EAC9DnK,EAAImK,GAAU7I,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOK,EAAM,GAAKqf,EAClE,MAOR,OAJAjzB,EAASvR,SAAW,CAAE3I,IAAGC,KAEzBsB,KAAK0rC,SAASrjC,KAAK,CAAEikB,SAAQC,MAAKzlB,WAAU6R,aAErC3Y,KAAK2rC,cAAcrf,EAAQC,EAAKzlB,EAC3C,CAEA+kC,aACI,MAAO7rC,KAAK0rC,SAAS1sC,OAAS,EAC1BgB,KAAKyrC,eAAezrC,KAAK0rC,SAAS1sC,OAAS,EAEnD,CAEQwsC,UAAUlf,EAAgBC,EAAazlB,GAC3C,OAAO9G,KAAK0rC,SAASt/B,WAAU3N,GAAKA,EAAE6tB,SAAWA,GAAU7tB,EAAE8tB,MAAQA,GAAO9tB,EAAEqI,WAAaA,GAC/F,CAEQ6kC,cAAcrf,EAAgBC,EAAazlB,GAC/C,MAAO,KACH,MAAMma,EAAMjhB,KAAKwrC,UAAUlf,EAAQC,EAAKzlB,IAE3B,IAATma,GACAjhB,KAAKyrC,eAAexqB,EACxB,CAER,CAEQwqB,eAAexqB,GACnBjhB,KAAK0rC,SAASzqB,GAAKtI,SAASvE,UAC5BpU,KAAK0rC,SAASv/B,OAAO8U,EAAK,EAC9B,GAlFSkqB,GAAwBxnC,GAAA,EADpCC,EAAAA,EAAAA,KAKQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6kC,KACP9kC,GAAA,GAAAC,EAAAA,EAAAA,GAAOgqB,KAAkBjqB,GAAA,GAAA2vB,EAAAA,EAAAA,GAAMjxB,EAA0BC,cAAY,wBADI,oBACJ,GADI,qBAAlBmmC,IAAAA,IAAkB3kC,GAAAC,OAC8C,oBAD9C6E,GAC8C,qBAAfglB,IAAAA,IAAehlB,GAAA7E,UALnH+kC,IAqFb/lC,EAAUiB,KAAK8kC,IAA0B7kC,SAASC,mB,eCtG5C,MAAOulC,GAGTpsC,YACqBmG,EACAC,EACTimC,IAAkBlsC,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,oBAFT,KAAAgG,MAAAA,EACA,KAAAC,OAAAA,EACT,KAAAimC,SAAAA,EACJA,GACA/rC,KAAK+mC,YAEb,CAEA3oC,uBAA0ByH,EAAeC,EAAgBpG,GACrD,OAAO,IAAIosC,GAAWjmC,EAAOC,GAAQ,IAAM,IAAIpG,GACnD,CAEAtB,oBAAuByH,EAAeC,EAAgBimC,GAClD,OAAO,IAAID,GAAWjmC,EAAOC,EAAQimC,EACzC,CAEAC,IAAI5d,GACA,OAAOpuB,KAAKisC,KAAKjsC,KAAKksC,cAAc9d,GACxC,CAEAyC,IAAIzC,EAAc/vB,GACd2B,KAAKisC,KAAKjsC,KAAKksC,cAAc9d,IAAQ/vB,CACzC,CAEA8tC,OAAO/d,EAAcge,GACjB,MAAMnrB,EAAMjhB,KAAKksC,cAAc9d,GAE/BpuB,KAAKisC,KAAKhrB,GAAOmrB,EAAQpsC,KAAKisC,KAAKhrB,GACvC,CAEAvI,IAAU+S,GACN,MAAM4gB,EAAS,IAAIP,GAAc9rC,KAAK6F,MAAO7F,KAAK8F,QAIlD,OAFAumC,EAAOJ,KAAOjsC,KAAKisC,KAAKxpC,KAAI,CAACpE,EAAU4iB,IAAgBwK,EAAGptB,EAAO2B,KAAKssC,aAAarrB,GAAMjhB,QAElFqsC,CACX,CAEAE,QAAQ9gB,GACJzrB,KAAKisC,KAAK/pC,SAAQ,CAAC7D,EAAU4iB,IAAgBwK,EAAGptB,EAAO2B,KAAKssC,aAAarrB,GAAMjhB,OACnF,CAEAwsC,MAAM/gB,GACF,OAAOzrB,KAAKisC,KAAK3pC,OAAM,CAACjE,EAAU4iB,IAAgBwK,EAAGptB,EAAO2B,KAAKssC,aAAarrB,GAAMjhB,OACxF,CAEAysC,OAAOC,GACH,OAAIA,EAAI7mC,QAAU7F,KAAK6F,OAAS6mC,EAAI5mC,SAAW9F,KAAK8F,QAI7C9F,KAAKwsC,OAAM,CAACnuC,EAAO6Y,IAAU7Y,IAAUquC,EAAIV,IAAI90B,IAC1D,CAEQ6vB,aACJ/mC,KAAKisC,KAAO71B,MAAMC,KAAK,CAAErX,OAAQgB,KAAK6F,MAAQ7F,KAAK8F,SAAU,IAAM9F,KAAK+rC,YAC5E,CAEQG,cAAc9d,GAClB,OAAOA,EAAI7B,IAAMvsB,KAAK6F,MAAQuoB,EAAI9B,MACtC,CAEQggB,aAAap1B,GACjB,MAAMqV,EAAM/tB,KAAKguB,MAAMtV,EAAQlX,KAAK6F,OAC9BymB,EAASpV,EAAQqV,EAAMvsB,KAAK6F,MAElC,MAAO,CAAEymB,SAAQC,MACrB,E,kgBC9CG,IAAMogB,GAAN,MAUHjtC,YACsCktC,EACExB,EAC6ByB,EACbC,EACaC,EACNC,EACGC,EAClC7O,IAAmBv+B,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,uCAAAA,EAAAA,EAAAA,GAAA,8CAAAA,EAAAA,EAAAA,GAAA,8CAAAA,EAAAA,EAAAA,GAAA,gDAAAA,EAAAA,EAAAA,GAAA,mDAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,yBAjBT,CAAC,mBAAqB,kBAAoB,sBAAoBA,EAAAA,EAAAA,GAAA,sBAE/D,CACrCqtC,GAAI,CAAEzuC,EAAG,EAAGC,EAAG,GACfyuC,GAAI,CAAE1uC,EAAG,EAAGC,EAAG,MAClBmB,EAAAA,EAAAA,GAAA,wBAE4Co8B,GAAiB1nB,OAGxB,KAAAq4B,iBAAAA,EACE,KAAAxB,mBAAAA,EAC6B,KAAAyB,uBAAAA,EACb,KAAAC,8BAAAA,EACa,KAAAC,8BAAAA,EACN,KAAAC,gCAAAA,EACG,KAAAC,mCAAAA,EAClC,KAAA7O,QAAAA,EACxBp+B,KAAKotC,aACLptC,KAAKorC,mBAAmBn5B,OAAOjS,KAAKqtC,eAAeH,GAAGzuC,EAAGuB,KAAKqtC,eAAeH,GAAGxuC,EAAGsB,KAAKstC,mBAExFttC,KAAKorC,mBAAmBpB,aAAahqC,KAAKqtC,eAAeH,GAAIltC,KAAKqtC,eAAeF,GAAIntC,KAAKstC,kBAElG,CAEAC,UAAU5pB,GACN3jB,KAAKotC,aAAeptC,KAAKwtC,gBAAgB7pB,GAAW3jB,KAAKytC,gBAAgB9pB,EAC7E,CAEQ6pB,gBAAgB7pB,GACpB,MAAM+pB,EAAW3f,OAAOC,aAAahuB,KAAK4sC,iBAAiB1F,KAAKlnC,KAAKqtC,eAAeH,KAE9EhP,EAAsB,cAAZva,EACZ3jB,KAAK6sC,uBACD7sC,KAAKqtC,eAAeH,GACpBQ,EACA,IACA1tC,KAAK2tC,kBAAkB3tC,KAAK4tC,kBAC5B5tC,KAAK8sC,iCACT9sC,KAAK6sC,uBACD7sC,KAAKqtC,eAAeH,GACpBQ,EACA/pB,EACA3jB,KAAK4tC,iBACL5tC,KAAK8sC,iCAEb5O,EAAQM,QAEF7a,IAAYoK,OAAOC,aAAahuB,KAAK4sC,iBAAiB1F,KAAKlnC,KAAKqtC,eAAeH,MACrE,cAAZvpB,GAAwC,MAAb+pB,GAC3B1tC,KAAKo+B,QAAQH,KAAKC,EAE1B,CAEQuP,gBAAgB9pB,GACpB,MAAMlb,EAAYzI,KAAK6tC,gBAEjBH,EAAW5B,GAAQgC,aAAarlC,EAAU5C,MAAO4C,EAAU3C,QAAQ,IAAM,IAC/E,IAAK,IAAIpH,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAGA,GAAKsB,KAAKqtC,eAAeF,GAAGzuC,IAAKA,EACpE,IAAK,IAAID,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAGA,GAAKuB,KAAKqtC,eAAeF,GAAG1uC,IAAKA,EACpEivC,EAAS7c,IAAI,CAAEvE,OAAQ7tB,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAG8tB,IAAK7tB,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,GAAKsB,KAAK4sC,iBAAiB1F,KAAK,CAAEzoC,EAAGA,EAAGC,EAAGA,KAIxI,MAAMw/B,EAAsB,cAAZva,EACZ3jB,KAAK+sC,8BACD/sC,KAAKqtC,eACLK,EACA5B,GAAQgC,aAAarlC,EAAU5C,MAAO4C,EAAU3C,QAAQ,IAAM,IAAI+d,WAAW,KAC7E7jB,KAAK2tC,kBAAkB3tC,KAAK4tC,kBAC5B5tC,KAAKgtC,mCACThtC,KAAK+sC,8BACD/sC,KAAKqtC,eACLK,EACA5B,GAAQgC,aAAarlC,EAAU5C,MAAO4C,EAAU3C,QAAQ,IAAM6d,EAAQE,WAAW,KACjF7jB,KAAK4tC,iBACL5tC,KAAKgtC,mCAEb9O,EAAQM,QAEU,cAAZ7a,GAA2B+pB,EAASlB,OAAM/tC,GAAgC,MAA3BsvB,OAAOC,aAAavvB,MACrEivC,EAASlB,OAAM/tC,GAAKsvB,OAAOC,aAAavvB,KAAOklB,KAC/C3jB,KAAKo+B,QAAQH,KAAKC,EAE1B,CAEQyP,kBAAkBzT,GACtB,OAAQA,GACJ,KAAK+B,GAAiB34B,KAClB,OAAO24B,GAAiB1nB,MAC5B,KAAK0nB,GAAiB1nB,MAClB,OAAO0nB,GAAiB34B,KAC5B,KAAK24B,GAAiBlC,GAClB,OAAOkC,GAAiBjC,KAC5B,KAAKiC,GAAiBjC,KAClB,OAAOiC,GAAiBlC,GAEpC,CAEA9nB,OAAOsd,GACEvvB,KAAK+tC,gBAAgBxe,KAI1BvvB,KAAK2qC,WAEL3qC,KAAKqtC,eAAeH,GAAGzuC,EAAI8wB,EAAK9wB,EAChCuB,KAAKqtC,eAAeH,GAAGxuC,EAAI6wB,EAAK7wB,EAChCsB,KAAKqtC,eAAeF,GAAG1uC,EAAI8wB,EAAK9wB,EAChCuB,KAAKqtC,eAAeF,GAAGzuC,EAAI6wB,EAAK7wB,EAEhCsB,KAAKorC,mBAAmBn5B,OAAOjS,KAAKqtC,eAAeH,GAAGzuC,EAAGuB,KAAKqtC,eAAeH,GAAGxuC,EAAGsB,KAAKstC,mBAC5F,CAEAtD,aAAa5qC,EAAUC,GACnB,IAAMW,KAAK+tC,gBAAgB3uC,KAAOY,KAAK+tC,gBAAgB1uC,GACnD,OAGJW,KAAK2qC,WAEL,MAAMvrB,EAAajhB,EAAS+K,SAAS,CAAC9J,EAAIC,IACpC4qC,EAAS,CAAEiD,GAAI9tB,EAAW9gB,IAAK6uC,GAAI/tB,EAAW7gB,KAEpDyB,KAAKqtC,eAAeH,GAAK,IAAKjD,EAAOiD,IACrCltC,KAAKqtC,eAAeF,GAAK,IAAKlD,EAAOkD,IAErCntC,KAAKorC,mBAAmBpB,aAAaC,EAAOiD,GAAIjD,EAAOkD,GAAIntC,KAAKstC,kBACpE,CAEQS,gBAAgB5jC,GACpB,OAAOA,EAAM1L,GAAK,GAAK0L,EAAMzL,GAAK,GAAKyL,EAAM1L,EAAIuB,KAAKorC,mBAAmB5iC,UAAUyjB,SAAW9hB,EAAMzL,EAAIsB,KAAKorC,mBAAmB5iC,UAAU0jB,IAC9I,CAEQye,WACJ3qC,KAAKotC,aACDptC,KAAKorC,mBAAmBT,SAAS3qC,KAAKqtC,eAAeH,GAAGzuC,EAAGuB,KAAKqtC,eAAeH,GAAGxuC,GAClFsB,KAAKorC,mBAAmBR,eAAe5qC,KAAKqtC,eAAeH,GAAIltC,KAAKqtC,eAAeF,GAC3F,CAEA5oB,QACIvkB,KAAKorC,mBAAmBpB,aAAahqC,KAAKqtC,eAAeH,GAAIltC,KAAKqtC,eAAeF,GAAIntC,KAAKstC,kBAC9F,CAEA9oB,OACIxkB,KAAKorC,mBAAmBR,eAAe5qC,KAAKqtC,eAAeH,GAAIltC,KAAKqtC,eAAeF,GACvF,CAEAa,gBACI,IAAIC,EAAa,GACjB,IAAK,IAAIvvC,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAGA,GAAKsB,KAAKqtC,eAAeF,GAAGzuC,IAAKA,EAAG,CACvE,IAAK,IAAID,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAGA,GAAKuB,KAAKqtC,eAAeF,GAAG1uC,IAAKA,EACpEwvC,GAAclgB,OAAOC,aAAahuB,KAAK4sC,iBAAiB1F,KAAK,CAAEzoC,EAAGA,EAAGC,EAAGA,KAG5EuvC,GAAc,IAClB,CAEA,OAAOA,EAAWlqB,MAAM,GAAI,EAChC,CAEAmqB,iBAAiBD,GACb,MAAME,EAAcF,EAAWjkB,MAAM,SAErC,IAAIokB,EAAgB,EACpB,MAAMC,EAAiBF,EAAYnvC,OACnC,IAAK,IAAIN,EAAI,EAAGA,EAAIyvC,EAAYnvC,SAAUN,EAAG,CACzC,MAAM8K,EAAO2kC,EAAYzvC,GACrB8K,EAAKxK,OAASovC,IACdA,EAAgB5kC,EAAKxK,OAE7B,CAEA,IAAKgB,KAAK+tC,gBAAgB,CACtBtvC,EAAGuB,KAAKqtC,eAAeH,GAAGzuC,EAAI2vC,EAAgB,EAC9C1vC,EAAGsB,KAAKqtC,eAAeH,GAAGxuC,EAAI2vC,EAAiB,IAE/C,OAAO,EAGX,MAAMC,EAAWxC,GAAQgC,aAAaM,EAAeC,GAAgB,IAAM,KAC3E,IAAK,IAAI9hB,EAAM,EAAGA,EAAM4hB,EAAYnvC,SAAUutB,EAAK,CAC/C,MAAM/iB,EAAO2kC,EAAY5hB,GACzB,IAAK,IAAID,EAAS,EAAGA,EAAS9iB,EAAKxK,SAAUstB,EACzCgiB,EAASzd,IAAI,CAAEvE,SAAQC,OAAO/iB,EAAK8iB,GAAQzI,WAAW,GAE9D,CAEA,MAAM6pB,EAAW5B,GAAQgC,aAAaM,EAAeC,GAAgB,IAAM,IAC3E,IAAK,IAAI3vC,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAGA,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAI2vC,IAAkB3vC,EACpF,IAAK,IAAID,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAGA,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAI2vC,IAAiB3vC,EACnFivC,EAAS7c,IAAI,CAAEvE,OAAQ7tB,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAG8tB,IAAK7tB,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,GAAKsB,KAAK4sC,iBAAiB1F,KAAK,CAAEzoC,IAAGC,OAIlI,MAAMw/B,EAAUl+B,KAAK+sC,8BACjB/sC,KAAKqtC,eACLK,EACAY,EACAtuC,KAAK4tC,iBACL5tC,KAAKgtC,mCAQT,OANA9O,EAAQM,QAEH8P,EAAS7B,OAAOiB,IACjB1tC,KAAKo+B,QAAQH,KAAKC,IAGf,CACX,CAEA+M,QACI,MAAMyC,EAAW5B,GAAQgC,aAAa9tC,KAAK6tC,gBAAgBhoC,MAAO7F,KAAK6tC,gBAAgB/nC,QAAQ,IAAM,IACrG,IAAK,IAAIpH,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAGA,GAAKsB,KAAKqtC,eAAeF,GAAGzuC,IAAKA,EACpE,IAAK,IAAID,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAGA,GAAKuB,KAAKqtC,eAAeF,GAAG1uC,IAAKA,EACpEivC,EAAS7c,IAAI,CAAEvE,OAAQ7tB,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAG8tB,IAAK7tB,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,GAAKsB,KAAK4sC,iBAAiB1F,KAAK,CAAEzoC,IAAGC,OAIlI,MAAMw/B,EAAUl+B,KAAK+sC,8BACjB/sC,KAAKqtC,eACLK,EACA5B,GAAQgC,aAAa9tC,KAAK6tC,gBAAgBhoC,MAAO7F,KAAK6tC,gBAAgB/nC,QAAQ,IAAM,KACpF9F,KAAK4tC,iBACL5tC,KAAKitC,sCAET/O,EAAQM,QAEHkP,EAASlB,OAAM/tC,GAAW,KAANA,KACrBuB,KAAKo+B,QAAQH,KAAKC,EAE1B,CAEIkP,mBACA,OAAOptC,KAAKqtC,eAAeH,GAAGzuC,IAAMuB,KAAKqtC,eAAeF,GAAG1uC,GACvDuB,KAAKqtC,eAAeH,GAAGxuC,IAAMsB,KAAKqtC,eAAeF,GAAGzuC,CAC5D,CAEImvC,sBACA,MAAO,CACHhoC,MAAO7F,KAAKqtC,eAAeF,GAAG1uC,EAAIuB,KAAKqtC,eAAeH,GAAGzuC,EAAI,EAC7DqH,OAAQ9F,KAAKqtC,eAAeF,GAAGzuC,EAAIsB,KAAKqtC,eAAeH,GAAGxuC,EAAI,EAEtE,CAEIgpC,aACA,OAAO1nC,KAAKqtC,cAChB,CAEIpR,uBACA,OAAOj8B,KAAK4tC,gBAChB,CAEI3R,qBAAiB/B,GACjBl6B,KAAK4tC,iBAAmB1T,CAC5B,GAhQSyS,GAAchpC,GAAA,EAD1BC,EAAAA,EAAAA,KAYQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KACP9gC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6kC,KACP9kC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpB,EAAyBC,yBAChCkB,GAAA,GAAAC,EAAAA,EAAAA,GAAOjB,EAA0BC,WACjCe,GAAA,GAAAC,EAAAA,EAAAA,GAAOpB,EAAyBE,yBAChCiB,GAAA,GAAAC,EAAAA,EAAAA,GAAOf,EAAiCD,WACxCe,GAAA,GAAAC,EAAAA,EAAAA,GAAOf,EAAiCC,cACxCa,GAAA,GAAAC,EAAAA,EAAAA,GAAO+3B,KAAW,wBAPiD,oBAOjD,GAPiD,qBAAhB8I,IAAAA,IAAgB3gC,GAAAC,OACM,oBADN6E,GACM,qBAAlB6/B,IAAAA,IAAkB7/B,GAAA7E,OAAAA,OAE+B,oBAF/B6c,GAEmB,qBAAVsrB,GAAAA,GAAAA,GAAAA,EAAWC,aAAWvrB,GAAA7c,OAAAA,OAES,oBAFT8c,GAEH,qBAAVqrB,GAAAA,GAAAA,GAAAA,EAAWC,aAAWtrB,GAAA9c,OACM,oBADNgd,GACN,qBAAVmrB,GAAAA,GAAAA,GAAAA,EAAWC,aAAWprB,GAAAhd,OACzE,oBADyE8wB,GACzE,qBAAV8G,IAAAA,IAAU9G,GAAA9wB,UAlB1CumC,IAmQbvnC,EAAUiB,KAAKsmC,IAAgBrmC,SAASC,mB,eCjRlC,MAAOkoC,GACTrwC,iBAAiB0I,EAAoBQ,EAAsBonC,GACvD,MAAMC,EAAMjlC,EAAAA,GAAgB5C,EAASrI,EAAGqI,EAASpI,EAAGoI,EAASG,GAEvD2nC,EAAIC,GAAAA,GACN,EAAIF,EAAI,GAAKD,EAAS7oC,MAAQ,EAC9B,EAAI,EAAI8oC,EAAI,GAAKD,EAAS5oC,OAC1B,EAAI6oC,EAAI,GAAK,EACb,GAGEG,EAAiBpoC,EAAAA,GAAYA,EAAAA,KAAeY,GAE5C8mB,EAAMygB,GAAAA,GAAmBA,GAAAA,KAAeD,EAAGE,GAOjD,OALA1gB,EAAI,GAAK,EAAIA,EAAI,GACjBA,EAAI,IAAMA,EAAI,GACdA,EAAI,IAAMA,EAAI,GACdA,EAAI,IAAMA,EAAI,GAEPA,CACX,CAEAhwB,yBAAyB2wC,EAAgBxlC,EAAcjC,EAAsBonC,GACzE,MAAMM,EAAWP,GAAOQ,UAAU,CAAExwC,EAAG,EAAGC,EAAG,EAAGuI,EAAG,GAAKK,EAAgBonC,GAClEQ,EAAUT,GAAOQ,UAAU,CAAExwC,EAAG,EAAGC,EAAG,EAAGuI,EAAG,GAAKK,EAAgBonC,GAEjES,EAAgB7lC,GAAa8lC,UAC/B7lC,EACA,CAAEI,EAAG,CAACqlC,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAAKplC,EAAG,CAACslC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,MAEhFG,EAAWZ,GAAOQ,UAAU,CAAExwC,EAAGswC,EAAStwC,EAAGC,EAAGqwC,EAASrwC,EAAGuI,EAAG,GAAKK,EAAgBonC,GACpFY,EAAUb,GAAOQ,UAAU,CAAExwC,EAAGswC,EAAStwC,EAAGC,EAAGqwC,EAASrwC,EAAGuI,EAAG,GAAKK,EAAgBonC,GAEnFa,EAAgBjmC,GAAa8lC,UAC/B7lC,EACA,CAAEI,EAAG,CAAC0lC,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAAKzlC,EAAG,CAAC0lC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,MAEhFnoC,EAAQ1G,EAAAA,GACVA,EAAAA,KACAA,EAAAA,GAAgB0uC,EAAc,GAAIA,EAAc,IAChD1uC,EAAAA,GAAgB8uC,EAAc,GAAIA,EAAc,KAEpD,MAAO,CAAE9wC,EAAG0I,EAAM,GAAIzI,EAAGyI,EAAM,GACnC,E,sBCnCQ80B,G,6eAAZ,SAAYA,GAAmBA,EAAAA,EAAA,kBAAMA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,oBAAOA,EAAAA,EAAA,iBAAM,EAAtD,CAAYA,KAAAA,GAAgB,KAY5B,MAAMuT,GACF9vC,YAAoB+vC,IAA4B5vC,EAAAA,EAAAA,GAAA,4BAA5B,KAAA4vC,aAAAA,CAAgC,CAEpD9pB,MAAM4J,GAGF,OAFAvvB,KAAKyvC,aAAax9B,OAAOsd,GAElBvvB,IACX,EAGJ,MAAM0vC,GAGFhwC,YACY+vC,IAA4B5vC,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,0BAA5B,KAAA4vC,aAAAA,EACRzvC,KAAK2vC,WAAa,IAAKF,EAAa/H,OAAOwF,GAC/C,CAEAvnB,MAAM4J,GAGF,OAFAvvB,KAAKyvC,aAAazF,aAAahqC,KAAK2vC,WAAYpgB,GAEzC,IAAIigB,GAAmBxvC,KAAKyvC,aACvC,EAIG,IAAMG,GAAN,MASHlwC,YAC0D6F,EACtBsqC,EACAJ,EACIrE,EACFwB,EACQkD,IAAwCjwC,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,+BAdpD,IAAI+L,KAAwC/L,EAAAA,EAAAA,GAAA,iCAE1C,IAAI+L,KAA4B/L,EAAAA,EAAAA,GAAA,iBAE3B,IAAI8nC,KAAgB9nC,EAAAA,EAAAA,GAAA,6BAKH,KAAA0F,GAAAA,EACtB,KAAAsqC,QAAAA,EACA,KAAAJ,aAAAA,EACI,KAAArE,mBAAAA,EACF,KAAAwB,iBAAAA,EACQ,KAAAkD,eAAAA,EAC1C9vC,KAAK+vC,cAAgB,IAAIP,GAAmBxvC,KAAKyvC,cACjDzvC,KAAK6vC,QAAQvV,aAAaa,iBAAiBjzB,QAAO,IAAMlI,KAAKgwC,wBAC7DhwC,KAAK6vC,QAAQvV,aAAac,cAAclzB,QAAO,IAAMlI,KAAKiwC,UAC1DjwC,KAAK6vC,QAAQvV,aAAae,eAAenzB,QAAO,IAAMlI,KAAKkwC,yBAC3DlwC,KAAK6vC,QAAQvV,aAAagB,gBAAgBpzB,QAAO,IAAMlI,KAAKmwC,YAC5DnwC,KAAK6vC,QAAQvV,aAAaiB,iBAAiBrzB,QAAO,IAAMlI,KAAKowC,YACjE,CAEI7T,8BACA,OAAOv8B,KAAKw8B,uBAChB,CAEI6T,iCACA,OAAOrwC,KAAKswC,yBAChB,CAEIC,4BACA,OAAOvwC,KAAKyvC,aAAaxT,gBAC7B,CAEIsU,0BAAsBrW,GACtBl6B,KAAKyvC,aAAaxT,iBAAmB/B,EAErCl6B,KAAKw8B,wBAAwBlwB,OAAO4tB,EACxC,CAEAsW,cAAcC,GACVzwC,KAAKywC,UAAU7I,SAEf5nC,KAAKywC,UAAYA,EACjBzwC,KAAKywC,UAAUppC,eAAiBrH,KAAKorC,mBAAmB/jC,cAC5D,CAEAqpC,kBACI1wC,KAAKywC,UAAU7I,SAEf5nC,KAAKywC,UAAY,IAAI9I,EACzB,CAEAgJ,SAASxlB,EAAgBmB,EAAgBC,GACrCvsB,KAAK4sC,iBAAiBxF,MAAM,CAAE3oC,EAAG6tB,EAAQ5tB,EAAG6tB,GAAOpB,EAAOtH,WAAW,IACrE7jB,KAAKorC,mBAAmBrnC,OAAOonB,EAAQmB,EAAQC,EACnD,CAEAta,OAAOqa,EAAgBC,EAAatX,GAChCjV,KAAKorC,mBAAmBn5B,OAAOqa,EAAQC,EAAKtX,EAChD,CAEA+0B,aAAa5qC,EAAUC,EAAUuiB,GAC7B5hB,KAAKorC,mBAAmBpB,aAAa5qC,EAAIC,EAAIuiB,EACjD,CAEA+oB,SAASre,EAAgBC,GACrBvsB,KAAKorC,mBAAmBT,SAASre,EAAQC,EAC7C,CAEAqe,eAAexrC,EAAUC,GACrBW,KAAKorC,mBAAmBR,eAAexrC,EAAIC,EAC/C,CAEAisC,QAAQhf,EAAgBC,EAAavX,EAAclO,GAC/C,OAAO9G,KAAK8vC,eAAexE,QAAQhf,EAAQC,EAAKvX,EAAMlO,EAC1D,CAEA8pC,kBACI5wC,KAAK8vC,eAAejE,YACxB,CAEAlmB,MAAM5lB,GACF,MAAM8wC,EAAUpC,GAAOQ,UAAU,CAAExwC,EAAGsB,EAAEM,QAAS3B,EAAGqB,EAAEO,QAAS2G,EAAG,GAAKjH,KAAKqH,eAAgBrH,KAAKuF,GAAGK,QAC9FkrC,EAASrC,GAAOQ,UAAU,CAAExwC,EAAGsB,EAAEM,QAAS3B,EAAGqB,EAAEO,QAAS2G,EAAG,GAAKjH,KAAKqH,eAAgBrH,KAAKuF,GAAGK,QAE7FqE,EAAeX,GAAa8lC,UAC9B,CAAEzlC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvB,CAAEH,EAAG,CAACknC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAAKjnC,EAAG,CAACknC,EAAO,GAAIA,EAAO,GAAIA,EAAO,MAE1EryC,EAAID,KAAKguB,MAAMviB,EAAa,GAAKjK,KAAKorC,mBAAmB5C,UACzD9pC,EAAIsB,KAAKorC,mBAAmB5iC,UAAU0jB,KAAO1tB,KAAKguB,MAAMviB,EAAa,GAAKjK,KAAKorC,mBAAmB5C,UAAY,EAE9GuI,EAAe/wC,KAAK+vC,cAAcpqB,MAAM,CAAElnB,IAAGC,MAE/CqyC,IAAiB/wC,KAAK+vC,gBACtB/vC,KAAK+vC,cAAgBgB,EAE7B,CAEAxsB,QACIvkB,KAAKyvC,aAAalrB,OACtB,CAEAC,OACIxkB,KAAKyvC,aAAajrB,MACtB,CAEAwsB,gBAAgB/xB,GACZjf,KAAKyvC,aAAax9B,OAAOgN,GAEpBjf,KAAKixC,uBACNjxC,KAAKswC,0BAA0BhkC,QAEvC,CAEA4kC,kBAAkB9xC,EAAUC,GACxBW,KAAKyvC,aAAazF,aAAa5qC,EAAIC,EACvC,CAEAkuC,UAAUxtC,GACNC,KAAKyvC,aAAalC,UAAUxtC,EAAE6jB,IAClC,CAEAqnB,QACIjrC,KAAKorC,mBAAmBH,OAC5B,CAEA/sB,OACIle,KAAKorC,mBAAmBltB,OAExBle,KAAKywC,UAAUvyB,MACnB,CAEI1V,gBACA,OAAOxI,KAAKorC,mBAAmB5iC,SACnC,CAEInB,qBACA,OAAOrH,KAAKorC,mBAAmB/jC,cACnC,CAEIA,mBAAe8pC,GACfnxC,KAAKorC,mBAAmB/jC,eAAiB8pC,EACzCnxC,KAAKywC,UAAUppC,eAAiB8pC,CACpC,CAEIC,mBACA,OAAOpxC,KAAKyvC,aAAa/H,OAAOwF,EACpC,CAEImE,uBACA,MAAMzU,EAAW,CACb58B,KAAKoxC,aAAa3yC,EAAIuB,KAAKorC,mBAAmB5C,UAC7CxoC,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOlsB,KAAKoxC,aAAa1yC,EAAI,GAAKsB,KAAKorC,mBAAmB5C,SAC7F,KAEE3L,EAAW,EACZ78B,KAAKoxC,aAAa3yC,EAAI,GAAKuB,KAAKorC,mBAAmB5C,UACnDxoC,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOlsB,KAAKoxC,aAAa1yC,GAAKsB,KAAKorC,mBAAmB5C,SACzF,KAEJ,MAAO,CAAE5L,KAAIC,KACjB,CAEIoU,4BACA,MAAMrU,EAAW,CACb58B,KAAKyvC,aAAa/H,OAAOwF,GAAGzuC,EAAIuB,KAAKorC,mBAAmB5C,UACvDxoC,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOlsB,KAAKyvC,aAAa/H,OAAOwF,GAAGxuC,EAAI,GAAKsB,KAAKorC,mBAAmB5C,SACvG,KAEE8I,EAAQ5nC,EAAAA,GAAmBA,EAAAA,KAAekzB,EAAI58B,KAAKqH,gBAEzD,GAAIiqC,EAAM,IAAM,GAAKA,EAAM,IAAM,EAC7B,OAAO,EAGX,MAAMzU,EAAW,EACZ78B,KAAKyvC,aAAa/H,OAAOwF,GAAGzuC,EAAI,GAAKuB,KAAKorC,mBAAmB5C,UAC7DxoC,KAAKorC,mBAAmB5iC,UAAU0jB,KAAOlsB,KAAKyvC,aAAa/H,OAAOwF,GAAGxuC,GAAKsB,KAAKorC,mBAAmB5C,SACnG,KAEE+I,EAAQ7nC,EAAAA,GAAmBA,EAAAA,KAAemzB,EAAI78B,KAAKqH,gBAEzD,QAAIkqC,EAAM,GAAK,GAAKA,EAAM,GAAK,EAKnC,CAEI/I,eACA,OAAOxoC,KAAKorC,mBAAmB5C,QACnC,CAEQwH,sBACJhwC,KAAK+vC,cAAgB,IAAIL,GAAkB1vC,KAAKyvC,aACpD,CAEQQ,QACJvK,UAAU8L,UAAUC,UAAUzxC,KAAKyvC,aAAazB,iBAEhDhuC,KAAKyvC,aAAaxE,OACtB,CAEQiF,uBACJxK,UAAU8L,UAAUC,UAAUzxC,KAAKyvC,aAAazB,gBACpD,CAEQthC,gBACJ,MAAMu/B,QAAalgB,GACd6F,IAAI/B,GAAS6V,UAAU8L,UAAW,aAClC5lB,WAAW,IAEI,IAAhBqgB,EAAKjtC,SAIJgB,KAAKyvC,aAAavB,iBAAiBjC,IACpCjsC,KAAK6vC,QAAQvJ,SAASrF,YAAY,2CAE1C,CAEQmP,WACJpwC,KAAKyvC,aAAaxE,OACtB,GAnOS2E,GAAiBjsC,GAAA,EAD7BC,EAAAA,EAAAA,KAWQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAO0mC,KACP3mC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6kC,KACP9kC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KACP9gC,GAAA,GAAAC,EAAAA,EAAAA,GAAOklC,KAAyB,wBAL+C,oBAK/C,GAL+C,qBAAtBjlC,wBAAAA,wBAAsBC,GAAAC,OACzB,oBADyB6E,GACzB,qBAAd26B,IAAAA,IAAc36B,GAAA7E,OACK,oBADL6c,GACK,qBAAd0pB,IAAAA,IAAc1pB,GAAA7c,OACc,oBADd8c,GACc,qBAAlB4nB,IAAAA,IAAkB5nB,GAAA9c,OACN,oBADMgd,GACN,qBAAhB0jB,IAAAA,IAAgB1jB,GAAAhd,OACc,oBADd8wB,GACc,qBAAxBiU,IAAAA,IAAwBjU,GAAA9wB,UAf7EwpC,IAsObxqC,EAAUiB,KAAKupC,IAAmBtpC,SAASC,mBC/RrC,MAAOmrC,GASXhyC,YACUiyC,EACAC,EACRC,IAA2BhyC,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,mBAXPyL,GAAYiJ,QAAK1U,EAAAA,EAAAA,GAAA,kBACT,CAAEpB,EAAG,EAAGC,EAAG,KAAGmB,EAAAA,EAAAA,GAAA,aAClB,KAAEA,EAAAA,EAAAA,GAAA,qBACL,IAAKA,EAAAA,EAAAA,GAAA,iBACT,IAAKA,EAAAA,EAAAA,GAAA,sBAEgBuW,MAAMC,KAAK,CAAErX,OAAQ,OAGnD,KAAA2yC,OAAAA,EACA,KAAAC,GAAAA,EAGRC,EAAa3vC,SACX4vC,GAAS9xC,KAAK+xC,eAAeD,EAAKE,KAAKnuB,WAAW,IAAMiuB,GAE5D,CAEIrQ,YACF,OAAOzhC,KAAK0hC,KACd,CAEIuQ,SACF,MAAO,CAAEC,SAAUlyC,KAAKmyC,WAAYrY,UAAW95B,KAAKoyC,YACtD,CAEIC,0BACF,OAAOtkB,OAAOC,aAAahuB,KAAK2xC,OAAOzK,KAAKlnC,KAAKmyC,YACnD,CAEAG,UAAUj0C,GACR2B,KAAK0hC,MAAMr5B,KAAKhK,EAClB,CAEAk0C,WACE,GAA0B,IAAtBvyC,KAAK0hC,MAAM1iC,OACb,OAAO,EACF,CACL,MAAMwzC,EAAMxyC,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,GAI3C,OAFAgB,KAAK0hC,MAAM+Q,MAEJD,CACT,CACF,CAEAE,iBACM1yC,KAAK0hC,MAAM1iC,QAAU,EACvBgB,KAAK0hC,MAAMr5B,KAAKrI,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,IAE/CgB,KAAK0hC,MAAMr5B,KAAK,EAAG,EAEvB,CAEAsqC,YACE,GAAI3yC,KAAK0hC,MAAM1iC,QAAU,EAAG,CAC1B,MAAM4zC,EAAO5yC,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,GAC5CgB,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,GAAKgB,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,GACnEgB,KAAK0hC,MAAM1hC,KAAK0hC,MAAM1iC,OAAS,GAAK4zC,CACtC,MACE5yC,KAAK0hC,MAAMr5B,QACN+N,MAAMC,KAAK,CAAErX,OAAQ,EAAIgB,KAAK0hC,MAAM1iC,SAAU,IAAM,IAG7D,CAEAsM,YAAYunC,GACV7yC,KAAKoyC,YAAcS,CACrB,CAEAC,cACE,MAAMC,EAAc/yC,KAAK2xC,OAAOzK,KAAKlnC,KAAKmyC,YAE1C,GAAInyC,KAAKgzC,cAAgBD,IAAgB,IAAIlvB,WAAW,GACtD7jB,KAAK0hC,MAAMr5B,KAAK0qC,OACX,KAAI/yC,KAAKizC,iBAAiBF,GAG/B,MAAM,IAAI7nC,GAA4BlL,KAAKmyC,WAAYY,EAAahlB,OAAOC,aAAa+kB,IAFxF/yC,KAAK+xC,eAAegB,GAAa9Z,QAAQj5B,KAG3C,CAEAA,KAAKkzC,UACP,CAEAA,WACElzC,KAAKmyC,WAAanyC,KAAK2xC,OAAOlK,mBAAmB0L,KAC/CnzC,KAAKmyC,WACLnyC,KAAKoyC,YAET,CAEAgB,mBACEpzC,KAAKgzC,cAAgBhzC,KAAKgzC,YAC5B,CAEAK,WAAWlM,GACT,OAAOnnC,KAAK2xC,OAAOzK,KAAKC,EAC1B,CAEAmM,YAAYnM,EAAc9oC,GACxB2B,KAAK2xC,OAAOvK,MAAMD,EAAK9oC,EACzB,CAEAk1C,QAAQpoB,GACNnrB,KAAK4xC,GAAG4B,YAAYroB,EACtB,CAEAsoB,gBACE,OAAOzzC,KAAK4xC,GAAG8B,oBACjB,CAEAC,aACE,OAAO3zC,KAAK4xC,GAAGgC,iBACjB,CAEAC,OACE7zC,KAAK8zC,UAAW,CAClB,CAEIC,eACF,OAAO/zC,KAAK8zC,QACd,CAEQb,iBAAiBF,GACvB,YAA4ChsC,IAArC/G,KAAK+xC,eAAegB,EAC7B,EChII,MAAO/lC,GACPglC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,UAAU0B,EAAIzB,WAAayB,EAAIzB,WACrC,ECPI,MAAO0B,GACPjC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAId,UACN,ECPI,MAAOgB,GACPlC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACN,MAAMrqC,EAAIqqC,EAAIzB,WACR3oC,EAAIoqC,EAAIzB,WAEdyB,EAAI1B,UAAU9zC,KAAK21C,MAAMvqC,EAAID,GAC/B,ECVI,MAAOyqC,GACPpC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAIH,MACN,ECPI,MAAOQ,GACPrC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,YAAY0B,EAAIzB,WAAayB,EAAIzB,YACvC,ECPI,MAAO+B,GACPtC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YACiB,IAAnB0oC,EAAIzB,WAAmBjnC,GAAYiJ,MAAQjJ,GAAYhI,KAE3D,ECTI,MAAOixC,GACPvC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,UAAU0B,EAAIP,gBAAgB5vB,WAAW,GAC/C,ECPI,MAAO2wB,GACPxC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,UAAU0B,EAAIL,aACpB,ECPI,MAAOc,GACPzC,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACN,MAAMt1C,EAAIs1C,EAAIzB,WACR9zC,EAAIu1C,EAAIzB,WAEdyB,EAAI1B,UAAU0B,EAAIX,WAAW,CAAE50C,EAAGA,EAAGC,EAAGA,IAC1C,ECVI,MAAOg2C,GACP1C,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACN,MAAMt1C,EAAIs1C,EAAIzB,WACR9zC,EAAIu1C,EAAIzB,WACRl0C,EAAQ21C,EAAIzB,WAElByB,EAAIV,YAAY,CAAE70C,EAAGA,EAAGC,EAAGA,GAAKL,EAClC,ECXI,MAAOs2C,GACP3C,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACN,MAAMrqC,EAAIqqC,EAAIzB,WACR3oC,EAAIoqC,EAAIzB,WAEdyB,EAAI1B,UAAU1oC,EAAID,EACpB,ECVI,MAAOirC,GACP5C,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,UAAU0B,EAAIzB,WAAayB,EAAIzB,WACrC,ECPI,MAAOsC,GACP7C,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1B,YAA+B,IAAnB0B,EAAIzB,YACtB,ECPI,MAAOuC,GACP9C,WACF,MAAO,GACT,CACA/Y,QAAQ8b,GAAkB,ECJtB,MAAOC,GACPhD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YAAYA,GAAY0uB,KAC9B,ECPI,MAAOib,GACPjD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YAAYA,GAAYhI,KAC9B,ECPI,MAAO4xC,GACPlD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YACF9M,KAAKguB,MAAOhuB,KAAK22C,SAAW/uC,OAAO2P,KAAKzK,IAAatM,QAAW,GAEpE,ECTI,MAAOo2C,GACPpD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YAAYA,GAAYiJ,MAC9B,ECPI,MAAO8gC,GACPrD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YAAYA,GAAYyuB,GAC9B,ECPI,MAAOwY,GACPP,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAIzB,UACN,ECPI,MAAO+C,GACPtD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAIT,QAAQxlB,OAAOC,aAAagmB,EAAIzB,YACtC,ECPI,MAAOgD,GACPvD,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAIT,QAAQS,EAAIzB,WAAW/P,WAAa,IAC1C,ECPI,MAAOkQ,GACPV,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAItB,gBACN,ECPI,MAAO8C,GACX91C,YAAoB+1C,IAAa51C,EAAAA,EAAAA,GAAA,qBAAb,KAAA41C,MAAAA,CAAgB,CAEhCzD,WACF,OAAOhyC,KAAKy1C,MAAMjT,UACpB,CAEAvJ,QAAQ+a,GACNA,EAAI1B,UAAUtyC,KAAKy1C,MACrB,ECTI,MAAO9C,GACPX,WACF,MAAO,IACT,CAEA/Y,QAAQ+a,GACNA,EAAIrB,WACN,ECPI,MAAO+C,GACP1D,WACF,MAAO,GACT,CACA/Y,QAAQ+a,GACN,MAAMrqC,EAAIqqC,EAAIzB,WACR3oC,EAAIoqC,EAAIzB,WACdyB,EAAI1B,UAAU1oC,EAAID,EACpB,ECRI,MAAOgsC,GACP3D,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAIZ,kBACN,ECPI,MAAOwC,GACP5D,WACF,MAAO,GACT,CAEA/Y,QAAQ+a,GACNA,EAAI1oC,YAA+B,IAAnB0oC,EAAIzB,WAAmBjnC,GAAY0uB,KAAO1uB,GAAYyuB,GACxE,ECXI,MAAO8b,GAAMn2C,eAAAG,EAAAA,EAAAA,GAAA,aACS,KAAEA,EAAAA,EAAAA,GAAA,cAED,GAAE,CAE7Bi2C,WAAW7J,GACTjsC,KAAK+1C,MAAM1tC,QAAQ4jC,EACrB,CAEAyH,qBACE,GAA0B,IAAtB1zC,KAAK+1C,MAAM/2C,OACb,MAAM,IAAIC,MAAM,+BAGlB,OAAOe,KAAK+1C,MAAM1T,OACpB,CAEAuR,kBACE,IAAIoC,EAAY,EAChB,IACE,IAAI9rB,EAAOlqB,KAAK+1C,MAAMC,GACtBA,EAAYh2C,KAAK+1C,MAAM/2C,QAAUkrB,GAAQ,KAAOA,GAAQ,MACtD8rB,GAEJ,GAAkB,IAAdA,EACF,MAAM,IAAI/2C,MAAM,sCAGlB,OAAOL,OAAOq3C,SAASj2C,KAAK+1C,MAAM5pC,OAAO,EAAG6pC,GAAW3V,KAAK,IAC9D,CAEI6V,eACF,OAAOl2C,KAAK+1C,MAAM/2C,OAAS,CAC7B,CAEAw0C,YAAYvH,GACVjsC,KAAKm2C,OAAO9tC,QAAQ4jC,EACtB,CAEAmK,aACE,GAA2B,IAAvBp2C,KAAKm2C,OAAOn3C,OACd,MAAM,IAAIC,MAAM,+BAGlB,OAAOe,KAAKm2C,OAAO9T,OACrB,CAEIgU,gBACF,OAAOr2C,KAAKm2C,OAAOn3C,OAAS,CAC9B,ECPF,MAAMs3C,GACJ52C,YACUmnB,EACA0vB,IAAmC12C,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,2BADnC,KAAAgnB,OAAAA,EACA,KAAA0vB,YAAAA,CAAuC,CAE7CvE,WACF,OAAOhyC,KAAK6mB,OAAOmrB,IACrB,CAEA/Y,QAAQ+a,GACN,MAAO31C,EAAOI,EAAGC,GAAKs1C,EAAIvS,MAAM1d,OAAO,GAEvC/jB,KAAKu2C,YAAY,CAAE93C,EAAGA,EAAGC,EAAGA,GAAKL,GAEjC2B,KAAK6mB,OAAOoS,QAAQ+a,EACtB,EAGI,MAAOwC,GASX92C,YAAoB+2C,EAAkC9E,IAAc9xC,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,oBAAAA,EAAAA,EAAAA,GAAA,4BAJrC,IAACA,EAAAA,EAAAA,GAAA,+BAE4B,IAExC,KAAA42C,YAAAA,EAAkC,KAAA9E,OAAAA,EACpD3xC,KAAK4xC,GAAK,IAAIiE,GACd71C,KAAKg0C,IAAM,IAAItC,GAAQ1xC,KAAK2xC,OAAQ3xC,KAAK4xC,GAAI,CAC3C,IAAI5kC,GACJ,IAAI0oC,GACJ,IAAId,GACJ,IAAIV,GACJ,IAAIS,GACJ,IAAIE,GACJ,IAAIR,GACJ,IAAIe,GACJ,IAAIH,GACJ,IAAID,GACJ,IAAIK,GACJ,IAAIH,GACJ,IAAIZ,GACJ,IAAIsB,GACJ,IAAID,GACJ,IAAIjD,GACJ,IAAIC,GACJ,IAAIJ,GACJ,IAAIgD,GACJ,IAAID,GACJ,IAAIrB,GACJ,IAAIqC,GACF,IAAI5B,IACJ,CAACvN,EAAc9oC,IAAkB2B,KAAK02C,cAAcvP,EAAK9oC,KAC3D,IAAIo2C,GACJ,IAAID,GACJ,IAAID,GACJ,IAAIH,GACJ,IAAIU,MACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGryC,KAAIqH,GAAK,IAAI0rC,GAAe1rC,MAElE,CAEA6sC,eAAeC,GACb,GAAI52C,KAAK62C,qBAAsB,CAC7B,MAAMC,EAAqBN,GAAQO,sBAAsBH,IAGvDE,EAAmBrxC,MAAQzF,KAAKy2C,YAAYhxC,OAC5CqxC,EAAmBpxC,OAAS1F,KAAKy2C,YAAY/wC,SAE7C1F,KAAK2xC,OAAOpqC,OAAOuvC,EAEvB,CAEA,MAAM3P,EAAe,CAAE1oC,EAAG,EAAGC,EAAG,GAEhC,IAAK,MAAMysB,KAAUyrB,EACJ,OAAXzrB,GACFgc,EAAI1oC,EAAI,IACN0oC,EAAIzoC,IAENsB,KAAK2xC,OAAOvK,MAAMD,EAAKhc,EAAOtH,WAAW,MACvCsjB,EAAI1oC,EAGZ,CAEAu4C,SAASjB,GACP/1C,KAAK4xC,GAAGkE,WAAWC,EACrB,CAMAkB,MACE,OAAQj3C,KAAKg0C,IAAID,SACf/zC,KAAKg0C,IAAIlB,aAEb,CAQAoE,OAAOC,GACL,MAAMC,EAAYl3C,KAAKC,MACjBk3C,EAAkC,IAExC,IAAKr3C,KAAKs3C,qBAAuB,GAC9Bt3C,KAAKg0C,IAAID,WAAa/zC,KAAKs3C,qBAAuBD,IAAoC,GAAKn3C,KAAKC,MAAQi3C,EAAYD,KACnHn3C,KAAKs3C,qBACPt3C,KAAKg0C,IAAIlB,cAGX,OAAO9yC,KAAK+zC,QACd,CAEAwD,UACEv3C,KAAKg0C,IAAIlB,aACX,CAEA0E,gBACE,IAAIrB,EAAS,GAEb,MAAOn2C,KAAK4xC,GAAGyE,UACbF,GAAUn2C,KAAK4xC,GAAGwE,aAGpB,OAAOD,CACT,CAEAsB,mBAAmBC,GACjB,IAAIvB,EAAS,GAEb,IAAK,IAAIwB,EAAS,EAAG33C,KAAK4xC,GAAGyE,WAAasB,EAASD,IAAaC,EAC9DxB,GAAUn2C,KAAK4xC,GAAGwE,aAGpB,OAAOD,CACT,CAEAyB,eAAe9tC,GACbA,EAAE+tC,UAAU73C,KAAKg0C,IACnB,CAEA8D,eAAeC,GACbA,EAASF,UAAU73C,KAAKg0C,IAC1B,CAEAgE,0BAA0BzB,GAGxB,OAFAv2C,KAAKi4C,wBAAwB5vC,KAAKkuC,GAE3B,KACL,MAAM2B,EAAQl4C,KAAKi4C,wBAAwBnkC,QAAQyiC,IAEpC,IAAX2B,GACFl4C,KAAKi4C,wBAAwB9rC,OAAO+rC,EAAO,EAC7C,CAEJ,CAEQxB,cAAcvP,EAAc9oC,GAClC2B,KAAKi4C,wBAAwB/1C,SAAQupB,GAAMA,EAAG0b,EAAK9oC,IACrD,CAEI85C,sBACF,OAAOn4C,KAAKg0C,IAAI3B,mBAClB,CAEI0B,eACF,OAAO/zC,KAAKg0C,IAAID,QAClB,CAEIqE,2BACF,OAAOp4C,KAAKs3C,oBACd,CAEIe,SACF,OAAOr4C,KAAKg0C,IAAI/B,GAAGC,QACrB,CAEY2E,2BACV,OACE72C,KAAKy2C,YAAYhxC,QAAU7G,OAAOkJ,mBAClC9H,KAAKy2C,YAAY/wC,SAAW9G,OAAOkJ,iBAEvC,CAEQ1J,6BAA6Bw4C,GACnC,IAAI0B,EAAe,EACfC,EAAkB,EAClBC,EAAY,EAEhB,IAAK,MAAMzF,KAAe6D,EACJ,OAAhB7D,GACEuF,EAAeE,IACjBF,EAAeE,GAGjBA,EAAY,IACVD,KAEAC,EAIN,MAAO,CAAE/yC,MAAO6yC,EAAc5yC,OAAQ6yC,EACxC,ECzOK,IAAKE,IAAZ,SAAYA,GACVA,EAAAA,EAAA,kBACAA,EAAAA,EAAA,4BACAA,EAAAA,EAAA,wBACAA,EAAAA,EAAA,kCACAA,EAAAA,EAAA,mBACD,EAND,CAAYA,KAAAA,GAAmB,KAazB,MAAOvnC,GAAQxR,eAAAG,EAAAA,EAAAA,GAAA,cACU,OAAIA,EAAAA,EAAAA,GAAA,qBAET,IAAI6Y,MAAiD7Y,EAAAA,EAAAA,GAAA,gBACnC,KAAEA,EAAAA,EAAAA,GAAA,gBAE1B,EAAK,CAEvBg4C,UAAU7D,GACRh0C,KAAK2N,OAASqmC,CAChB,CAEID,eACF,OAAO/zC,KAAK2N,QAAQomC,WAAY,CAClC,CAEAwD,UACE,IAAKv3C,KAAK2N,QAAQomC,SAAU,CAC1B,GAAI/zC,KAAK04C,QACP14C,KAAK04C,SAAU,MACV,CACL,MAAMC,EAAY34C,KAAK44C,mBAEvB,GAAID,EAAU35C,OAAS,EAErB,OADAgB,KAAK04C,SAAU,EACRC,CAEX,CAEA34C,KAAK2N,QAAQmlC,aACf,CAEA,MAAO,EACT,CAEAoE,OAAOC,GACL,MAAMC,EAAYl3C,KAAKC,MACjBk3C,EAAkC,IAExC,IAAIwB,EAAqC,GAEzC,IAAK,IAAIvB,EAAuB,GAC7Bt3C,KAAK2N,QAAQomC,UACS,IAAvB8E,EAAY75C,SACXs4C,EAAuBD,IAAoC,GAAKn3C,KAAKC,MAAQi3C,EAAYD,KACxFG,EACFuB,EAAc74C,KAAKu3C,UAGrB,OAAOsB,EAAY75C,OAAS,EAAI65C,EAAc,IAChD,CAEAC,cAAcC,GACZ,GAAIA,EAAI9G,GAAI,CACV,IAAI3lB,EAAStsB,KAAKg5C,cAAcjlC,IAAIglC,EAAI9G,GAAGC,SAASzzC,GAE/C6tB,IACHA,EAAS,IAAI5T,IACb4T,EAAO9Q,IAAIu9B,EAAI9G,GAAGC,SAASxzC,EAAG,IAE9BsB,KAAKg5C,cAAcx9B,IAAIu9B,EAAI9G,GAAGC,SAASzzC,EAAG6tB,IAG5C,IAAIC,EAAMD,EAAOvY,IAAIglC,EAAI9G,GAAGC,SAASxzC,QAEzBqI,IAARwlB,IACFA,EAAM,GACND,EAAO9Q,IAAIu9B,EAAI9G,GAAGC,SAASxzC,EAAG6tB,IAGhCA,EAAIlkB,KAAK0wC,EACX,CAMA,OAJIA,EAAItX,QAAUsX,EAAItX,MAAMhU,MAAQsrB,EAAItX,MAAMwX,QAC5Cj5C,KAAKk5C,SAAS7wC,KAAK0wC,GAGd,IAAM/4C,KAAKm5C,mBAAmBJ,EACvC,CAEIK,oBACF,MAAO,IAAIp5C,KAAKg5C,cAAcloB,UAC3B1nB,SAAQ3K,GAAK,IAAIA,EAAEqyB,YACnB1nB,SAAQ3K,GAAK,IAAIA,KACjBgE,KAAIhE,GAAKA,EAAEwzC,IAChB,CAEIxQ,YACF,OAAOzhC,KAAK2N,QAAQ8zB,OAAS,EAC/B,CAEQ0X,mBAAmBJ,GACzB,GAAIA,EAAI9G,GAAI,CACV,MAAM3lB,EAAStsB,KAAKg5C,cAAcjlC,IAAIglC,EAAI9G,GAAGC,SAASzzC,GAChD46C,EAAO/sB,GAAQvY,IAAIglC,EAAI9G,GAAGC,SAASxzC,GAEzC,GAAI26C,EACF,GAAoB,IAAhBA,EAAKr6C,OACPstB,GAAQoE,OAAOqoB,EAAI9G,GAAGC,SAASxzC,OAC1B,CACL,MAAM46C,EAAWD,EAAKvlC,QAAQilC,GAE1BO,GAAY,GACdD,EAAKltC,OAAOmtC,EAAU,EAE1B,CAEJ,CAEA,GAAIP,EAAItX,MAAO,CACb,MAAM6X,EAAWt5C,KAAKk5C,SAASplC,QAAQilC,GAEnCO,GAAY,GACdt5C,KAAKk5C,SAAS/sC,OAAOmtC,EAAU,EAEnC,CACF,CAEQV,mBACN,MAAO,IAAI54C,KAAKu5C,uBAAwBv5C,KAAKw5C,uBAC/C,CAEQD,oBACN,GAAoB,OAAhBv5C,KAAK2N,OACP,MAAO,GAGT,MAAM2e,EAAStsB,KAAKg5C,cAAcjlC,IAAI/T,KAAK2N,OAAOskC,GAAGC,SAASzzC,GAE9D,IAAK6tB,EACH,MAAO,GAGT,MAAM+sB,EAAO/sB,EAAOvY,IAAI/T,KAAK2N,OAAOskC,GAAGC,SAASxzC,GAEhD,OACE26C,GAAMpvB,QAAO8uB,KACPA,SACwBhyC,IAAtBgyC,EAAI9G,IAAInY,WAGHif,EAAI9G,GAAGnY,YAAc95B,KAAK2N,OAAQskC,GAAGnY,cAK5C,EAEV,CAEQ0f,uBACN,OAAoB,OAAhBx5C,KAAK2N,OACA,GAGF3N,KAAKk5C,SAASjvB,QAAO8uB,IAC1B,GAAIA,EAAItX,OAAOhU,MAAMwrB,QAAUj5C,KAAK2N,QAAQ8zB,MAAMziC,OAChD,OAAO,EAGT,GAAI+5C,EAAItX,OAAOwX,MAAO,CACpB,GAAkC,IAA9Bj5C,KAAK2N,QAAQ8zB,MAAMziC,OACrB,OAAO,EAGT,MAAMy6C,EAAMz5C,KAAK2N,OAAQ8zB,MAAMzhC,KAAK2N,OAAQ8zB,MAAMziC,OAAS,GAE3D,OAAQ+5C,EAAItX,MAAMwX,MAAMS,WACtB,KAAKjB,GAAoBkB,MACvB,OAAOZ,EAAItX,MAAMwX,MAAMA,QAAUQ,EACnC,KAAKhB,GAAoBmB,KACvB,OAAOb,EAAItX,MAAMwX,MAAMA,MAAQQ,EACjC,KAAKhB,GAAoBoB,UACvB,OAAOd,EAAItX,MAAMwX,MAAMA,OAASQ,EAClC,KAAKhB,GAAoBqB,QACvB,OAAOf,EAAItX,MAAMwX,MAAMA,MAAQQ,EACjC,KAAKhB,GAAoBsB,aACvB,OAAOhB,EAAItX,MAAMwX,MAAMA,OAASQ,EAEtC,CAEA,OAAO,CAAI,GAEf,ECnNI,MAAOO,GAGTt6C,YAAoB+2C,IAAwB52C,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,cAFf,MAET,KAAA42C,YAAAA,CAA4B,CAEhDoB,UAAU7D,GACNh0C,KAAK2N,OAASqmC,CAClB,CAEAiG,eAAe9C,GACX,GAAoB,OAAhBn3C,KAAK2N,OACL,MAAM,IAAI1O,MAAM,gFAGpB,MAAMm4C,EAAYl3C,KAAKC,MACjBk3C,EAAkC,IAElC6C,EAAUpO,GAAQgC,aACpB9tC,KAAKy2C,YAAYhxC,MACjBzF,KAAKy2C,YAAY/wC,QACjB,IAAM,IAEV,IAAK,IAAI4xC,EAAuB,GAC3Bt3C,KAAK2N,OAAOomC,WAAauD,EAAuBD,IAAoC,GAAKn3C,KAAKC,MAAQi3C,EAAYD,KACjHG,EACF4C,EAAQ/N,OAAO,CACX7f,OAAQtsB,KAAK2N,OAAOskC,GAAGC,SAASzzC,EAChC8tB,IAAKvsB,KAAK2N,OAAOskC,GAAGC,SAASxzC,IAE7BD,GAAKA,EAAI,IAEbuB,KAAK2N,OAAOmlC,cAIhB,OAAO9yC,KAAK2N,OAAOomC,SAAWmG,EAAU,IAC5C,E,mfC7BG,IAAMC,GAAN,MAKHz6C,YAAyC+G,IAAqB5G,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,wBAArB,KAAA4G,SAAAA,CAAyB,CAE9D2zC,kBACA,OAAOp6C,KAAKq6C,WAChB,CAEInpC,eACA,OAAOlR,KAAKs6C,QAChB,CAEIN,eACA,OAAOh6C,KAAK+3C,QAChB,CAEAtZ,MAAMgY,EAA0B9E,GAC5B3xC,KAAKq6C,YAAc,IAAI7D,GAAQC,EAAa9E,GAE5C3xC,KAAKs6C,SAAW,IAAIppC,GACpBlR,KAAKq6C,YAAYzC,eAAe53C,KAAKs6C,UAErCt6C,KAAK+3C,SAAW,IAAIiC,GAASh6C,KAAKyG,SAAS6hC,aAC3CtoC,KAAKq6C,YAAYvC,eAAe93C,KAAK+3C,SACzC,GA3BSoC,GAAcx2C,GAAA,EAD1BC,EAAAA,EAAAA,KAMgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAA8B,oBAA9B,GAA8B,qBAAXA,GAAAA,GAAWa,GAAAC,UALrD+zC,IA8Bb/0C,EAAUiB,KAAK8zC,IAAgB7zC,SAASC,mB,+fCtBjC,IAAMg0C,GAAN,MAOH76C,YACiC+G,EACGopC,EACG2K,EACHC,EACE7N,IAAkC/sC,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,kBAXpD,IAAKA,EAAAA,EAAAA,GAAA,mBACyB,KAAEA,EAAAA,EAAAA,GAAA,6BACG,KAAEA,EAAAA,EAAAA,GAAA,6BACpB,CAAC,kBAAoB,kBAAoB,sBAAoBA,EAAAA,EAAAA,GAAA,+BAC3D,CAAC,kBAAoB,kBAAoB,oBAG/C,KAAA4G,SAAAA,EACG,KAAAopC,QAAAA,EACG,KAAA2K,WAAAA,EACH,KAAAC,eAAAA,EACE,KAAA7N,iBAAAA,EAElC5sC,KAAK6vC,QAAQzY,cAAc8B,MAAMhxB,QAAQwyC,GAAwB16C,KAAK26C,gBAAgBD,KACtF16C,KAAK6vC,QAAQzY,cAAc+B,eAAejxB,QAAQ0yC,GAA+B56C,KAAK66C,uBAAuBD,KAC7G56C,KAAK6vC,QAAQzY,cAAciC,qBAAqBnxB,QAAO,IAAMlI,KAAK86C,0BACtE,CAEAt3C,SAASu3C,GACL,MAAMC,EAASh7C,KAAK64C,YACfoC,MAAKlC,GAAOA,EAAI7G,SAASzzC,IAAMuB,KAAKw6C,WAAWpJ,aAAa3yC,GAAKs6C,EAAI7G,SAASxzC,IAAMsB,KAAKw6C,WAAWpJ,aAAa1yC,IAEtHsB,KAAK6vC,QAAQzY,cAAcwC,iBAAmBohB,EAE1CD,EAAiBt8C,IAAMuB,KAAKw6C,WAAWpJ,aAAa3yC,GAAKs8C,EAAiBr8C,IAAMsB,KAAKw6C,WAAWpJ,aAAa1yC,IACzGsB,KAAKk7C,sBAAsBD,MAAKlC,GAAOA,EAAI7G,SAASzzC,IAAMs8C,EAAiBt8C,GAAKs6C,EAAI7G,SAASxzC,IAAMq8C,EAAiBr8C,IACpHsB,KAAKw6C,WAAWvoC,OAAO8oC,EAAiBt8C,EAAGs8C,EAAiBr8C,EAAGsB,KAAKm7C,uBAC7Dn7C,KAAK64C,YAAYoC,MAAKlC,GAAOA,EAAI7G,SAASzzC,IAAMs8C,EAAiBt8C,GAAKs6C,EAAI7G,SAASxzC,IAAMq8C,EAAiBr8C,KACjHsB,KAAKw6C,WAAWvoC,OAAO8oC,EAAiBt8C,EAAGs8C,EAAiBr8C,EAAGsB,KAAKo7C,yBAGhF,CAEAC,YAAYN,GACJ/6C,KAAK64C,YAAYoC,MAAKlC,GAAOA,EAAI7G,SAASzzC,IAAMs8C,EAAiBt8C,GAAKs6C,EAAI7G,SAASxzC,IAAMq8C,EAAiBr8C,KAC1GsB,KAAKw6C,WAAWvoC,OAAO8oC,EAAiBt8C,EAAGs8C,EAAiBr8C,EAAGsB,KAAKo7C,wBAE5E,CAEQ7D,QAAQmD,GACP16C,KAAKy4B,YACNz4B,KAAKy6C,eAAehc,MAAMz+B,KAAKyG,SAAS6hC,YAAatoC,KAAK4sC,iBAAiBpF,SAC3ExnC,KAAKy6C,eAAeL,YAAYpD,SAASh3C,KAAK6vC,QAAQxQ,WAAW9sB,OACjEvS,KAAKy6C,eAAeL,YAAYpC,2BAA0B,CAAC7Q,EAAc9oC,IAAkB2B,KAAK02C,cAAcvP,EAAK9oC,KAEnH2B,KAAKs7C,8BAELt7C,KAAKy4B,WAAY,EACjBz4B,KAAK6vC,QAAQzY,cAAcqB,WAAY,EAEvCz4B,KAAK6vC,QAAQxQ,WAAW7sB,OAAS,IAGrC,MAAM+oC,EAAQv7C,KAAKy6C,eAAevpC,SAC5BmpC,EAAcr6C,KAAKy6C,eAAeL,YAKxC,IAAIoB,EAFJx7C,KAAKk7C,sBAAsBh5C,SAAQ62C,GAAO/4C,KAAKw6C,WAAW7P,SAASoO,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,KAGhG,IACI,GAAIg8C,IAAWvjB,GAAYa,kBACvBwjB,EAAkBD,EAAMrE,OAAOl3C,KAAKyG,SAASg1C,sBAC1C,IAAIf,IAAWvjB,GAAY0B,mBAM9B,MAAM,IAAI55B,MAAM,2BALhBu8C,EAAkBD,EAAMhE,UACpBiE,EAAgBx8C,OAAS,IACzBw8C,EAAkBD,EAAMhE,UAIhC,CACJ,CAAE,MAAOx3C,GAML,OALIA,aAAad,OACbe,KAAK6vC,QAAQvJ,SAASvF,UAAUhhC,EAAE27C,cAGtC17C,KAAK84B,WAET,CAGA,IAAI+f,EAAqC,GAkBzC,GAhBwB,OAApB2C,GACKD,EAAMxH,WACP/zC,KAAK6vC,QAAQvJ,SAASrF,YAAY,0BAElCjhC,KAAK6vC,QAAQtO,cAAcE,MAAQ,IAGvCzhC,KAAKy4B,WAAY,EACjBz4B,KAAK6vC,QAAQzY,cAAcqB,WAAY,EACvCz4B,KAAKk7C,sBAAwB,GAE7Bl7C,KAAKw6C,WAAW5J,mBAEhBiI,EAAc2C,EAGdd,IAAWvjB,GAAYa,mBAAqB6gB,EAAY75C,OAAS,EAAG,CACpEgB,KAAK27C,kCAEL37C,KAAKk7C,sBAAwB,GAC7B,IAAK,MAAMnC,KAAOF,EACVE,EAAI9G,KACJjyC,KAAKk7C,sBAAsB7yC,KAAK0wC,EAAI9G,IACpCjyC,KAAKw6C,WAAWvoC,OAAO8mC,EAAI9G,GAAGC,SAASzzC,EAAGs6C,EAAI9G,GAAGC,SAASxzC,EAAGsB,KAAKm7C,wBAI1En7C,KAAK6vC,QAAQtO,cAAcE,MAAQ8Z,EAAM9Z,MACzCzhC,KAAK6vC,QAAQtO,cAAc9c,cAC3BzkB,KAAK6vC,QAAQxQ,WAAW7sB,QAAU6nC,EAAY5C,mBAAmBz3C,KAAKyG,SAASm1C,gBACnF,MACI57C,KAAK27C,kCAEL37C,KAAKk7C,sBAAwB,CAAC,CAAEhJ,SAAU,CAAEzzC,EAAG47C,EAAYhC,GAAG55C,EAAGC,EAAG27C,EAAYhC,GAAG35C,KAEnFsB,KAAKw6C,WAAWvoC,OAAOooC,EAAYhC,GAAG55C,EAAG47C,EAAYhC,GAAG35C,EAAGsB,KAAKm7C,uBAEhEn7C,KAAK6vC,QAAQtO,cAAcE,MAAQ8Z,EAAM9Z,MACzCzhC,KAAK6vC,QAAQtO,cAAc9c,cAC3BzkB,KAAK6vC,QAAQxQ,WAAW7sB,QAAU6nC,EAAY5C,mBAAmBz3C,KAAKyG,SAASm1C,iBAG/EL,EAAMxH,WACN/zC,KAAKy4B,WAAY,EACjBz4B,KAAK6vC,QAAQzY,cAAcqB,WAAY,EAEvCz4B,KAAKk7C,sBAAsBh5C,SAAQ62C,GAAO/4C,KAAKw6C,WAAW7P,SAASoO,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,KAChGsB,KAAKk7C,sBAAwB,GAE7Bl7C,KAAK6vC,QAAQxQ,WAAW7sB,QAAU6nC,EAAY5C,mBAAmBz3C,KAAKyG,SAASm1C,iBAE/E57C,KAAK27C,kCAEL37C,KAAKw6C,WAAW5J,kBAEhB5wC,KAAK6vC,QAAQvJ,SAASnF,YAAY,aAElCnhC,KAAK6vC,QAAQtO,cAAcE,MAAQ,GAE3C,CAEQ3I,YACJ94B,KAAKy4B,WAAY,EACjBz4B,KAAK6vC,QAAQzY,cAAcqB,WAAY,EAEvCz4B,KAAKk7C,sBAAsBh5C,SAAQ62C,GAAO/4C,KAAKw6C,WAAW7P,SAASoO,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,KAChGsB,KAAKk7C,sBAAwB,GAE7Bl7C,KAAK27C,kCAGL37C,KAAKw6C,WAAW5J,kBAEhB5wC,KAAK6vC,QAAQtO,cAAcE,MAAQ,EACvC,CAEYhJ,gBACR,OAAOz4B,KAAK04B,SAChB,CAEYD,cAAU8iB,GAClBv7C,KAAK04B,UAAY6iB,EAEjBv7C,KAAK6vC,QAAQtO,cAAcrd,QAAUq3B,EACrCv7C,KAAK6vC,QAAQvV,aAAa/U,QAAUg2B,CACxC,CAEQZ,gBAAgBD,GAChBA,IAAWvjB,GAAYa,mBAAiD,IAA5Bh4B,KAAK64C,YAAY75C,QAAiBgB,KAAK04B,UAE5EgiB,IAAWvjB,GAAY2B,UAC9B94B,KAAK84B,YAEL94B,KAAKu3C,QAAQmD,GAJb16C,KAAKu3C,QAAQpgB,GAAY0B,mBAMjC,CAEQyiB,8BACJt7C,KAAK64C,YAAY32C,SAAQ62C,IACrBA,EAAI8C,SAAW77C,KAAK87C,kBAAkB/C,EAAI,GAElD,CAEQ+C,kBAAkB/C,GACtB,MAAM8C,EAAW77C,KAAKy6C,eAAevpC,SAAS4nC,cAAc,CAAE7G,GAAI8G,IAIlE,OAFA/4C,KAAKw6C,WAAWvoC,OAAO8mC,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,EAAGsB,KAAKo7C,yBAErD,KACHS,IACA77C,KAAKw6C,WAAW7P,SAASoO,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,EAAE,CAEhE,CAEQm8C,uBAAuBD,GAC3B,MAAMmB,EAAW/7C,KAAK64C,YACjBzsC,WAAU2sC,GAAOA,EAAI7G,SAASzzC,IAAMuB,KAAKw6C,WAAWpJ,aAAa3yC,GAAKs6C,EAAI7G,SAASxzC,IAAMsB,KAAKw6C,WAAWpJ,aAAa1yC,IAErHs9C,EAAiC,CACnC9J,SAAU,IAAKlyC,KAAKw6C,WAAWpJ,iBAC5BwJ,GAGP,IAAkB,IAAdmB,EAAiB,CACjB,MAAMF,EAAW77C,KAAKy4B,UAAYz4B,KAAK87C,kBAAkBE,GAAa,KACtEh8C,KAAK64C,YAAYxwC,KAAK,IAAK2zC,EAAWH,aAEtC77C,KAAKw6C,WAAWvoC,OAAO+pC,EAAU9J,SAASzzC,EAAGu9C,EAAU9J,SAASxzC,EAAGsB,KAAKo7C,yBAExEp7C,KAAK6vC,QAAQzY,cAAcwC,kBAAmB,CAClD,KAAO,CACH,MAAMiiB,EAAW77C,KAAKy4B,UAAYz4B,KAAK87C,kBAAkBE,GAAa,KACtEh8C,KAAK64C,YAAYkD,GAAY,IAAKC,EAAWH,WACjD,CACJ,CAEQf,yBACJ,MAAMiB,EAAW/7C,KAAK64C,YACjBzsC,WAAU2sC,GAAOA,EAAI7G,SAASzzC,IAAMuB,KAAKw6C,WAAWpJ,aAAa3yC,GAAKs6C,EAAI7G,SAASxzC,IAAMsB,KAAKw6C,WAAWpJ,aAAa1yC,IAE3H,IAAkB,IAAdq9C,EAAiB,CACjB,MAAME,EAAYj8C,KAAK64C,YAAYkD,GAER,OAAvBE,EAAUJ,UACVI,EAAUJ,WAGd77C,KAAK64C,YAAY1sC,OAAO4vC,EAAU,GAElC/7C,KAAKw6C,WAAWvoC,OAAOgqC,EAAU/J,SAASzzC,EAAGw9C,EAAU/J,SAASxzC,EAAG,CAAC,mBAAqB,kBAAoB,qBAE7GsB,KAAK6vC,QAAQzY,cAAcwC,kBAAmB,CAClD,CACJ,CAEQ+hB,kCACJ,IAAK,MAAM5C,KAAO/4C,KAAKy6C,eAAevpC,SAASkoC,cAC3Cp5C,KAAKw6C,WAAWvoC,OAAO8mC,EAAI7G,SAASzzC,EAAGs6C,EAAI7G,SAASxzC,EAAGsB,KAAKo7C,wBAEpE,CAEQ1E,cAAcvP,EAAc9oC,GAChC2B,KAAKw6C,WAAWlP,QACZnE,EAAI1oC,EACJ0oC,EAAIzoC,EACJ,GAAGL,EAAMmkC,cAAczU,OAAOC,aAAa3vB,MAC3C6sC,GAAgBjzB,SACxB,GA3PSsiC,GAAgB52C,GAAA,EAD5BC,EAAAA,EAAAA,KASQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KACP5pC,GAAA,GAAAC,EAAAA,EAAAA,GAAOk0C,KACPn0C,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KAAiB,wBAJyB,oBAIzB,GAJyB,qBAAXxhC,GAAAA,GAAWa,GAAAC,OACK,oBADL6E,GACK,qBAAd26B,IAAAA,IAAc36B,GAAA7E,OACS,oBADT6c,GACS,qBAAjB2sB,IAAAA,IAAiB3sB,GAAA7c,OACF,oBADE8c,GACF,qBAAdi3B,IAAAA,IAAcj3B,GAAA9c,OACM,oBADNgd,GACM,qBAAhB0jB,IAAAA,IAAgB1jB,GAAAhd,UAZ/Dm0C,IA8Pbn1C,EAAUiB,KAAKk0C,IAAkBj0C,SAASC,mB,4fCxQnC,IAAM21C,GAAN,MACHx8C,YACiC+G,EACGopC,EACA4K,EACE7N,IAAkC/sC,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,gCAHvC,KAAA4G,SAAAA,EACG,KAAAopC,QAAAA,EACA,KAAA4K,eAAAA,EACE,KAAA7N,iBAAAA,EAElC5sC,KAAK6vC,QAAQzY,cAAc6B,QAAQ/wB,QAAO,IAAMlI,KAAKi5B,WACzD,CAEQA,UACJj5B,KAAKy6C,eAAehc,MAAMz+B,KAAKyG,SAAS6hC,YAAatoC,KAAK4sC,iBAAiBpF,SAE3ExnC,KAAKy6C,eAAeL,YAAYpD,SAASh3C,KAAK6vC,QAAQxQ,WAAW9sB,OAEjE,IACQvS,KAAKy6C,eAAeL,YAAYlD,OAAOl3C,KAAKyG,SAASg1C,kBACrDz7C,KAAK6vC,QAAQvJ,SAASnF,YAAY,8BAA8BnhC,KAAKy6C,eAAeL,YAAYhC,wBAEhGp4C,KAAK6vC,QAAQvJ,SAASrF,YAAY,0BAGtCjhC,KAAK6vC,QAAQxQ,WAAW7sB,OAASxS,KAAKy6C,eAAeL,YAAY3C,mBAAmBz3C,KAAKyG,SAASm1C,gBACtG,CAAE,MAAO77C,GACDA,aAAad,OACbe,KAAK6vC,QAAQvJ,SAASvF,UAAUhhC,EAAE27C,QAE1C,CACJ,GA5BSQ,GAAgBv4C,GAAA,EAD5BC,EAAAA,EAAAA,KAGQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAOk0C,KACPn0C,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KAAiB,wBAHyB,oBAGzB,GAHyB,qBAAXxhC,GAAAA,GAAWa,GAAAC,OACK,oBADL6E,GACK,qBAAd26B,IAAAA,IAAc36B,GAAA7E,OACO,oBADP6c,GACO,qBAAdk3B,IAAAA,IAAcl3B,GAAA7c,OACM,oBADN8c,GACM,qBAAhB4jB,IAAAA,IAAgB5jB,GAAA9c,UAL/D81C,IA+Bb92C,EAAUiB,KAAK61C,IAAkB51C,SAASC,mBCzC1C,I,MCkBK41C,GDlBL,8hEEAA,wT,6eDkBA,SAAKA,GAAuBA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,cAAIA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,YAAGA,EAAAA,EAAA,WAAG,EAAnD,CAAKA,KAAAA,GAAoB,KAGnB,MAAOC,WAA4Bv/B,GAGrCnd,YAAY6F,EAA4BkS,GACpC,MAAMgI,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OACxC4rB,EAAavoB,EAAY3J,GAASqmC,IAExC9wC,MAAM9F,EACF,CAAEqZ,SAAUy9B,GAAcv9B,OAAQw9B,IAClC,CAAC,CACGniC,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,GAEZ,CACIzD,KAAM,YACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,GAEZ,CACIzD,KAAM,UACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQipB,EACRpqB,OAAQ,EAAI6B,IAEhB,CAAExB,oBAAqB,EAAGK,kBAAmB/Y,EAAGqa,aAAa/f,EAAAA,EAAAA,GAAA,iBAhCxCK,KAAKC,MAAQ,KAkCtCH,KAAKid,iBAAiBxF,EAC1B,CAEIpQ,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,CAEA7B,OACIle,KAAK+Y,OAAO2B,aAAa,SAAUxa,KAAKC,MAAQ,IAAOH,KAAKo3C,WAE5D/rC,MAAM6S,MACV,EAKJ,IACMq+B,GADN,MAII78C,YAC0D6F,EACzBkB,IAAqB5G,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,gBAJ3B,IAG+B,KAAA0F,GAAAA,EACzB,KAAAkB,SAAAA,CAC7B,CAEJoM,MAAMqnC,GACF,MAAMr0C,EAAQ7F,KAAKyG,SAAS6hC,YAAY7iC,MAAQzF,KAAKwoC,SAC/C1iC,EAAS9F,KAAKyG,SAAS6hC,YAAY5iC,OAAS1F,KAAKwoC,SACjDp4B,EAAcvK,EAAQC,EACtB02C,EAAa,CAAE32C,MAAO7F,KAAKwoC,SAAW3iC,EAAOC,OAAQ9F,KAAKwoC,SAAW1iC,GACrEuiC,EAAuB,GAC7B,IAAK,IAAI9b,EAAM,EAAGA,EAAMvsB,KAAKyG,SAAS6hC,YAAY5iC,SAAU6mB,EACxD,IAAK,IAAID,EAAS,EAAGA,EAAStsB,KAAKyG,SAAS6hC,YAAY7iC,QAAS6mB,EAAQ,CACrE,MAAM1K,EAAcs4B,EAAQlO,IAAI,CAAE1f,SAAQC,IAAKvsB,KAAKyG,SAAS6hC,YAAY5iC,OAAS6mB,EAAM,IAElFgD,EAAOvvB,KAAKuoC,UACd,CAAE9pC,EAAG6tB,EAAStsB,KAAKwoC,SAAU9pC,EAAG6tB,EAAMvsB,KAAKwoC,UAC3C,CACIl6B,EAAG,CAAE7P,EAAG6tB,EAAStsB,KAAKwoC,SAAW3iC,EAAQuK,EAAa1R,EAAG6tB,EAAMvsB,KAAKwoC,SAAW1iC,GAC/EyI,EAAG,CAAE9P,GAAI6tB,EAAStsB,KAAKwoC,SAAW3iC,EAAQ22C,EAAW32C,OAASuK,EAAa1R,EAAG6tB,EAAMvsB,KAAKwoC,SAAW1iC,EAAS02C,EAAW12C,SAE5H8b,GAEJymB,EAAWhgC,QAAQknB,EACvB,CAGJ,OAAO,IAAI6sB,GAAoBp8C,KAAKuF,GAAI8iC,EAC5C,CAEQE,UACJzhC,EACA21C,EACA76B,GAEA,OAAOpK,GAAiBa,cACpBvR,EACA,CAAEjB,MAAO7F,KAAKwoC,SAAU1iC,OAAQ9F,KAAKwoC,UACrC,CACI,CACIzwB,WAAY,CAAC0kC,EAAQnuC,EAAE7P,EAAGg+C,EAAQnuC,EAAE5P,GACpCsZ,QAAS,CAACykC,EAAQnuC,EAAE7P,EAAGg+C,EAAQluC,EAAE7P,GACjCuZ,SAAU,CAACwkC,EAAQluC,EAAE9P,EAAGg+C,EAAQluC,EAAE7P,GAClCwZ,YAAa,CAACukC,EAAQluC,EAAE9P,EAAGg+C,EAAQnuC,EAAE5P,IAEzCkjB,GAGZ,GAnDE26B,GAA0B54C,GAAA,EAD/BC,EAAAA,EAAAA,KAKQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IAAY,wBAD4D,oBAC5D,GAD4D,qBAAtBY,wBAAAA,wBAAsBC,GAAAC,OAC9B,oBAD8B6E,GAC9B,qBAAX3F,GAAAA,GAAW2F,GAAA7E,UALpDm2C,IAsDNn3C,EAAUiB,KAAKk2C,IAA4Bj2C,SAASypB,iBAIpD3qB,EACKiB,KAA6CxC,EAAeQ,4BAC5D0gB,WAAoDC,GAAQinB,GAA4BjnB,EAAIC,UAAUlR,IAAIwoC,IAA4B1pC,MAAMo5B,K,yfEpHjJ,MAAMyQ,GACFh9C,YACYi9C,EACAC,IAAmC/8C,EAAAA,EAAAA,GAAA,oCAAAA,EAAAA,EAAAA,GAAA,gCADnC,KAAA88C,oBAAAA,EACA,KAAAC,iBAAAA,CAAuC,CAEnD1+B,OACIle,KAAK28C,oBAAoBz+B,MAC7B,CAEA0pB,SACI5nC,KAAK28C,oBAAoBthC,UACzBrb,KAAK48C,iBAAiB16C,SAAQ26C,GAAWA,KAC7C,CAEIx1C,mBAAe0Y,GACf/f,KAAK28C,oBAAoBt1C,eAAiB0Y,CAC9C,EAIG,IAAM+8B,GAAN,MAUHp9C,YACiC+G,EACM+zC,EACwBuC,IAA8Cl9C,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,2CAAAA,EAAAA,EAAAA,GAAA,oBAZxE,CAAC,EAAG,kBAAoB,KAAEA,EAAAA,EAAAA,GAAA,qBACzB,CAAC,EAAG,EAAG,KAAEA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,eAI7BjB,OAAO6M,oBAAiB5L,EAAAA,EAAAA,GAAA,uBAKT,KAAA4G,SAAAA,EACM,KAAA+zC,WAAAA,EACwB,KAAAuC,2BAAAA,CAC3D,CAEJlqC,MAAMqnC,GACFl6C,KAAKk6C,QAAUA,EAEfl6C,KAAK+c,QAEL,MAAMigC,EAAYh9C,KAAKi9C,iBAEjBC,EAASl9C,KAAKk6C,QAAQxhC,KAAIja,GAAKuB,KAAKm9C,YAAY1+C,KAEhD+hB,EAAWxgB,KAAK+8C,2BAA2BG,GAEjD,OAAO,IAAIR,GAAiBl8B,EAAUw8B,EAC1C,CAEQG,YAAYC,GAChB,GAAa,IAATA,EACA,MAAO,CAAC,EAAG,EAAG,EAAG,GAGrB,MAAMpzC,EAAIozC,EAAOp9C,KAAKq9C,QAEtB,MAAO,CACHr9C,KAAKs9C,aAAa,GAAKt9C,KAAKu9C,eAAe,GAAKvzC,EAChDhK,KAAKs9C,aAAa,GAAKt9C,KAAKu9C,eAAe,GAAKvzC,EAChDhK,KAAKs9C,aAAa,GAAKt9C,KAAKu9C,eAAe,GAAKvzC,EAChD,GAER,CAEQ+S,QACJ/c,KAAKk6C,QAAQ3N,SAAQ9tC,GAAKuB,KAAKq9C,QAAU7+C,KAAKD,IAAIyB,KAAKq9C,QAAS5+C,KAEhEuB,KAAKu9C,eAAiB,CAClBv9C,KAAKw9C,cAAc,GAAKx9C,KAAKs9C,aAAa,GAC1Ct9C,KAAKw9C,cAAc,GAAKx9C,KAAKs9C,aAAa,GAC1Ct9C,KAAKw9C,cAAc,GAAKx9C,KAAKs9C,aAAa,GAElD,CAEQL,iBACJ,MAAMD,EAA+B,GAErC,IAAK,IAAIzwB,EAAM,EAAGA,EAAMvsB,KAAKyG,SAAS6hC,YAAY5iC,SAAU6mB,EACxD,IAAK,IAAID,EAAS,EAAGA,EAAStsB,KAAKyG,SAAS6hC,YAAY7iC,QAAS6mB,EAAQ,CACrE,MAAM8wB,EAAOp9C,KAAKk6C,QAAQlO,IAAI,CAAE1f,SAAQC,QACxC,GAAI6wB,EAAO,EAAG,CACV,MAAMvB,EAAW77C,KAAKw6C,WAAWlP,QAAQhf,EAAQC,EAAK6wB,EAAK5a,WAAY0I,GAAgBnzB,YAEvFilC,EAAU30C,KAAKwzC,EACnB,CACJ,CAGJ,OAAOmB,CACX,GAtESF,GAAuBn5C,GAAA,EADnCC,EAAAA,EAAAA,KAYQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KACP5pC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeQ,6BAA2B,wBAFA,oBAEA,GAFA,qBAAXiB,GAAAA,GAAWa,GAAAC,OACc,oBADd6E,GACc,qBAAjB2kC,IAAAA,IAAiB3kC,GAAA7E,OACyC,oBADzC6c,GACyC,qBAAlBw6B,EAAAA,oBAAAA,EAAAA,oBAAkBx6B,GAAA7c,UAbpG02C,IAyEb13C,EAAUiB,KAAKy2C,IAAyBx2C,SAASwe,mBAIjD1f,EACKiB,KAAkDxC,EAAeS,yBACjEygB,WAA+CC,GAAQ04B,GAA2B14B,EAAIC,UAAUlR,IAAI+oC,IAAyBjqC,MAAM6qC,K,kgBCrGjI,IAAMC,GAAN,MACHj+C,YACiC+G,EACKmmC,EACF6N,EACGD,EACH3K,EACwB+N,IAAgD/9C,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,+BAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,uCAL3E,KAAA4G,SAAAA,EACK,KAAAmmC,iBAAAA,EACF,KAAA6N,eAAAA,EACG,KAAAD,WAAAA,EACH,KAAA3K,QAAAA,EACwB,KAAA+N,wBAAAA,EAExD59C,KAAK6vC,QAAQzY,cAAcrlB,QAAQ7J,QAC9B21C,GAAoC79C,KAAKs4B,cAAculB,IACxD,CAAE9xC,SAAUR,GAAmBI,MACvC,CAEQ2sB,cAAc6B,GAClBA,EAASC,QAAUp6B,KAAK89C,aAAa3jB,GAAYn6B,KAAK+9C,aAC1D,CAEQD,aAAa3jB,GACjBn6B,KAAKy6C,eAAehc,MAAMz+B,KAAKyG,SAAS6hC,YAAatoC,KAAK4sC,iBAAiBpF,SAE3ExnC,KAAKy6C,eAAeL,YAAYpD,SAASh3C,KAAK6vC,QAAQxQ,WAAW9sB,OAEjE,IACI,MAAM2nC,EAAUl6C,KAAKy6C,eAAeT,SAASC,eAAe,KAE5D,GAAgB,OAAZC,EACAl6C,KAAK6vC,QAAQvJ,SAASrF,YAAY,0BAElC9G,EAASC,SAAU,MAChB,CACH,MAAMqW,EAAYzwC,KAAK49C,wBAAwB1D,GAE/Cl6C,KAAKw6C,WAAWhK,cAAcC,EAClC,CACJ,CAAE,MAAO1wC,GACDA,aAAad,OACbe,KAAK6vC,QAAQvJ,SAASvF,UAAUhhC,EAAE27C,SAGtCvhB,EAASC,SAAU,CACvB,CACJ,CAEQ2jB,cACJ/9C,KAAKw6C,WAAW9J,iBACpB,GA9CSiN,GAAiBh6C,GAAA,EAD7BC,EAAAA,EAAAA,KAGQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KACP9gC,GAAA,GAAAC,EAAAA,EAAAA,GAAOk0C,KACPn0C,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KACP5pC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeS,0BAAwB,wBALG,oBAKH,GALG,qBAAXgB,GAAAA,GAAWa,GAAAC,OACkB,oBADlB6E,GACkB,qBAAhB67B,IAAAA,IAAgB77B,GAAA7E,OACN,oBADM6c,GACN,qBAAdk3B,IAAAA,IAAcl3B,GAAA7c,OACE,oBADF8c,GACE,qBAAjB0sB,IAAAA,IAAiB1sB,GAAA9c,OACT,oBADSgd,GACT,qBAAdwiB,IAAAA,IAAcxiB,GAAAhd,OACiD,oBADjD8wB,GACiD,qBAAvB5yB,EAAAA,yBAAAA,EAAAA,yBAAuB4yB,GAAA9wB,UAPnGu3C,IAiDbv4C,EAAUiB,KAAKs3C,IAAmBr3C,SAASC,mB,yfCvDpC,IAAMy3C,GAAN,MACHt+C,YACsCu+C,EACAC,EACCC,IAAoCt+C,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,iCAFrC,KAAAo+C,iBAAAA,EACA,KAAAC,iBAAAA,EACC,KAAAC,kBAAAA,CACnC,CAEAC,gBACA,OAAOp+C,KAAKi+C,gBAChB,CAEII,gBACA,OAAOr+C,KAAKk+C,gBAChB,CAEII,iBACA,OAAOt+C,KAAKm+C,iBAChB,GAjBSH,GAAoBr6C,GAAA,EADhCC,EAAAA,EAAAA,KAGQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOi2C,KACPl2C,GAAA,GAAAC,EAAAA,EAAAA,GAAOs0C,KACPv0C,GAAA,GAAAC,EAAAA,EAAAA,GAAO03C,KAAkB,wBAF0C,oBAE1C,GAF0C,qBAAhBzB,IAAAA,IAAgB/1C,GAAAC,OACA,oBADA6E,GACA,qBAAhBsvC,IAAAA,IAAgBtvC,GAAA7E,OACG,oBADH6c,GACG,qBAAjB06B,IAAAA,IAAiB16B,GAAA7c,UAJlE43C,IAoBb54C,EAAUiB,KAAK23C,IAAsB13C,SAASC,mB,yfCjBvC,IAAMg4C,GAAN,MAGH7+C,YACuC86C,EACH3K,EACM2O,IAA0C3+C,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,qCAAAA,EAAAA,EAAAA,GAAA,gBALjE,IAAI+L,IAGgB,KAAA4uC,WAAAA,EACH,KAAA3K,QAAAA,EACM,KAAA2O,qBAAAA,CAA8C,CAExF96B,QAAQ3jB,GACJ,MAAM4jB,EAAU5jB,EAAE6jB,IAAIC,WAAW,GAEjC,GAAqB,IAAjB9jB,EAAE6jB,IAAI5kB,QAAgB2kB,GAAW,IAAIE,WAAW,IAAMF,GAAW,IAAIE,WAAW,IAAgB,cAAV9jB,EAAE6jB,IACxF,GAAI5jB,KAAK6vC,QAAQzY,cAAcqB,UAC3Bz4B,KAAK6vC,QAAQvJ,SAASpF,gBAAgB,iDACnC,GAAIlhC,KAAK6vC,QAAQzY,cAAc2B,eAClC/4B,KAAK6vC,QAAQvJ,SAASpF,gBAAgB,mDACnC,CACH,MAAM6Z,EAAmB,IAAK/6C,KAAKw6C,WAAWpJ,cAE9CpxC,KAAKw6C,WAAWjN,UAAUxtC,GAE1BC,KAAKw+C,qBAAqBH,UAAUhD,YAAYN,EACpD,CAER,CAEAx2B,QACIvkB,KAAKw6C,WAAWj2B,OACpB,CAEAC,OACIxkB,KAAKw6C,WAAWh2B,MACpB,CAEIhB,eACA,OAAOxjB,KAAKyjB,QAChB,GApCS86B,GAA8B56C,GAAA,EAD1CC,EAAAA,EAAAA,KAKQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KACP5pC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAO+3C,KAAqB,wBAFmC,oBAEnC,GAFmC,qBAAjBpO,IAAAA,IAAiBzpC,GAAAC,OACT,oBADS6E,GACT,qBAAd26B,IAAAA,IAAc36B,GAAA7E,OACyB,oBADzB6c,GACyB,qBAApB+6B,IAAAA,IAAoB/6B,GAAA7c,UAN3Em4C,IAuCbn5C,EAAUiB,KAAKk4C,IAAgCj4C,SAASypB,iBAIxD3qB,EACKiB,KAAyDxC,EAAeW,uCACxEugB,WAA0CC,GAAO,IAAMA,EAAIC,UAAUlR,IAAIwqC,MCzD9E,2KCAA,8LCOM,MAAOE,WAAsB5hC,GAC/Bnd,YAAY6F,GACR,MAAMka,EAAYhE,GAAiBqC,QAAQvY,EAAG6W,OAE9C/Q,MACI9F,EACA,CAAEuZ,OAAQ4/B,GAAgB9/B,SAAU+/B,IACpC,CAAC,CACGxkC,KAAM,WACN1D,KAAM,EACNoC,KAAMtT,EAAG6W,MACTgD,YAAY,EACZL,OAAQ,EAAIU,EACZ7B,OAAQ,IAEZ,CAAEK,oBAAqB,EAAGK,kBAAmB/Y,EAAGq5C,OACxD,CAEIv3C,mBAAe0Y,GACf/f,KAAK+Y,OAAOiC,oBAAoB,gBAAiB+E,EACrD,ECpBE,MAAO8+B,GAOTn/C,YACYsH,EACA83C,EACApQ,IAAkB7uC,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,4BAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,eATb,IAAKA,EAAAA,EAAAA,GAAA,gBAEH,IAACA,EAAAA,EAAAA,GAAA,gBAED,KAGP,KAAAmH,OAAAA,EACA,KAAA83C,YAAAA,EACA,KAAApQ,SAAAA,CACR,CAEAqQ,aACA,OAAO/+C,KAAKg/C,MAChB,CAEA9gC,KAAKwJ,GACD,IAAIu3B,EAAQv3B,EAAU1nB,KAAKk/C,SAE3Bl/C,KAAKm/C,UAAYF,EAEbj/C,KAAKm/C,SAAW,IAChBF,GAASj/C,KAAKm/C,SAAW,GAG7B,MAAMpQ,EAAWtuC,EAAAA,GAASA,EAAAA,KAAeT,KAAK8+C,YAAar+C,EAAAA,GAAgBw+C,EAAOA,IAE5E93C,EAAQsnC,GAAO2Q,kBACjB,CAAE3gD,EAAGswC,EAAS,GAAIrwC,GAAIqwC,EAAS,IAC/B,CAAEplC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvB9J,KAAKgH,OAAOK,eACZrH,KAAK0uC,UAET1uC,KAAKgH,OAAOE,UAAU,CAClBzI,EAAG0I,EAAM1I,EACTC,EAAGyI,EAAMzI,IAGTsB,KAAKm/C,UAAY,IACjBn/C,KAAKg/C,QAAS,EAEtB,EC5CE,MAAOK,GAST3/C,YACYw6B,EACAlzB,EACAs4C,IAAyBz/C,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,gBAXlB,IAACA,EAAAA,EAAAA,GAAA,gBAED,MAAGA,EAAAA,EAAAA,GAAA,gBAEH,KAAEA,EAAAA,EAAAA,GAAA,eAEJ,GAGL,KAAAq6B,UAAAA,EACA,KAAAlzB,OAAAA,EACA,KAAAs4C,SAAAA,CACZ,CAEIP,aACA,OAAO/+C,KAAKg/C,MAChB,CAEA9gC,KAAKwJ,GACD,MAAMu3B,EAAQv3B,EAAU1nB,KAAKk/C,SAE7Bl/C,KAAKm/C,UAAYF,EAEjB,MAAM93C,EAAQnH,KAAKQ,SAAWy+C,GAA4B,OAAnBj/C,KAAKk6B,WAAsB,EAAI,GAEhEjzB,EAAIjH,KAAKgH,OAAOI,SAASH,EAAIE,EAE/BF,GAAKjH,KAAKs/C,SAAS/gD,KAAO0I,GAAKjH,KAAKs/C,SAAShhD,IAC7C0B,KAAKg/C,QAAS,GAIlBh/C,KAAKgH,OAAOE,UAAU,CAAED,EAAGE,IAEvBnH,KAAKm/C,UAAY,IACjBn/C,KAAKg/C,QAAS,GAEtB,EC3CE,MAAOO,WAA+BtgD,MACxCS,cAAgB2L,MAAM,8BAA+B,EAGnD,MAAOm0C,GACTphD,cAAcqhD,GACV,OAAOC,KAAKD,EAChB,CAEArhD,cAAcuhD,GACV,IACI,OAAOC,KAAKD,EAChB,CAAE,MAAO5/C,GACL,GAAIA,aAAa8/C,aACb,OAAQ9/C,EAAEoa,MACN,IAAK,wBACD,MAAM,IAAIolC,GAItB,MAAMx/C,CACV,CACJ,EChBE,MAAO+/C,GACXpgD,YAAoB+2C,IAAwB52C,EAAAA,EAAAA,GAAA,2BAAxB,KAAA42C,YAAAA,CAA2B,CAE/CtD,KAAKhM,EAAc0L,GACjB,OAAQA,GACN,KAAKvnC,GAAYiJ,MACf,MAAO,CAAE9V,GAAI0oC,EAAI1oC,EAAI,GAAKuB,KAAKy2C,YAAYhxC,MAAO/G,EAAGyoC,EAAIzoC,GAC3D,KAAK4M,GAAYhI,KACf,MAAO,CACL7E,EAAa,IAAV0oC,EAAI1oC,EAAUuB,KAAKy2C,YAAYhxC,MAAQ,EAAI0hC,EAAI1oC,EAAI,EACtDC,EAAGyoC,EAAIzoC,GAEX,KAAK4M,GAAY0uB,KACf,MAAO,CAAEv7B,EAAG0oC,EAAI1oC,EAAGC,GAAIyoC,EAAIzoC,EAAI,GAAKsB,KAAKy2C,YAAY/wC,QACvD,KAAK4F,GAAYyuB,GACf,MAAO,CACLt7B,EAAG0oC,EAAI1oC,EACPC,EAAa,IAAVyoC,EAAIzoC,EAAUsB,KAAKy2C,YAAY/wC,OAAS,EAAIyhC,EAAIzoC,EAAI,GAG/D,ECrBI,MAAOqhD,GAIXrgD,YAAoB6nC,IAAkB1nC,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,mCAAAA,EAAAA,EAAAA,GAAA,sBAAlB,KAAA0nC,MAAAA,EAClBvnC,KAAKggD,mBAAqB,IAAIF,GAAyBvY,GACvDvnC,KAAK2xC,OAAS,IAAI11B,WAAWsrB,EAAM9hC,MAAQ8hC,EAAM7hC,QAEjD,MAAM2hC,EAAa,IAAIxjB,WAAW,GAElC,IAAK,IAAI3kB,EAAI,EAAGA,EAAIc,KAAK2xC,OAAO3yC,SAAUE,EACxCc,KAAK2xC,OAAOzyC,GAAKmoC,CAErB,CAEII,yBACF,OAAOznC,KAAKggD,kBACd,CAEA9Y,KAAKC,GACH,OAAInnC,KAAKigD,oBAAoB9Y,GACpB,EAGFnnC,KAAK2xC,OAAO3xC,KAAKkgD,eAAe/Y,GACzC,CAEAC,MAAMD,EAAc9oC,GACd2B,KAAKigD,oBAAoB9Y,KAI7BnnC,KAAK2xC,OAAO3xC,KAAKkgD,eAAe/Y,IAAQ9oC,EAC1C,CAEAkJ,OAAOggC,GACL,MAAM4Y,EAAU,IAAIJ,GAAYxY,GAEhCvnC,KAAKogD,aAAaD,GAElBngD,KAAK2xC,OAASwO,EAAQxO,OACtB3xC,KAAKunC,MAAQA,CACf,CAEAC,QACE,MAAMqD,EAAO,IAAIkV,GAAY//C,KAAKunC,OAIlC,OAFAsD,EAAK8G,OAAOn2B,IAAIxb,KAAK2xC,QAEd9G,CACT,CAEQqV,eAAe/Y,GACrB,OAAOA,EAAIzoC,EAAIsB,KAAKunC,MAAM9hC,MAAQ0hC,EAAI1oC,CACxC,CAEQwhD,oBAAoB9Y,GAC1B,OAAOA,EAAI1oC,GAAKuB,KAAKunC,MAAM9hC,OAAS0hC,EAAIzoC,GAAKsB,KAAKunC,MAAM7hC,MAC1D,CAEQ06C,aAAaC,GACnB,MAAMC,EAAe9hD,KAAKF,IAAI0B,KAAKunC,MAAM9hC,MAAO46C,EAAI9Y,MAAM9hC,OACpD86C,EAAgB/hD,KAAKF,IAAI0B,KAAKunC,MAAM7hC,OAAQ26C,EAAI9Y,MAAM7hC,QAE5D,IAAK,IAAIjH,EAAI,EAAGA,EAAI6hD,IAAgB7hD,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAI6hD,IAAiB7hD,EAAG,CACtC,MAAMyoC,EAAe,CAAE1oC,EAAGA,EAAGC,EAAGA,GAEhC2hD,EAAIjZ,MAAMD,EAAKnnC,KAAKknC,KAAKC,GAC3B,CAEJ,E,QCtEI,MAAOqZ,GAOT9gD,YAAY6P,IAAW1P,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,gCACnBG,KAAKiuC,WAAa,IAAI1+B,GAAKoyB,UAC3B3hC,KAAKygD,iBAAmBzgD,KAAKiuC,WAAWjvC,MAC5C,CAEA0hD,yBACI,GAA+B,IAA3B1gD,KAAKiuC,WAAWjvC,OAChB,OAAO,KAGX,MAAM2hD,EAAwB3gD,KAAKiuC,WAC9B2S,eAAcniD,IAAM+hD,GAA2BK,aAAaz2B,SAAS3rB,EAAEolB,WAAW,MAEvF,IAA+B,IAA3B88B,EAGA,OAFA3gD,KAAKiuC,WAAa,GAEX,KAGX,MAAM5vC,EAAQ2B,KAAKiuC,WAAW0S,GAAuB98B,WAAW,GAIhE,OAFA7jB,KAAKiuC,WAAWjvC,OAAS2hD,EAElB,CAAEtiD,QAAOuf,OAAQ5d,KAAKygD,iBAAmBE,EAAwB,EAC5E,CAEQviD,sBACJ,MAAM0iD,EAAQ,IAAIj9B,WAAW,GACvB4F,EAAM,IAAI5F,WAAW,GAE3B,MAAO,CAAC,GAAI,MAAOzN,MAAMC,KAAK,CAAErX,OAAQyqB,EAAMq3B,EAAQ,IAAK,CAACC,EAAI7hD,IAAMA,EAAI4hD,IAC9E,G,OAtCSN,GAA0B,eACIA,GAA2BQ,gB,YCD1DC,G,4bAAZ,SAAYA,GAAgCA,EAAAA,EAAA,gBAAKA,EAAAA,EAAA,wBAASA,EAAAA,EAAA,iBAAM,EAAhE,CAAYA,KAAAA,GAA6B,KAalC,IAAMC,GAAN,MAIHxhD,eAAAG,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,eAFgC,IAG5BG,KAAKmhD,cAAgB,CAAEhgD,GAAI4C,OAAO,qBAAsBq9C,KAAMH,GAA8Bj0C,IAChG,CAEAq0C,SAAYC,EAAgBC,EAAgCvhD,KAAKmhD,eAC7D,MAAM3/C,EAAOxB,KAAKwhD,QAAQC,UAAShjD,GAAKA,EAAE8iD,OAAOpgD,KAAOogD,EAAOpgD,UAElD4F,IAATvF,GAAsBA,EAAK+/C,OAAOH,OAASH,GAA8Bj0C,IACzEhN,KAAKwhD,QAAQn5C,KAAK,CAAEi5C,SAAQC,WACrB//C,EAAK+/C,OAAOH,OAASH,GAA8BS,UAC1DlgD,EAAK8/C,OAASA,EAEtB,CAEApjC,KAAKwJ,GACD,IAAK,IAAIxoB,EAAI,EAAGA,EAAIc,KAAKwhD,QAAQxiD,SAAUE,EAAG,CAC1C,MAAMsC,EAAOxB,KAAKwhD,QAAQtiD,GAEtBsC,EAAK8/C,OAAOvC,OACZ/+C,KAAKwhD,QAAQr1C,OAAOjN,IAAK,GAEzBsC,EAAK8/C,OAAOpjC,KAAKwJ,EAEzB,CAEA,OAAO1nB,KAAKwhD,QAAQxiD,OAAS,CACjC,GA9BSkiD,GAAYv9C,GAAA,EADxBC,EAAAA,EAAAA,KAAY,4BACAs9C,IAiCb97C,EAAUiB,KAAK66C,IAAc56C,SAASC,mBCnChC,MAAOo7C,GACTvjD,2CAA2CwjD,EAAoB9C,GAC3D,MAAM+C,EAAa1jD,EAAS2jD,QAAQF,EAAQhlB,GAAGn+B,EAAGqgD,EAAYliB,GAAGn+B,EAAGqgD,EAAYjiB,GAAGp+B,IAC/EN,EAAS2jD,QAAQF,EAAQ/kB,GAAGp+B,EAAGqgD,EAAYliB,GAAGn+B,EAAGqgD,EAAYjiB,GAAGp+B,GAE9DsjD,EAAa5jD,EAAS2jD,QAAQF,EAAQhlB,GAAGl+B,EAAGogD,EAAYliB,GAAGl+B,EAAGogD,EAAYjiB,GAAGn+B,IAC/EP,EAAS2jD,QAAQF,EAAQ/kB,GAAGn+B,EAAGogD,EAAYliB,GAAGl+B,EAAGogD,EAAYjiB,GAAGn+B,GAEpE,GAAImjD,GAAcE,EAAY,MAAO,CAAEtjD,EAAG,EAAGC,EAAG,GAEhD,GAAImjD,EAAY,CACZ,MAAMG,EAAgBxjD,KAAKM,IAAI8iD,EAAQ/kB,GAAGn+B,EAAIogD,EAAYjiB,GAAGn+B,GACvDujD,EAAmBzjD,KAAKM,IAAI8iD,EAAQhlB,GAAGl+B,EAAIogD,EAAYliB,GAAGl+B,GAChE,MAAO,CACHD,EAAG,EACHC,EAAGsjD,EAAgBC,GAAoBD,EAAgBC,EAE/D,CAEA,GAAIF,EAAY,CACZ,MAAMG,EAAiB1jD,KAAKM,IAAI8iD,EAAQhlB,GAAGn+B,EAAIqgD,EAAYliB,GAAGn+B,GACxD0jD,EAAkB3jD,KAAKM,IAAI8iD,EAAQ/kB,GAAGp+B,EAAIqgD,EAAYjiB,GAAGp+B,GAC/D,MAAO,CACHA,EAAGyjD,EAAiBC,EAAkBD,GAAkBC,EACxDzjD,EAAG,EAEX,CAEA,MAAM0jD,EAAU,CACZT,GAAeU,aACX5hD,EAAAA,GAAgBmhD,EAAQhlB,GAAGn+B,EAAGmjD,EAAQhlB,GAAGl+B,GACzC+B,EAAAA,GAAgBq+C,EAAYliB,GAAGn+B,EAAGqgD,EAAYliB,GAAGl+B,IACrDijD,GAAeU,aACX5hD,EAAAA,GAAgBmhD,EAAQhlB,GAAGn+B,EAAGmjD,EAAQ/kB,GAAGn+B,GACzC+B,EAAAA,GAAgBq+C,EAAYliB,GAAGn+B,EAAGqgD,EAAYjiB,GAAGn+B,IACrDijD,GAAeU,aACX5hD,EAAAA,GAAgBmhD,EAAQ/kB,GAAGp+B,EAAGmjD,EAAQ/kB,GAAGn+B,GACzC+B,EAAAA,GAAgBq+C,EAAYjiB,GAAGp+B,EAAGqgD,EAAYjiB,GAAGn+B,IACrDijD,GAAeU,aACX5hD,EAAAA,GAAgBmhD,EAAQ/kB,GAAGp+B,EAAGmjD,EAAQhlB,GAAGl+B,GACzC+B,EAAAA,GAAgBq+C,EAAYjiB,GAAGp+B,EAAGqgD,EAAYliB,GAAGl+B,KAGnD4jD,EAAU3tC,GAAYgd,IAAIywB,GAAS,CAACz4C,EAAGC,IAAMD,EAAEnJ,SAAWoJ,EAAEpJ,WAElE,MAAO,CAAE/B,EAAG6jD,EAAQC,KAAK,GAAI7jD,EAAG4jD,EAAQC,KAAK,GACjD,CAEQnkD,oBAAoBuL,EAASC,GACjC,MAAO,CACHpJ,SAAUC,EAAAA,GAAckJ,EAAGC,GAC3B24C,KAAM9hD,EAAAA,GAASA,EAAAA,KAAemJ,EAAGD,GAEzC,ECzDE,SAAU64C,GAAgB/jD,GAC5B,MAAoB,kBAANA,GAAkB,YAAaA,CACjD,C,mfCFO,IAAMgkD,GAAN,MAWH/iD,YAA+CgjD,IAAoC7iD,EAAAA,EAAAA,GAAA,kCAAAA,EAAAA,EAAAA,GAAA,gBAVvD,CAAEpB,GAAI,EAAGC,GAAI,KAAGmB,EAAAA,EAAAA,GAAA,gBAEzB,KAAEA,EAAAA,EAAAA,GAAA,gBAEF,KAAEA,EAAAA,EAAAA,GAAA,qBAEGo8B,GAAiB1nB,QAAK1U,EAAAA,EAAAA,GAAA,0BAIC,KAAA6iD,kBAAAA,CAAwC,CAEvF3b,cAAcrb,QACJ1rB,KAAKif,UAAYjf,KAAK0tC,SAAU1tC,KAAKsuC,SAAUtuC,KAAK2iD,cAAe3iD,KAAK4iD,YAAcl3B,CAChG,CAEA8S,QACIx+B,KAAK0iD,kBAAkB/R,SAAS3wC,KAAKsuC,SAAUtuC,KAAKif,SAASxgB,EAAGuB,KAAKif,SAASvgB,GAE9EsB,KAAK4iD,WAAWpkB,MAAMx+B,KAC1B,CAEA4Q,OACI5Q,KAAK0iD,kBAAkB/R,SAAS3wC,KAAK0tC,SAAU1tC,KAAKif,SAASxgB,EAAGuB,KAAKif,SAASvgB,GAE9EsB,KAAK0iD,kBAAkB1R,gBAAgBhxC,KAAKif,UAC5Cjf,KAAK0iD,kBAAkBnS,sBAAwBvwC,KAAK2iD,aACxD,CAEIzQ,eACA,OAAOlyC,KAAKif,QAChB,CAEI4jC,eACA,OAAO7iD,KAAK0tC,QAChB,CAEIoV,eACA,OAAO9iD,KAAKsuC,QAChB,CAEIyU,oBACA,OAAO/iD,KAAK2iD,aAChB,GA5CSF,GAAe9+C,GAAA,EAD3BC,EAAAA,EAAAA,KAYgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KAAkB,wBAA6C,oBAA7C,GAA6C,qBAAjBA,IAAAA,IAAiBzpC,GAAAC,UAX1Eq8C,IA+Cbr9C,EAAUiB,KAAKo8C,IAAiBn8C,SAASwe,mBAIzC1f,EACKiB,KAA0CxB,EAAyBC,wBACnEigB,WAA+DC,GAAO,CAAC/F,EAAmByuB,EAAkBY,EAAkBqU,EAAiCC,KAC5J,MAAMjqC,EAAWqM,EAAIC,UAAUlR,IAAI0uC,IAGnC,OAFA9pC,EAASouB,WAAW9nB,EAAUyuB,EAAUY,EAAUqU,EAAeC,GAE1DjqC,CAAQ,I,mfC1DhB,IAAMqqC,GAAN,MACHtjD,YAA+CgjD,IAAoC7iD,EAAAA,EAAAA,GAAA,iCAApC,KAAA6iD,kBAAAA,CAAwC,CAEvFlkB,MAAM7wB,GACF,MAAMs1C,EAAwBjjD,KAAKkjD,qBAAqBv1C,GACpDA,EAAOo1C,gBAAkBE,IACzBjjD,KAAK0iD,kBAAkBnS,sBAAwB0S,GAGnDjjD,KAAK0iD,kBAAkB1R,gBAAgBhxC,KAAKmjD,oBAAoBx1C,EAAQs1C,GAC5E,CAEQE,oBAAoBx1C,EAAyBy1C,GACjD,MAAMC,EAA4B,IAAK11C,EAAOukC,UAE9C,OAAQkR,GACJ,KAAKnnB,GAAiB34B,KAClB+/C,EAAiB5kD,EAA0B,IAAtBkP,EAAOukC,SAASzzC,EACjCuB,KAAK0iD,kBAAkBl6C,UAAUyjB,QAAU,EAC3Cte,EAAOukC,SAASzzC,EAAI,EACxB,MACJ,KAAKw9B,GAAiBlC,GAClBspB,EAAiB3kD,EAA0B,IAAtBiP,EAAOukC,SAASxzC,EACjCsB,KAAK0iD,kBAAkBl6C,UAAU0jB,KAAO,EACxCve,EAAOukC,SAASxzC,EAAI,EACxB,MACJ,KAAKu9B,GAAiB1nB,MAClB8uC,EAAiB5kD,EAAIkP,EAAOukC,SAASzzC,IAAMuB,KAAK0iD,kBAAkBl6C,UAAUyjB,QAAU,EAClF,EACAte,EAAOukC,SAASzzC,EAAI,EACxB,MACJ,KAAKw9B,GAAiBjC,KAClBqpB,EAAiB3kD,EAAIiP,EAAOukC,SAASxzC,IAAMsB,KAAK0iD,kBAAkBl6C,UAAU0jB,KAAO,EAC/E,EACAve,EAAOukC,SAASxzC,EAAI,EACxB,MAGR,OAAO2kD,CACX,CAEQH,qBAAqBv1C,GACzB,MAAwB,MAApBA,EAAOm1C,SACA7mB,GAAiB34B,KACG,MAApBqK,EAAOm1C,SACP7mB,GAAiBlC,GACG,MAApBpsB,EAAOm1C,SACP7mB,GAAiB1nB,MACG,MAApB5G,EAAOm1C,SACP7mB,GAAiBjC,KAGrBrsB,EAAOo1C,aAClB,GArDSC,GAAcr/C,GAAA,EAD1BC,EAAAA,EAAAA,KAEgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KAAkB,wBAA6C,oBAA7C,GAA6C,qBAAjBA,IAAAA,IAAiBzpC,GAAAC,UAD1E48C,IAwDb59C,EAAUiB,KAAK28C,IAAgB18C,SAASwe,mBAExC1f,EACKiB,KAAyCrB,EAA0BC,UACnEq+C,cAAcN,I,mfCxDZ,IAAMO,GAAN,MAcH7jD,YAA+CgjD,IAAoC7iD,EAAAA,EAAAA,GAAA,kCAAAA,EAAAA,EAAAA,GAAA,cAblD,CAC7BqtC,GAAI,CAAEzuC,GAAI,EAAGC,GAAI,GACjByuC,GAAI,CAAE1uC,GAAI,EAAGC,GAAI,MACpBmB,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,qBAMuBo8B,GAAiB1nB,QAAK1U,EAAAA,EAAAA,GAAA,0BAIC,KAAA6iD,kBAAAA,CAAwC,CAEvF3b,cAAcrb,GACV,MAAMue,EAAS9rC,EAAS+K,SAAS,CAACwiB,EAAK,GAAGwhB,GAAIxhB,EAAK,GAAGyhB,KACtDntC,KAAKiqC,OAAOiD,GAAKjD,EAAO3rC,IACxB0B,KAAKiqC,OAAOkD,GAAKlD,EAAO1rC,KAEvB,CAAEyB,KAAK0tC,SAAU1tC,KAAKsuC,SAAUtuC,KAAK2iD,cAAe3iD,KAAK4iD,YAAcl3B,CAC5E,CAEA8S,QACIx+B,KAAKsuC,SACA/B,SAAQ,CAAC9tC,EAAGwiB,IAAQjhB,KAAK0iD,kBAAkB/R,SAAS5iB,OAAOC,aAAavvB,GAAIuB,KAAKiqC,OAAOiD,GAAGzuC,EAAIwiB,EAAIqL,OAAQtsB,KAAKiqC,OAAOiD,GAAGxuC,EAAIuiB,EAAIsL,OAEvIvsB,KAAK4iD,WAAWpkB,MAAMx+B,KAC1B,CAEA4Q,OACI5Q,KAAK0tC,SACAnB,SAAQ,CAAC9tC,EAAGwiB,IAAQjhB,KAAK0iD,kBAAkB/R,SAAS5iB,OAAOC,aAAavvB,GAAIuB,KAAKiqC,OAAOiD,GAAGzuC,EAAIwiB,EAAIqL,OAAQtsB,KAAKiqC,OAAOiD,GAAGxuC,EAAIuiB,EAAIsL,OAEvIvsB,KAAK0iD,kBAAkB1R,gBAAgBhxC,KAAKiqC,OAAOiD,IACnDltC,KAAK0iD,kBAAkBnS,sBAAwBvwC,KAAK2iD,aACxD,CAEIa,aACA,OAAOxjD,KAAKiqC,MAChB,CAEI8Y,oBACA,OAAO/iD,KAAK2iD,aAChB,GA7CSY,GAAsB5/C,GAAA,EADlCC,EAAAA,EAAAA,KAegBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KAAkB,wBAA6C,oBAA7C,GAA6C,qBAAjBA,IAAAA,IAAiBzpC,GAAAC,UAd1Em9C,IAgDbn+C,EAAUiB,KAAKk9C,IAAwBj9C,SAASwe,mBAIhD1f,EACKiB,KAAiDxB,EAAyBE,wBAC1EggB,WAA6EC,GAAO,CAACilB,EAAwByD,EAA2BY,EAA2BqU,EAAiCC,KACjM,MAAMjqC,EAAWqM,EAAIC,UAAUlR,IAAIwvC,IAGnC,OAFA5qC,EAASouB,WAAWkD,EAAQyD,EAAUY,EAAUqU,EAAeC,GAExDjqC,CAAQ,I,mfC9DhB,IAAMqqC,GAAN,MACHtjD,YAA+CgjD,IAAoC7iD,EAAAA,EAAAA,GAAA,iCAApC,KAAA6iD,kBAAAA,CAAwC,CAEvFlkB,MAAM7wB,GACF3N,KAAK0iD,kBAAkB1R,gBAAgBhxC,KAAKmjD,oBAAoBx1C,GACpE,CAEQw1C,oBAAoBx1C,GACxB,OAAQA,EAAOo1C,eACX,KAAK9mB,GAAiB34B,KAClB,CACI,MAAM7E,EAA2B,IAAvBkP,EAAO61C,OAAOtW,GAAGzuC,EACvBuB,KAAK0iD,kBAAkBl6C,UAAUyjB,QAAU,EAC3Cte,EAAO61C,OAAOtW,GAAGzuC,EAAI,EAEzB,MAAO,CAAEA,IAAGC,EAAGiP,EAAO61C,OAAOtW,GAAGxuC,EACpC,CACJ,KAAKu9B,GAAiBlC,GAClB,CACI,MAAMr7B,EAA2B,IAAvBiP,EAAO61C,OAAOtW,GAAGxuC,EACvBsB,KAAK0iD,kBAAkBl6C,UAAU0jB,KAAO,EACxCve,EAAO61C,OAAOtW,GAAGxuC,EAAI,EAEzB,MAAO,CAAED,EAAGkP,EAAO61C,OAAOtW,GAAGzuC,EAAGC,IACpC,CACJ,KAAKu9B,GAAiB1nB,MAClB,CACI,MAAM9V,EAAIkP,EAAO61C,OAAOrW,GAAG1uC,IAAMuB,KAAK0iD,kBAAkBl6C,UAAUyjB,QAAU,EACxE,EACAte,EAAO61C,OAAOrW,GAAG1uC,EAAI,EAEzB,MAAO,CAAEA,IAAGC,EAAGiP,EAAO61C,OAAOrW,GAAGzuC,EACpC,CACJ,KAAKu9B,GAAiBjC,KAClB,CACI,MAAMt7B,EAAIiP,EAAO61C,OAAOrW,GAAGzuC,IAAMsB,KAAK0iD,kBAAkBl6C,UAAU0jB,KAAO,EACrE,EACAve,EAAO61C,OAAOrW,GAAGzuC,EAAI,EAEzB,MAAO,CAAED,EAAGkP,EAAO61C,OAAOrW,GAAG1uC,EAAGC,IACpC,EAEZ,GA1CSskD,GAAcr/C,GAAA,EAD1BC,EAAAA,EAAAA,KAEgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KAAkB,wBAA6C,oBAA7C,GAA6C,qBAAjBA,IAAAA,IAAiBzpC,GAAAC,UAD1E48C,IA6Cb59C,EAAUiB,KAAK28C,IAAgB18C,SAASwe,mBAExC1f,EACKiB,KAAyCnB,EAAiCD,UAC1Eq+C,cAAcN,I,mfClDZ,IAAMS,GAAN,MACH/jD,YAA+CgjD,IAAoC7iD,EAAAA,EAAAA,GAAA,iCAApC,KAAA6iD,kBAAAA,CAAwC,CAEvFlkB,MAAM7wB,GACF3N,KAAK0iD,kBAAkB1R,gBAAgBrjC,EAAO61C,OAAOtW,GACzD,GALSuW,GAAiB9/C,GAAA,EAD7BC,EAAAA,EAAAA,KAEgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KAAkB,wBAA6C,oBAA7C,GAA6C,qBAAjBA,IAAAA,IAAiBzpC,GAAAC,UAD1Eq9C,IAQbr+C,EAAUiB,KAAKo9C,IAAmBn9C,SAASwe,mBAE3C1f,EACKiB,KAA4CnB,EAAiCC,aAC7Em+C,cAAcG,I,ihBCoBZ,IAAMC,GAAN,cAAyB7gD,EAe5BnD,YAC0D6F,EACvByB,EACFP,EACCk9C,EACE9T,EACG2K,EACD5N,EACNxO,EACUogB,EACyCnT,EACTuY,GACtEv4C,SAAQxL,EAAAA,EAAAA,GAAA,mBAAAA,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,6BAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,2BAAAA,EAAAA,EAAAA,GAAA,iCAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,qCAAAA,EAAAA,EAAAA,GAAA,yCAAAA,EAAAA,EAAAA,GAAA,sDAAAA,EAAAA,EAAAA,GAAA,kBA1BQ,IAAIA,EAAAA,EAAAA,GAAA,uBAEE,IAACA,EAAAA,EAAAA,GAAA,wCAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,8BAAAA,EAAAA,EAAAA,GAAA,mBAMK,CAAC,EAAG,EAAG,GAAK,EAAG,EAAG,KAAEA,EAAAA,EAAAA,GAAA,sBAEZ,OAAIA,EAAAA,EAAAA,GAAA,qBAEpBK,KAAKC,OAG6B,KAAAoF,GAAAA,EACvB,KAAAyB,OAAAA,EACF,KAAAP,SAAAA,EACC,KAAAk9C,aAAAA,EACE,KAAA9T,QAAAA,EACG,KAAA2K,WAAAA,EACD,KAAA5N,iBAAAA,EACN,KAAAxO,QAAAA,EACU,KAAAogB,qBAAAA,EACyC,KAAAnT,yBAAAA,EACT,KAAAuY,sCAAAA,EAGtE5jD,KAAKgH,OAAOH,OACR,CACIpI,EAAG,EACHC,EAAG,EACHuI,EAAGjH,KAAKyG,SAASo9C,gBAAgBvlD,IAAgF,KAAzE0B,KAAKyG,SAASo9C,gBAAgBtlD,IAAMyB,KAAKyG,SAASo9C,gBAAgBvlD,OAGlHiH,EAAGu+C,WAAW,EAAG,EAAG,EAAG,GACvBv+C,EAAG8vB,MAAM9vB,EAAGw+C,kBAGZ/jD,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKgkD,sBAELhkD,KAAK4sC,iBAAiB7F,WAAWgZ,GAAa//C,KAAKyG,SAAS6hC,aAE5DtoC,KAAKikD,QAAUjkD,KAAK4jD,wCACpB5jD,KAAKikD,QAAQ1/B,QACbvkB,KAAKkkD,wBAA0BlkD,KAAKikD,QAAQzgC,SAAStb,QAAO,IAAM,IAElElI,KAAKmkD,cAAgB,IAAI1F,GAAcl5C,GACvCvF,KAAKmkD,cAAc98C,eAAiBrH,KAAKgH,OAAOK,eAChDrH,KAAKmkD,cAAclnC,iBAAiBjd,KAAKokD,aAEzC,MAAMhiC,EAAQpiB,KAAKqrC,yBAAyBhqB,OAAO,CAAE5iB,EAAG,EAAGC,EAAG,GAAK,IAAK,4BAA6B,EAAG,MACxG0jB,EAAM1Z,MAAQ,EAsClB,CAEAgE,yBACI1M,KAAK6vC,QAAQrU,sBAAsBe,wBAAwBr0B,QAAO2qC,GAAO7yC,KAAKw6C,WAAWjK,sBAAwBsC,IACjH7yC,KAAKw6C,WAAWje,wBAAwBr0B,QAAO2qC,GAAO7yC,KAAK6vC,QAAQrU,sBAAsBiB,mBAAmBoW,KAC5G7yC,KAAKw6C,WAAWnK,2BAA2BnoC,QAAO,IAAMlI,KAAKqkD,uBAE7DrkD,KAAK6vC,QAAQ/S,aAAac,uBAAuB11B,QAAO,IAAMlI,KAAKskD,qBACnEtkD,KAAK6vC,QAAQ/S,aAAae,qBAAqB31B,QAAO,IAAMlI,KAAKukD,qBACjEvkD,KAAK6vC,QAAQ/S,aAAagB,gBAAgB51B,QAAO,IAAMlI,KAAKwkD,oBAC5DxkD,KAAK6vC,QAAQ/S,aAAaiB,uBAAuB71B,QAAO,IAAMlI,KAAKykD,iBAEnEzkD,KAAK6vC,QAAQlR,gBAAgBM,eAAe/2B,QAAO,IAAMlI,KAAKo+B,QAAQxtB,SACtE5Q,KAAK6vC,QAAQlR,gBAAgBO,eAAeh3B,QAAO,IAAMlI,KAAKo+B,QAAQvtB,SAEtE7Q,KAAK6vC,QAAQzY,cAAcrlB,QAAQ7J,QAAOiyB,GAAYn6B,KAAK0kD,oCAAoCvqB,KAE/Fn6B,KAAKo+B,QAAQM,iBAAiBx2B,QAAO,IAAMlI,KAAK2kD,wBAEhD3kD,KAAK6vC,QAAQ/M,wBAAwB76B,WAAWC,QAAQ0b,GAAgB5jB,KAAKikD,QAAQvgC,QAAQ,CAAEE,UAE/F5jB,KAAK8sB,OACT,CAEAvlB,SACIvH,KAAKyG,SAASmC,cAAgB,CAAEnD,MAAOzF,KAAKuF,GAAGK,OAAOC,MAAOH,OAAQ1F,KAAKuF,GAAGK,OAAOE,QACpF9F,KAAKyG,SAASd,YAAc3F,KAAKuF,GAAGK,OAAOC,MAAQ7F,KAAKuF,GAAGK,OAAOE,OAElE9F,KAAKgH,OAAOO,SAEZvH,KAAK6vC,QAAQtoC,SAEbvH,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKmkD,cAAc98C,eAAiBrH,KAAKgH,OAAOK,eAChDrH,KAAKqrC,yBAAyBhkC,eAAiBrH,KAAKgH,OAAOK,cAC/D,CAEAtE,aAAahD,GACT,MAAMoH,EAAQsnC,GAAO2Q,kBACjB,CAAE3gD,EAAGsB,EAAE0B,UAAW/C,EAAGqB,EAAE6B,WACvB,CAAE+H,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvB9J,KAAKgH,OAAOK,eACZrH,KAAKuF,GAAGK,QAEZ5F,KAAKgH,OAAOE,UAAU,CAAEzI,EAAG0I,EAAM1I,EAAGC,EAAGyI,EAAMzI,IAE7CsB,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKmkD,cAAc98C,eAAiBrH,KAAKgH,OAAOK,eAChDrH,KAAKqrC,yBAAyBhkC,eAAiBrH,KAAKgH,OAAOK,cAC/D,CAEA7D,SAASzD,GACL,MAAM02B,EAAcz2B,KAAK6vC,QAAQlqB,MAAM5lB,GAEvC,IAAoB,IAAhB02B,EAAuB,CACvBz2B,KAAK4kD,YAAY5kD,KAAK4jD,yCACtB,MAAM7I,EAAmB,IAAK/6C,KAAKw6C,WAAWpJ,cAE9CpxC,KAAKw6C,WAAW70B,MAAM5lB,GAEtBC,KAAKw+C,qBAAqBH,UAAU76C,SAASu3C,EACjD,MAAWyH,GAAgB/rB,IACvBz2B,KAAK4kD,YAAYnuB,GAGrB,MAAMoa,EAAUpC,GAAOQ,UAAU,CAAExwC,EAAGsB,EAAEM,QAAS3B,EAAGqB,EAAEO,QAAS2G,EAAG,GAAKjH,KAAKgH,OAAOK,eAAgBrH,KAAKuF,GAAGK,QACrGkrC,EAASrC,GAAOQ,UAAU,CAAExwC,EAAGsB,EAAEM,QAAS3B,EAAGqB,EAAEO,QAAS2G,EAAG,GAAKjH,KAAKgH,OAAOK,eAAgBrH,KAAKuF,GAAGK,QAEpGqE,EAAeX,GAAa8lC,UAC9B,CAAEzlC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvB,CAAEH,EAAG,CAACknC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAAKjnC,EAAG,CAACknC,EAAO,GAAIA,EAAO,GAAIA,EAAO,MAEhF9wC,KAAKokD,YAAY/7C,KAAKwoC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAI5mC,EAAa,GAAIA,EAAa,GAAIA,EAAa,IAEzGjK,KAAKmkD,cAAclnC,iBAAiBjd,KAAKokD,YAC7C,CAEA1gD,WAAW3D,GACP,MAAM8kD,EAAyB,IAAIxF,GAC/Bt/C,EAAE+kD,OAAS,EAAI,KAAO,MACtB9kD,KAAKgH,OACLhH,KAAKyG,SAASo9C,iBAElB7jD,KAAK2jD,aAAatC,SACdwD,EACA,CAAE1jD,GAAI,cAAeigD,KAAMH,GAA8BS,SACjE,CAEAz+C,mBACIjD,KAAK+kD,gBAAkB/kD,KAAKgH,OAAOI,SAASH,CAChD,CAEA9D,YAAYD,GACRlD,KAAKgH,OAAOH,OAAO,CACfI,EAAG9I,EAAS41B,MAAM/zB,KAAK+kD,gBAAkB7hD,EAAMlD,KAAKyG,SAASo9C,gBAAgBvlD,IAAK0B,KAAKyG,SAASo9C,gBAAgBtlD,OAGpHyB,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKmkD,cAAc98C,eAAiBrH,KAAKgH,OAAOK,eAChDrH,KAAKqrC,yBAAyBhkC,eAAiBrH,KAAKgH,OAAOK,cAC/D,CAEA29C,UAAUjlD,GACNC,KAAKikD,QAAQvgC,QAAQ3jB,EACzB,CAEOsb,UACHrb,KAAKilD,WAAY,CACrB,CAEQn4B,QACJo4B,uBAAsB,IAAMllD,KAAKmlD,UAAUjlD,KAAKC,MAAQH,KAAKolD,gBACjE,CAEQD,UAAUz9B,GAiBd,GAhBA1nB,KAAKuF,GAAG8vB,MAAMr1B,KAAKuF,GAAGw+C,iBAAmB/jD,KAAKuF,GAAG8/C,iBAAmBrlD,KAAKuF,GAAG+vB,oBAExEt1B,KAAK2jD,aAAazlC,KAAKwJ,KACvB1nB,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKmkD,cAAc98C,eAAiBrH,KAAKgH,OAAOK,eAChDrH,KAAKqrC,yBAAyBhkC,eAAiBrH,KAAKgH,OAAOK,gBAG/DrH,KAAKw6C,WAAWt8B,OAChBle,KAAKqrC,yBAAyBntB,OAG9Ble,KAAKuF,GAAG8vB,MAAMr1B,KAAKuF,GAAG8/C,kBAEtBrlD,KAAK6vC,QAAQ3xB,OAETle,KAAKilD,UAAW,CAChB,MAAM9kD,EAAMD,KAAKC,MACXunB,EAAUvnB,EAAMH,KAAKolD,cAC3BF,uBAAsB,IAAMllD,KAAKmlD,UAAUz9B,KAC3C1nB,KAAKolD,cAAgBjlD,CACzB,CACJ,CAEQuM,yBACJ,IAAIuhC,EAAa,GAEjB,IACI,MAAOqX,SAAoB5jD,OAAO6jD,mBAAmB,CAAEC,UAAU,IAEjE,GAAwB,SAApBF,EAAWG,KACX,OAEJzlD,KAAK0lD,eAAiBJ,EAAWnrC,KACjC,MAAMwrC,QAAaL,EAAWM,UAE9B3X,QAAmB0X,EAAK3wC,MAC5B,CAAE,MAAOjV,GACL,GAAIA,aAAa8/C,aAAc,CAC3B,OAAQ9/C,EAAEoa,MACN,IAAK,aACD,OAGRna,KAAK6vC,QAAQvJ,SAASvF,UAAUhhC,EAAE27C,QACtC,CAEA,MACJ,CAGA,MAAMmK,EAAY,IAAIrF,GAA2BvS,GAE3C6X,EAAeD,EAAUnF,yBAE/B,GAAqB,OAAjBoF,EAAuB,CACvB,IAAIC,EAAoB,EAExB,KAAOF,EAAUnF,2BAA4BqF,GAE7C,IAAIC,EAAa,iCAAiCF,EAAaznD,aAAaynD,EAAaloC,SASzF,OAPImoC,EAAoB,IACpBC,GAAc,QAAQD,eAG1B/lD,KAAK6vC,QAAQvJ,SACRvF,UAAUilB,EAGnB,CAEAhmD,KAAKimD,uBAAuBhY,GAE5BjuC,KAAKo+B,QAAQK,QACbynB,GAAOC,QAAQ,CAAEhsC,KAAM,eAEvBna,KAAKgkD,qBACT,CAEQt3C,yBACJ,IACI,MAAM44C,QAAmB5jD,OAAO0kD,mBAAmB,CAAEC,cAAermD,KAAK0lD,gBAAkB,KAErFY,QAAehB,EAAWiB,uBAE1BD,EAAOE,MAAMxmD,KAAKymD,0BAElBH,EAAOI,OACjB,CAAE,MAAO3mD,GACL,GAAIA,aAAa8/C,aAAc,CAC3B,OAAQ9/C,EAAEoa,MACN,IAAK,aACD,OAGRna,KAAK6vC,QAAQvJ,SAASvF,UAAUhhC,EAAE27C,QACtC,CACJ,CACJ,CAEQ+K,mBACJ,IAAIE,EAAe,GACnB,IAAK,IAAIjoD,EAAI,EAAGA,EAAIsB,KAAKyG,SAAS6hC,YAAY5iC,SAAUhH,EAAG,CACvD,IAAI8K,EAAO,GAEX,IAAK,IAAI/K,EAAI,EAAGA,EAAIuB,KAAKyG,SAAS6hC,YAAY7iC,QAAShH,EACnD+K,GAAQukB,OAAOC,aAAahuB,KAAK4sC,iBAAiB1F,KAAK,CAAEzoC,IAAGC,OAGhEioD,GAAgBn9C,EAAKo9C,UAAY,IACrC,CAEA,OAAOD,CACX,CAEQnC,kBACJ,MAAM7E,EAAUH,GAAuBqH,OAAO7mD,KAAKymD,oBAEnDP,GAAOC,QAAQ,CAAEhsC,KAAM,QAAS2sC,OAAQ,CAAEnH,YAC9C,CAEQ8E,eACJ/mD,QAAQC,IAAI,gBAChB,CAEAsoD,uBAAuBhY,GACnBjuC,KAAK+mD,wBAEL,MAAM5Y,EAAcF,EAAWjkB,MAAM,SAErC,IAAK,IAAIuC,EAAM,EAAGA,EAAM4hB,EAAYnvC,SAAUutB,EAAK,CAC/C,MAAM/iB,EAAO2kC,EAAY5hB,GACzB,IAAK,IAAID,EAAS,EAAGA,EAAS9iB,EAAKxK,SAAUstB,EACzCtsB,KAAKw6C,WAAW7J,SAASnnC,EAAK8iB,GAASA,EAAQC,EAEvD,CAEAvsB,KAAK6vC,QAAQ/S,aAAaY,cAAgB19B,KAAK4sC,iBAAiB37B,KACpE,CAEQ0zC,sBACJ3kD,KAAK6vC,QAAQ/S,aAAaY,cAAgB19B,KAAK4sC,iBAAiB37B,KACpE,CAEIq1B,eACA,OAAOtmC,KAAK6vC,QAAQvJ,QACxB,CAEQ+d,qBACJ,MAAM2C,EAAWhnD,KAAKw6C,WAAWnJ,iBAC3BC,EAAQ5nC,EAAAA,GAAmBA,EAAAA,KAAes9C,EAASpqB,GAAI58B,KAAKgH,OAAOK,gBACnEkqC,EAAQ7nC,EAAAA,GAAmBA,EAAAA,KAAes9C,EAASnqB,GAAI78B,KAAKgH,OAAOK,gBAEnE4/C,EAAcv9C,EAAAA,GAASA,EAAAA,KAAe6nC,EAAOD,GAC7C4V,EAAyBvF,GAAewF,oCAC1C,CAAEvqB,GAAI,CAAEn+B,EAAG6yC,EAAM,GAAI5yC,EAAG4yC,EAAM,IAAMzU,GAAI,CAAEp+B,EAAG8yC,EAAM,GAAI7yC,EAAG6yC,EAAM,KAChE,CAAE3U,GAAI,CAAEn+B,GAAI,EAAGC,GAAI,GAAKm+B,GAAI,CAAEp+B,EAAG,EAAGC,EAAG,KAErC0oD,EAAgB3mD,EAAAA,GAAgBymD,EAAuBzoD,EAAGyoD,EAAuBxoD,GAEvF,GAAIwoD,EAAuBzoD,EAAI,EAAG,CAC9B,MAAM4oD,EAAoBJ,EAAY,GAAKjnD,KAAKw6C,WAAWpJ,aAAa3yC,EACxE2oD,EAAc,IAAM5oD,KAAKF,IAAI+oD,EAAmB,EACpD,MAAO,GAAIH,EAAuBzoD,EAAI,EAAG,CACrC,MAAM6oD,EAAqBL,EAAY,IAAMjnD,KAAKyG,SAAS6hC,YAAY7iC,MAAQzF,KAAKw6C,WAAWpJ,aAAa3yC,EAAI,GAChH2oD,EAAc,IAAM5oD,KAAKF,IAAIgpD,EAAoB,EACrD,CAEA,GAAIJ,EAAuBxoD,EAAI,EAAG,CAC9B,MAAM6oD,EAAsBN,EAAY,IAAMjnD,KAAKyG,SAAS6hC,YAAY5iC,OAAS1F,KAAKw6C,WAAWpJ,aAAa1yC,EAAI,GAClH0oD,EAAc,IAAM5oD,KAAKF,IAAIipD,EAAqB,EACtD,MAAO,GAAIL,EAAuBxoD,EAAI,EAAG,CACrC,MAAM8oD,EAAmBP,EAAY,GAAKjnD,KAAKw6C,WAAWpJ,aAAa1yC,EACvE0oD,EAAc,IAAM5oD,KAAKF,IAAIkpD,EAAkB,EACnD,CAGA,MAAMzY,EAAiB,CACnBqY,EAAc,GAAKpnD,KAAKuF,GAAGK,OAAOC,MAAQ,EAC1CuhD,EAAc,GAAKpnD,KAAKuF,GAAGK,OAAOE,OAAS,GAGzCw7C,EAAS,IAAIzC,GACf7+C,KAAKgH,OACL+nC,EACA/uC,KAAKuF,GAAGK,QAEZ5F,KAAK2jD,aAAatC,SACdC,EACA,CAAEngD,GAAI,uBAAwBigD,KAAMH,GAA8BS,SAC1E,CAEQqF,wBACJ/mD,KAAK4sC,iBAAiB7F,WAAWgZ,GAAa//C,KAAKyG,SAAS6hC,aAC5DtoC,KAAKw6C,WAAWvP,OACpB,CAEQ2Z,YAAY58C,GAChBhI,KAAKikD,QAAQz/B,OACbxkB,KAAKkkD,0BAELlkD,KAAKikD,QAAUj8C,EACfhI,KAAKikD,QAAQ1/B,QACbvkB,KAAKikD,QAAQzgC,SAAStb,QAAO,IAAMlI,KAAK4kD,YAAY5kD,KAAK4jD,0CAC7D,CAEQc,oCAAoCvqB,GACxCn6B,KAAK6vC,QAAQ/S,aAAaa,qBAAuBxD,EAASC,QAE1DD,EAASC,QACLp6B,KAAK6vC,QAAQlR,gBAAgBQ,OAC7Bn/B,KAAK6vC,QAAQlR,gBAAgBS,SAEjCp/B,KAAK6vC,QAAQvV,aAAa/U,QAAU4U,EAASC,OACjD,CAEQ4pB,sBACJ,MAAMyD,EAA8BznD,KAAK6vC,QAAQrU,sBAAsBmB,WAAWE,GAC5Eh0B,EAAS,GACT6+C,EAAqC,CACvCjpD,EAAGgpD,EAA4BhpD,EAAIoK,EACnCnK,EAAGsB,KAAKyG,SAASmC,cAAclD,OAAS+hD,EAA4B/oD,GAGlEmyC,EAAUpC,GAAOQ,UAAU,IAAKyY,EAA8BzgD,EAAG,GAAKjH,KAAKgH,OAAOK,eAAgBrH,KAAKuF,GAAGK,QAC1GkrC,EAASrC,GAAOQ,UAAU,IAAKyY,EAA8BzgD,EAAG,GAAKjH,KAAKgH,OAAOK,eAAgBrH,KAAKuF,GAAGK,QAEzGqE,EAAeX,GAAa8lC,UAC9B,CAAEzlC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvB,CAAEH,EAAG,CAACknC,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAAKjnC,EAAG,CAACknC,EAAO,GAAIA,EAAO,GAAIA,EAAO,MAEhF7mC,EAAa,IAAMjK,KAAKyG,SAAS6hC,YAAY5iC,OAAS1F,KAAKw6C,WAAWhS,SAEtExoC,KAAKgH,OAAOE,UAAU,CAClBzI,GAAIwL,EAAa,GACjBvL,GAAIuL,EAAa,KAGrBjK,KAAKw6C,WAAWnzC,eAAiBrH,KAAKgH,OAAOK,eAC7CrH,KAAKqrC,yBAAyBhkC,eAAiBrH,KAAKgH,OAAOK,cAC/D,GAhcSq8C,GAAU//C,GAAA,EADtBC,EAAAA,EAAAA,KAiBQoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBACtBkC,GAAA,GAAAC,EAAAA,EAAAA,GAAOO,IACPR,GAAA,GAAAC,EAAAA,EAAAA,GAAOX,IACPU,GAAA,GAAAC,EAAAA,EAAAA,GAAOi7C,KACPl7C,GAAA,GAAAC,EAAAA,EAAAA,GAAO2/B,KACP5/B,GAAA,GAAAC,EAAAA,EAAAA,GAAO2pC,KACP5pC,GAAA,GAAAC,EAAAA,EAAAA,GAAO6gC,KACP9gC,GAAA,GAAAC,EAAAA,EAAAA,GAAO+3B,KACPh4B,GAAA,GAAAC,EAAAA,EAAAA,GAAO+3C,KACPh4C,GAAA,GAAAC,EAAAA,EAAAA,GAAOgqB,KAAkBjqB,GAAA,GAAA2vB,EAAAA,EAAAA,GAAMjxB,EAA0BC,cACzDqB,GAAA,IAAAC,EAAAA,EAAAA,GAAOpC,EAAeW,wCAAsC,wBAVmB,oBAUnB,GAVmB,qBAAtB0B,wBAAAA,wBAAsBC,GAAAC,OAC5B,oBAD4B6E,GAC5B,qBAAbzE,GAAAA,GAAayE,GAAA7E,OACF,oBADE6c,GACF,qBAAX3d,GAAAA,GAAW2d,GAAA7c,OACM,oBADN8c,GACM,qBAAZg+B,IAAAA,IAAYh+B,GAAA9c,OACD,oBADCgd,GACD,qBAAdwiB,IAAAA,IAAcxiB,GAAAhd,OACS,oBADT8wB,GACS,qBAAjB0Y,IAAAA,IAAiB1Y,GAAA9wB,OACI,oBADJqgC,GACI,qBAAhBK,IAAAA,IAAgBL,GAAArgC,OACrB,oBADqBsgC,GACrB,qBAAV1I,IAAAA,IAAU0I,GAAAtgC,OACiC,oBADjCugC,GACiC,qBAApBqX,IAAAA,IAAoBrX,GAAAvgC,OACwC,oBADxCwgC,GACwC,qBAAf3W,IAAAA,IAAe2W,GAAAxgC,OAC0B,oBAD1BygC,GAC0B,qBAArCriC,EAAAA,uCAAAA,EAAAA,uCAAqCqiC,GAAAzgC,UA1B7Is9C,IAmcbt+C,EAAUiB,KAAKq9C,IAAYp9C,SAASC,mBAAmByM,aAAarG,I,mfCle7D,IAAMg7C,GAAN,MACHjoD,YAAkE6F,IAA0B1F,EAAAA,EAAAA,GAAA,kBAA1B,KAAA0F,GAAAA,CAA8B,CAEhGmH,yBACItH,EAAU2O,IAAIzO,GAAasD,cAAgB,CAAEnD,MAAOzF,KAAKuF,GAAGK,OAAOC,MAAOH,OAAQ1F,KAAKuF,GAAGK,OAAOE,cAE3F9F,KAAK4nD,yBACf,CAEQl7C,gCACJtH,EACKiB,KAAgBxC,EAAeG,WAC/B6jD,gBAAgBp5B,GAAiB5b,MAAM,CAAEga,WAAY,CAAEC,MAAO,IAAKE,IAAK,KAAOQ,KAAM,CAAEE,KAAM,SAAUD,KAAM,OAElHroB,EACKiB,KAAmBxC,EAAeK,kBAClC2jD,gBAAgB7nD,KAAK8nD,aAAa1iD,EAAU2O,IAAelQ,EAAeG,WAAWgK,QAE1F5I,EACKiB,KAAkBxC,EAAeI,WACjC4jD,sBAAsBziD,EAAU2iD,SAASh4C,KAE9C3K,EACKiB,KAAmBxC,EAAeM,kBAClC0jD,gBAAgB7nD,KAAK8nD,aAAa1iD,EAAU2O,IAAiBlQ,EAAeI,WAAW+J,OAChG,CAEQ85C,aAAa7b,GACjB,MAAM+b,EAAUhoD,KAAKuF,GAAG0iD,iBAAmBp6C,GAAQ,4BAYnD,OAVA7N,KAAKuF,GAAG2iD,cAAcloD,KAAKuF,GAAG4iD,UAC9BnoD,KAAKuF,GAAGyc,YAAYhiB,KAAKuF,GAAG0c,WAAY+lC,GAExChoD,KAAKuF,GAAG6iD,cAAcpoD,KAAKuF,GAAG0c,WAAYjiB,KAAKuF,GAAG8iD,eAAgBroD,KAAKuF,GAAG+iD,eAC1EtoD,KAAKuF,GAAG6iD,cAAcpoD,KAAKuF,GAAG0c,WAAYjiB,KAAKuF,GAAGgjD,eAAgBvoD,KAAKuF,GAAG+iD,eAC1EtoD,KAAKuF,GAAG6iD,cAAcpoD,KAAKuF,GAAG0c,WAAYjiB,KAAKuF,GAAGijD,mBAAoBxoD,KAAKuF,GAAGkjD,QAC9EzoD,KAAKuF,GAAG6iD,cAAcpoD,KAAKuF,GAAG0c,WAAYjiB,KAAKuF,GAAGmjD,mBAAoB1oD,KAAKuF,GAAGkjD,QAE9EzoD,KAAKuF,GAAGojD,WAAW3oD,KAAKuF,GAAG0c,WAAY,EAAGjiB,KAAKuF,GAAGqjD,KAAM5oD,KAAKuF,GAAGqjD,KAAM5oD,KAAKuF,GAAGyW,cAAeiwB,GAEtF+b,CACX,GAzCSL,GAAkBhkD,GAAA,EAD9BC,EAAAA,EAAAA,KAEgBoC,GAAA,GAAAC,EAAAA,EAAAA,GAAOpC,EAAeC,wBAAsB,wBAAmC,oBAAnC,GAAmC,qBAAtBoC,wBAAAA,wBAAsBC,GAAAC,UADnFuhD,IA4CbviD,EAAUiB,KAAKshD,IAAoBrhD,SAASC,mBAAmByM,aAAarG,I,0BC7C5E,IAA4Bk8C,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,cACRC,MAAO,CACPljD,MAAO,CAAEgT,KAAMja,QACfkH,OAAQ,CAAE+S,KAAMja,SAEhBoqD,MAAO,CAAC,eAAgB,UACxBC,MAAMC,GAAS,KAAEC,IAEnB,MAAMJ,EAAQG,EAMRE,GAAaC,EAAAA,GAAAA,IAAI,GACjBC,GAAcD,EAAAA,GAAAA,IAAI,GAElBzjD,GAASyjD,EAAAA,GAAAA,MACf,IAAIp6C,EAAyC,KAE7C,MAAMs6C,GAAcC,EAAAA,EAAAA,KAClB,WAAwBziD,IAAhBgiD,EAAMljD,YAAwCkB,IAAjBgiD,EAAMjjD,UAGvCD,GAAQ2jD,EAAAA,EAAAA,KAAS,IAAMT,EAAMljD,OAASujD,EAAW/qD,QACjDyH,GAAS0jD,EAAAA,EAAAA,KAAS,IAAMT,EAAMjjD,QAAUwjD,EAAYjrD,QACpDorD,GAAWD,EAAAA,EAAAA,KAAS,IAAMD,EAAYlrD,MAAQqrD,EAAY7jD,EAAMxH,OAAS,SACzEsrD,GAAYH,EAAAA,EAAAA,KAAS,IAAMD,EAAYlrD,MAAQqrD,EAAY5jD,EAAOzH,OAAS,SAmBjF,SAASurD,IACHhkD,EAAOvH,QACTuH,EAAOvH,MAAMwH,MAAQA,EAAMxH,MAC3BuH,EAAOvH,MAAMyH,OAASA,EAAOzH,MAE7B4Q,GAASy/B,SAAS,EAAG,EAAG7oC,EAAMxH,MAAOyH,EAAOzH,OAEhD,CAEA,SAASwrD,IACPT,EAAW/qD,OAASuH,EAAOvH,OAAOyrD,aAAe,GAAKpoD,OAAOC,iBAC7D2nD,EAAYjrD,OAASuH,EAAOvH,OAAO0rD,cAAgB,GAAKroD,OAAOC,iBAE/DioD,IAEAT,EAAK,SACP,CAEA,SAASa,SACcjjD,IAAjBnB,EAAOvH,OAKX4Q,EAAUrJ,EAAOvH,MAAMiR,WAAW,SAAU,CAAE26C,SAAS,IAEvC,OAAZh7C,GAKJA,EAAQ4lB,OAAO5lB,EAAQi7C,WAEvBj7C,EAAQ4lB,OAAO5lB,EAAQk7C,YAEvBl7C,EAAQ4lB,OAAO5lB,EAAQm7C,OACvBn7C,EAAQo7C,UAAUp7C,EAAQq7C,UAAWr7C,EAAQs7C,qBAE7CpB,EAAK,eAAgBl6C,IAXnBvR,QAAQO,MAAM,oCAPdP,QAAQO,MAAM,2BAmBlB,CAEA,SAASyrD,EAAYrrD,GACnB,MAAO,GAAGA,KACZ,CAEA,OA9DAmsD,EAAAA,EAAAA,KAAU,KACJjB,EAAYlrD,MACdurD,KAEAC,IACAnoD,OAAO+oD,iBAAiB,SAAUZ,IAGpCG,GAAc,KAGhBU,EAAAA,EAAAA,KAAgB,KACTnB,EAAYlrD,OACfqD,OAAOipD,oBAAoB,SAAUd,EACvC,IAgDK,CAACe,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,SAAU,CAClDC,QAAS,SACT3B,IAAKzjD,EACLqP,OAAOg2C,EAAAA,GAAAA,IAAgB,CAAEplD,MAAO4jD,EAASprD,MAAOyH,OAAQ6jD,EAAUtrD,SACjE,KAAM,GAEX,ICxGA,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,UCMA,IAA4BwqD,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,aACRC,MAAO,CAAEpJ,QAAS,CAAEuL,UAAU,EAAOryC,KAAMkV,OAAQo9B,QAAS,KAC5DlC,MAAMC,GAER,MAAMH,EAAQG,EAEd,IAAIkC,EAMJ1+C,eAAe2+C,EAAep8C,GAC5B7J,EACGiB,KAA6BxC,EAAeC,uBAC5C+jD,gBAAgB54C,SAEb7J,EAAU2iD,SAASJ,IAEzByD,QAAgBhmD,EAAU2iD,SAASrE,IACnC0H,EAAQ7jD,SAER+jD,GACF,CAEA,SAASzB,IACPuB,GAAS7jD,QACX,CAEA,SAASnE,EAAYrD,GACnBqrD,GAAShoD,YAAYrD,EACvB,CAEA,SAASD,EAAYC,GACnBqrD,GAAStrD,YAAYC,EACvB,CAEA,SAASQ,EAAUR,GACjBqrD,GAAS7qD,UAAUR,EACrB,CAEA,SAAS0D,EAAQ1D,GACfqrD,GAAS3nD,QAAQ1D,EACnB,CAEA,SAASilD,EAAUjlD,GACjBqrD,GAASpG,UAAUjlD,EACrB,CAEA,SAASwB,EAAYxB,GACnBqrD,GAAS7pD,YAAYxB,EACvB,CAEA,SAASgB,EAAahB,GACpBqrD,GAASrqD,aAAahB,EACxB,CAEA,SAASkC,EAAWlC,GAClBqrD,GAASnpD,WAAWlC,EACtB,CAEA,SAASurD,IACP,GAAIvC,EAAMpJ,QAAQ3gD,OAAS,EACzB,IACE,MAAMivC,EAAauR,GAAuB+L,OAAOxC,EAAMpJ,SACvDyL,EAAQnF,uBAAuBhY,EACjC,CAAE,MAAOluC,GACHA,aAAad,OACfmsD,EAAQ9kB,SAASvF,UAAUhhC,EAAE27C,QAEjC,CAEJ,CAGA,OAjEAgP,EAAAA,EAAAA,KAAgB,IAAMU,EAAQ/vC,YAiEvB,CAACuvC,EAAUC,MACRC,EAAAA,EAAAA,OAAc3tD,EAAAA,EAAAA,IAAaquD,GAAc,CAC/CC,UAAW,GACXC,SAAU,IACVC,eAAgBN,EAChBO,SAAU/B,EACVgC,YAAazoD,EACb0oD,YAAahsD,EACbisD,UAAWxrD,EACXyrD,eAAgBvoD,EAChBwoD,UAAWjH,EACXkH,YAAa3qD,EACb4qD,aAAcprD,EACdqrD,WAAYnqD,IAGhB,ICvGA,MAAM,GAAc,GAEpB,UCDA,MAAMoqD,GAAgC,CACpC,CACEC,KAAM,IACNnyC,KAAM,aACN4uC,OAAO,EACP/gD,UAAWukD,IAEb,CACED,KAAM,kBACNnyC,KAAM,QACN4uC,OAAO,EACP/gD,UAAWukD,KAITrG,IAASsG,EAAAA,EAAAA,IAAa,CAC1BpuB,SAASquB,EAAAA,EAAAA,IAAiBC,iBAC1BL,YAGF,U,SCtBA,IAAeM,EAAAA,GAAAA,IAAY,CACzBC,MAAO,CAAC,EACRC,QAAS,CAAC,EACVC,UAAW,CAAC,EACZC,QAAS,CAAC,EACVC,QAAS,CAAC,ICIZtgD,eAAeugD,KAEX,MAAMC,EAAS,IAAIC,SAAS,SAAU,wEAChCD,EAAOE,QAEbC,EAAAA,EAAAA,IAAUC,GAAKC,IAAIC,IAAOD,IAAIrH,IAAQuH,MAAM,OAChD,CAEAR,I,GClBIS,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7mD,IAAjB8mD,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAU7iC,EAAI1f,GACtD,IAAGuiD,EAAH,CAMA,IAAIC,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIN,EAASnvD,OAAQyvD,IAAK,CACrCH,EAAWH,EAASM,GAAG,GACvBhjC,EAAK0iC,EAASM,GAAG,GACjB1iD,EAAWoiD,EAASM,GAAG,GAE3B,IAJA,IAGIC,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAAStvD,OAAQ2vD,MACpB,EAAX5iD,GAAsBwiD,GAAgBxiD,IAAa3F,OAAO2P,KAAK43C,EAAoBS,GAAG9rD,OAAM,SAASshB,GAAO,OAAO+pC,EAAoBS,EAAExqC,GAAK0qC,EAASK,GAAK,IAChKL,EAASniD,OAAOwiD,IAAK,IAErBD,GAAY,EACT3iD,EAAWwiD,IAAcA,EAAexiD,IAG7C,GAAG2iD,EAAW,CACbP,EAAShiD,OAAOsiD,IAAK,GACrB,IAAInkB,EAAI7e,SACE1kB,IAANujC,IAAiB+jB,EAAS/jB,EAC/B,CACD,CACA,OAAO+jB,CArBP,CAJCtiD,EAAWA,GAAY,EACvB,IAAI,IAAI0iD,EAAIN,EAASnvD,OAAQyvD,EAAI,GAAKN,EAASM,EAAI,GAAG,GAAK1iD,EAAU0iD,IAAKN,EAASM,GAAKN,EAASM,EAAI,GACrGN,EAASM,GAAK,CAACH,EAAU7iC,EAAI1f,EAwB/B,C,eC5BA4hD,EAAoBzuD,EAAI,SAAS6uD,GAChC,IAAIa,EAASb,GAAUA,EAAOc,WAC7B,WAAa,OAAOd,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAJ,EAAoB7jD,EAAE8kD,EAAQ,CAAEjlD,EAAGilD,IAC5BA,CACR,C,eCNAjB,EAAoB7jD,EAAI,SAASgkD,EAASgB,GACzC,IAAI,IAAIlrC,KAAOkrC,EACXnB,EAAoBnhD,EAAEsiD,EAAYlrC,KAAS+pC,EAAoBnhD,EAAEshD,EAASlqC,IAC5Exd,OAAO2oD,eAAejB,EAASlqC,EAAK,CAAEorC,YAAY,EAAMj7C,IAAK+6C,EAAWlrC,IAG3E,C,eCPA+pC,EAAoBsB,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOlvD,MAAQ,IAAImvD,SAAS,cAAb,EAChB,CAAE,MAAOpvD,GACR,GAAsB,kBAAX2B,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBisD,EAAoBnhD,EAAI,SAAS4iD,EAAKC,GAAQ,OAAOjpD,OAAOkpD,UAAUC,eAAetB,KAAKmB,EAAKC,EAAO,C,eCCtG1B,EAAoBrjB,EAAI,SAASwjB,GACX,qBAAX/pD,QAA0BA,OAAOyrD,aAC1CppD,OAAO2oD,eAAejB,EAAS/pD,OAAOyrD,YAAa,CAAEnxD,MAAO,WAE7D+H,OAAO2oD,eAAejB,EAAS,aAAc,CAAEzvD,OAAO,GACvD,C,eCDA,IAAIoxD,EAAkB,CACrB,IAAK,GAaN9B,EAAoBS,EAAEO,EAAI,SAASe,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B3jB,GAC/D,IAKI2hB,EAAU8B,EALVpB,EAAWriB,EAAK,GAChB4jB,EAAc5jB,EAAK,GACnB6jB,EAAU7jB,EAAK,GAGIwiB,EAAI,EAC3B,GAAGH,EAASrT,MAAK,SAAS95C,GAAM,OAA+B,IAAxBsuD,EAAgBtuD,EAAW,IAAI,CACrE,IAAIysD,KAAYiC,EACZlC,EAAoBnhD,EAAEqjD,EAAajC,KACrCD,EAAoBO,EAAEN,GAAYiC,EAAYjC,IAGhD,GAAGkC,EAAS,IAAIzB,EAASyB,EAAQnC,EAClC,CAEA,IADGiC,GAA4BA,EAA2B3jB,GACrDwiB,EAAIH,EAAStvD,OAAQyvD,IACzBiB,EAAUpB,EAASG,GAChBd,EAAoBnhD,EAAEijD,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO/B,EAAoBS,EAAEC,EAC9B,EAEI0B,EAAqBC,KAAK,uBAAyBA,KAAK,wBAA0B,GACtFD,EAAmB7tD,QAAQytD,EAAqBtpD,KAAK,KAAM,IAC3D0pD,EAAmB1nD,KAAOsnD,EAAqBtpD,KAAK,KAAM0pD,EAAmB1nD,KAAKhC,KAAK0pD,G,IC/CvF,IAAIE,EAAsBtC,EAAoBS,OAAErnD,EAAW,CAAC,MAAM,WAAa,OAAO4mD,EAAoB,KAAO,IACjHsC,EAAsBtC,EAAoBS,EAAE6B,E","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/CameraService.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype MoveCameraFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private moveCamera: MoveCameraFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.moveCamera({\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnCameraMove(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove({\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnStepZoom(e);\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnCameraMove(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnStepZoom(e: WheelEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) {\n        this.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n    }\n\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Vec3 } from \"@/lib/Primitives\";\n\n@injectable()\nexport class CameraService {\n    private camera: mat4 = mat4.create();\n    private projection: mat4 = mat4.create();\n    private viewProjection: mat4 = mat4.create();\n\n    constructor(@inject(AppSettings) private settings: AppSettings) {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    MoveTo(position: Partial<Vec3>): void {\n        position.x !== undefined && (this.camera[12] = position.x);\n        position.y !== undefined && (this.camera[13] = position.y);\n        position.z !== undefined && (this.camera[14] = position.z);\n\n        this.UpdateViewProjection();\n    }\n\n    Translate(delta: Partial<Vec3>): void {\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                delta.x ?? 0,\n                delta.y ?? 0,\n                delta.z ?? 0\n            ]);\n\n        this.UpdateViewProjection();\n    }\n\n    get Position(): Vec3 {\n        return {\n            x: this.camera[12],\n            y: this.camera[13],\n            z: this.camera[14]\n        };\n    }\n\n    get ViewProjection(): mat4 {\n        return this.viewProjection;\n    }\n\n    Resize(): void {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    private UpdateProjection(): void {\n        mat4.perspective(\n            this.projection,\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private UpdateViewProjection(): void {\n        const view = mat4.invert(mat4.create(), this.camera);\n        this.viewProjection = mat4.mul(mat4.create(), this.projection, view);\n    }\n}\n\nInversify.bind(CameraService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: component.AbsolutePosition.y - minBaseOffset\n        };\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchEditableTextList(e.offsetX, e.offsetY) ?? false);\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { vec2 } from \"gl-matrix\";\n\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: CameraService,\n        private destination: vec2,\n        private viewport: Viewport\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.viewport);\n\n        this.camera.Translate({\n            x: delta.x,\n            y: delta.y\n        });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { ZCameraBoundary } from \"../AppSettings\";\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: CameraService,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera.Position.z + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        this.camera.Translate({ z: delta });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CameraService } from './CameraService';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(CameraService) private camera: CameraService,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera.MoveTo(\n            {\n                x: 0,\n                y: 0,\n                z: this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75\n            });\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.FocusCameraAtEditor();\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.camera.Resize();\n\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseMovementEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.gl.canvas);\n\n        this.camera.Translate({ x: delta.x, y: delta.y });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnStepZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera.Position.z;\n    }\n\n    OnTouchZoom(zoom: number): void {\n        this.camera.MoveTo({\n            z: MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.camera.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.camera.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        this.camera.Translate({\n            x: -intersection[0],\n            y: -intersection[1]\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7786); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","moveCamera","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","movementX","window","devicePixelRatio","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnCameraMove","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","OnWheel","OnStepZoom","__decorate","injectable","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","Inversify","Container","AppSettings","gl","PI","Width","Height","AspectRatio","canvas","width","height","DevicePixelRatio","__param","inject","WebGL2RenderingContext","_a","Object","bind","toSelf","inSingletonScope","CameraService","settings","mat4","UpdateProjection","UpdateViewProjection","MoveTo","position","undefined","camera","z","Translate","delta","Position","ViewProjection","viewProjection","Resize","projection","Fovy","ZNear","ZFar","view","HeadlineControlsLayout","POSITIVE_INFINITY","Watch","component","Observable","Attach","ComponentUpdated","components","push","AbsolutePosition","absolutePosition","Dimension","dimension","Scale","skipUpdates","ViewDimension","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","Extremum","absoluteExtremum","flatMap","MapComponent","Intersection","plane","line","d0","vec3","a","b","c","d","d1","t","intersection","rectangle","point","aTopRight","bTopRight","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","_b","IllegalInstructionException","Where","Opcode","super","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","options","priority","descriptor","observers","MaintainSorted","splice","findIndex","DetachAll","Notify","sender","o","temp","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","ceil","sort","pack","maxHeightInRow","target","items","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","UndefinedUV","A","B","uv","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","get","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","rightTop","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","unmanaged","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","mat","Attributes","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","iconSideLength","iconMargin","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchEditableTextList","intersected","AABBRectanglePoint","Max","desc","_f","DebugAction","DebugControls","_class","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","lb","rt","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","_g","_h","_j","_k","_l","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","region","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lbNDC","rtNDC","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","destination","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","smoothCameraZoomEffect","deltaY","touchZoomStartZ","OnKeyDown","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","trimEnd","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}