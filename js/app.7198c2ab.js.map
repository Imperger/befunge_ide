{"version":3,"file":"js/app.7198c2ab.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=af0fff8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=af0fff8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove({\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnZoom(e);\n    }\n\n    abstract OnCameraMove(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnZoom(e: WheelEvent): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.UpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.visible && this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + margin + sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (symbol !== String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt))) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => String.fromCharCode(x) === symbol)) {\n            this.history.Push(command);\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [0, 0, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n        this.FocusCameraAtEditor();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseMovementEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n            \n            return;\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12] - intersection[0], this.camera[13] - intersection[1], this.camera[14]]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9770); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","x","y","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","AppEventTransformer","OnMouseMove","buttons","Left","OnCameraMove","movementX","window","devicePixelRatio","movementY","selectStrategy","OnSelect","OnWheel","OnZoom","__decorate","injectable","Inversify","Container","AppSettings","Math","PI","min","max","Width","Height","DevicePixelRatio","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","MathUtil","static","value","tolerance","Number","EPSILON","abs","points","length","Error","n","p","HeadlineControlsLayout","settings","POSITIVE_INFINITY","width","height","Watch","component","Observable","Attach","ComponentUpdated","components","push","Position","position","AbsolutePosition","absolutePosition","Dimension","dimension","Scale","skipUpdates","ViewDimension","margin","targetScale","scale","forEach","MaintainPositionDimension","relativeExtremum","Extremum","map","absoluteExtremum","flatMap","MapComponent","__param","inject","_a","Object","Intersection","plane","line","d0","vec3","a","b","c","d","d1","t","intersection","rectangle","point","aTopRight","bTopRight","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","_b","IllegalInstructionException","Where","Opcode","super","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","options","priority","descriptor","id","observers","MaintainSorted","splice","findIndex","DetachAll","Notify","sender","o","temp","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","ceil","sqrt","sort","pack","maxHeightInRow","target","items","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","find","undefined","UndefinedUV","A","B","uv","item","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","childs","RemoveChild","removeIdx","indexOf","get","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","rightTop","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","unmanaged","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","iconSideLength","iconMargin","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","CreateButton","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","DebugControls","_class","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","_sender","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","lb","rt","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","fileControls","historyControls","editControls","debugControls","stackControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","mat4","ZNear","_g","_h","_j","_k","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","Empty","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","p0","p1","region","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","smoothCameraZoomEffect","deltaY","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}