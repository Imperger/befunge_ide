{"version":3,"file":"js/app.c91dfbe1.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=af0fff8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=af0fff8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove(e);\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect(e);\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnZoom(e);\n    }\n\n    abstract OnCameraMove(e: MouseEvent): void;\n\n    abstract OnSelect(e: MouseEvent): void;\n\n    abstract OnZoom(e: WheelEvent): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        const factor = window.devicePixelRatio === 1 ? 1 : 0.5;\n\n        return window.devicePixelRatio * factor;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale / Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const alert = new UIObservableAlert(\n            position,\n            dimension,\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + component.Dimension.height / 2 - label.Dimension.height / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight * this.Scale,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.UpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scroll = 0;\n\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height + this.Dimension.height;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, dimension, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { EditControls } from \"./EditControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    private readonly verticalPositions = { default: 60, shifted: 100 };\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(EditControls) private editControls: EditControls) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 800, y: this.verticalPositions.default },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n\n        this.BeResponsible();\n    }\n\n    private BeResponsible(): void {\n        const dimension = this.group.Dimension;\n\n        const shiftedY = Intersection.RectangleRectangle(\n            { ...this.group.AbsolutePosition, width: dimension.width, height: dimension.height + (this.verticalPositions.shifted - this.verticalPositions.default) / 2 },\n            { ...this.editControls.Position, ...this.editControls.Dimension }) ?\n            this.verticalPositions.shifted :\n            this.verticalPositions.default;\n\n        if (this.group.Position.y !== shiftedY) {\n            this.group.Position = { x: this.group.Position.x, y: shiftedY };\n        }\n\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + margin + sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n","import { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private currentTab: 'input' | 'output' = 'output';\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 200;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            64,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            64,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n\n        return Math.min(this.maxPanelWidth, widthToFit);\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n\n        for (let n = 0, width = 0; n < str.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = 0;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = 0;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private widthPercent = 0.95;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 32;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        const width = Math.min(this.settings.ViewDimension.Width * this.widthPercent / this.group.Scale, 800);\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            { width, height: 100 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService implements AsyncConstructable {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    private editDirectionControls!: EditDirectionControls;\n\n    private fileControls!: FileControls;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.editDirectionControls = new EditDirectionControls(this.uiRenderer);\n        this.fileControls = new FileControls(this.uiRenderer);\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (symbol !== String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt))) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => String.fromCharCode(x) === symbol)) {\n            this.history.Push(command);\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [0, 0, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n        this.FocusCameraAtEditor();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12] - intersection[0], this.camera[13] - intersection[1], this.camera[14]]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  SetupContext();\n\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = canvas.value?.clientWidth ?? 0;\n  innerHeight.value = canvas.value?.clientHeight ?? 0;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=51837941&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51837941\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5106); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","x","y","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","AppEventTransformer","OnMouseMove","buttons","Left","OnCameraMove","selectStrategy","OnSelect","OnWheel","OnZoom","__decorate","injectable","Inversify","Container","AppSettings","Math","PI","min","max","Width","Height","DevicePixelRatio","factor","window","devicePixelRatio","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","ObservablePriority","Low","Number","NEGATIVE_INFINITY","Normal","High","POSITIVE_INFINITY","ObservableController","Attach","observer","options","priority","descriptor","id","observers","push","MaintainSorted","splice","findIndex","DetachAll","Notify","sender","forEach","o","n","length","temp","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangle","rectangles","Pack","idealArea","maxWidth","rect","width","height","estimatedWidth","ceil","sqrt","sort","a","b","pack","maxHeightInRow","target","position","items","dimension","NotNull","msg","Error","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","find","undefined","UndefinedUV","A","B","static","uv","map","item","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","component","childs","RemoveChild","removeIdx","indexOf","Observable","Position","AbsolutePosition","get","ViewDimension","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","Scale","scale","Dimension","MaintainExtremum","rightTop","Destroy","point","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","aTopRight","bTopRight","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","absolutePosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","Object","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","value","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","__param","unmanaged","_a","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","super","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","inject","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","settings","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","iconMargin","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_b","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","MathUtil","tolerance","EPSILON","abs","points","p","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","margin","CreateButton","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","EditControls","buttonIconColor","btnSideLength","group","selectButton","_sender","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","IllegalInstructionException","Where","Opcode","PCDirection","DebugControls","_class","editControls","default","shifted","verticalPositions","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","BeResponsible","shiftedY","RectangleRectangle","DebugMode","debugMode","mode","DebugModeButtonIconColor","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","lb","rt","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","join","SnackbarControls","Show","snackbar","Hide","widthPercent","hideTimer","setTimeout","showTime","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","historyControls","debugControls","stackControls","ioControls","BuildStickyProjection","fileControls","Snackbar","stickyProjection","mat4","ZNear","_g","_h","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","Empty","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","p0","p1","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","flatMap","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","movementX","movementY","SwitchFocus","smoothCameraZoomEffect","deltaY","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","_j","_k","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}