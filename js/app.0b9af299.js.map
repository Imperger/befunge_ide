{"version":3,"file":"js/app.0b9af299.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CameraService.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/LanguageSyntaxHelpControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/DOM/FileStorage/FileStorage.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/lib/DOM/EventWaiter.ts","webpack://befunge/./src/lib/DOM/FileStorage/DOMEmulatedFileStorage.ts","webpack://befunge/./src/lib/DOM/FileStorage/FilePickerApiFileStorage.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    startX: number;\n    startY: number;\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype OnPanFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private pan: OnPanFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.pan({\n            startX: this.touchPrev.x * window.devicePixelRatio,\n            startY: this.touchPrev.y * window.devicePixelRatio,\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnPan(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnPan({\n                startX: e.offsetX * window.devicePixelRatio,\n                startY: e.offsetY * window.devicePixelRatio,\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnPan(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory'),\n    FileStorage: Symbol('File storage')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) {\n        this.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n    }\n\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport interface ArrayLikeMut<T> {\n    readonly length: number;\n    [n: number]: T;\n}\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n\n    static Copy<T>(dest: ArrayLikeMut<T>, destStart: number, src: ArrayLikeMut<T>, srcStart: number, length: number): void {\n        for (let n = 0; n < length; ++n) {\n            dest[destStart + n] = src[srcStart + n];\n        }\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { ArrayHelper } from '../ArrayHelper';\nimport { NotNull } from '../NotNull';\nimport { ArrayItemType } from '../TypeUtil';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ntype FloatTypes = typeof WebGL2RenderingContext.HALF_FLOAT | typeof WebGL2RenderingContext.FLOAT;\ntype IntegerTypes = ArrayItemType<PrimitivesRenderer['IntegerTypes']>\n\ninterface FloatAttributeDescription {\n  name: string;\n  size: GLint;\n  type: FloatTypes;\n  normalized: GLboolean;\n}\n\ninterface IntegerAttributeDescription {\n  name: string;\n  size: GLint;\n  type: IntegerTypes;\n}\n\ntype AttributeDescription = FloatAttributeDescription | IntegerAttributeDescription;\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected vertexData = new ArrayBuffer(0);\n\n  //private componentsPerAttributeSet = 0;\n  /**\n   * Size of one vertex attributes in bytes\n   */\n  private stride = 0;\n  /**\n   * Count of primitive values per vertex\n   */\n  private componentsPerVertex = 0;\n  /**\n   * The total count of vertex stored in vertexData\n   */\n  private vertexCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() private attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attributes: number[]): void {\n    this.vertexCount = attributes.length / this.componentsPerVertex;\n    this.vertexData = new ArrayBuffer(this.stride * this.vertexCount);\n\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (let attrDescIdx = 0, offset = 0, byteOffset = 0;\n        attrDescIdx < this.attributes.length;\n        offset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + offset, vertexStart + offset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.vertexData,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  /**\n   * Update attributes for specific primitive. \n   * @param attributes Attributes that will be uploaded\n   * @param offset Starting index of primitive attributes. Measured in number of attributes\n   */\n  public UpdatePrimitiveComponents(attributes: number[], offset: number): void {\n    const vertexDataOffsetStart = offset / this.componentsPerVertex * this.stride;\n    for (let vertexStart = 0; vertexStart < attributes.length; vertexStart += this.componentsPerVertex) {\n      for (\n        let attrDescIdx = 0, byteOffset = vertexDataOffsetStart, attributeOffset = 0;\n        attrDescIdx < this.attributes.length;\n        attributeOffset += this.attributes[attrDescIdx].size,\n        byteOffset += TypeSizeResolver.Resolve(this.attributes[attrDescIdx].type) * this.attributes[attrDescIdx].size,\n        ++attrDescIdx) {\n\n        const attrInfo = this.attributes[attrDescIdx];\n\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const target = new Float32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const target = new Uint32Array(this.vertexData, vertexStart / this.componentsPerVertex * this.stride + byteOffset, attrInfo.size);\n\n              target.set(attributes.slice(vertexStart + attributeOffset, vertexStart + attributeOffset + attrInfo.size));\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n      }\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    const modifiedData = new Uint8Array(this.vertexData, vertexDataOffsetStart, attributes.length / this.componentsPerVertex * this.stride);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      vertexDataOffsetStart,\n      modifiedData,\n      0,\n      modifiedData.length);\n  }\n\n  /**\n   * Extract primitive attributes\n   * @param index primitive index\n   * @returns primitive components\n   */\n  PrimitiveComponents(index: number): number[] {\n    return this.PrimitiveComponentsRange(index, 1);\n  }\n\n  /**\n   * Extract attributes for 1 or more consequenced primitives\n   * @param primitiveStartIdx index of a first primitive\n   * @param primitivesCount number of primitives whose attributes will be retrieved\n   * @returns primitives components\n   */\n  PrimitiveComponentsRange(primitiveStartIdx: number, primitivesCount: number): number[] {\n    const attributes = new Array<number>(this.ComponentsPerPrimitive * primitivesCount).fill(0);\n\n    for (let vertexIdx = 0, attrIdx = 0; vertexIdx < this.primitiveDescription.indicesPerPrimitive * primitivesCount; ++vertexIdx) {\n      let byteOffset = (primitiveStartIdx * this.primitiveDescription.indicesPerPrimitive + vertexIdx) * this.stride;\n\n      for (const attrInfo of this.attributes) {\n        switch (attrInfo.type) {\n          case this.gl.FLOAT:\n            {\n              const src = new Float32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          case this.gl.UNSIGNED_INT:\n            {\n              const src = new Uint32Array(this.vertexData, byteOffset, attrInfo.size);\n              ArrayHelper.Copy(attributes, attrIdx, src, 0, src.length);\n            }\n            break;\n          default:\n            throw new Error('Unsupported attribute type');\n        }\n\n        byteOffset += TypeSizeResolver.Resolve(attrInfo.type) * attrInfo.size;\n        attrIdx += attrInfo.size;\n      }\n    }\n\n    return attributes;\n  }\n\n  /**\n   * Returns the total count of primitives\n   */\n  get TotalPrimitives(): number {\n    return this.vertexCount / this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  /**\n     * Returns the count of components per vertex\n     */\n  get ComponentsPerVertex(): number {\n    return this.componentsPerVertex;\n  }\n\n  /**\n   * Returns the count of components per primitive\n   */\n  get ComponentsPerPrimitive(): number {\n    return this.componentsPerVertex * this.primitiveDescription.indicesPerPrimitive;\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.vertexCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    [this.componentsPerVertex, this.stride] = attributes.reduce(\n      (acc, attr) => [acc[0] + attr.size, acc[1] + attr.size * TypeSizeResolver.Resolve(attr.type)],\n      [0, 0]);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset += attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n\n      if (this.IsIntegerAttributesType(attr)) {\n        this.gl.vertexAttribIPointer(\n          location,\n          attr.size,\n          attr.type,\n          this.stride,\n          offset);\n      } else {\n        this.gl.vertexAttribPointer(\n          location,\n          attr.size,\n          attr.type,\n          attr.normalized,\n          this.stride,\n          offset);\n      }\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n\n  private IsIntegerAttributesType(attributes: AttributeDescription): attributes is IntegerAttributeDescription {\n    return (this.IntegerTypes as number[]).includes(attributes.type);\n  }\n\n  private get IntegerTypes() {\n    return [this.gl.BYTE, this.gl.UNSIGNED_BYTE,\n    this.gl.SHORT, this.gl.UNSIGNED_SHORT,\n    this.gl.INT, this.gl.UNSIGNED_INT];\n  }\n}\n","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n        const cellIdx = row * this.settings.MemoryLimit.Width + column;\n        const cellAttrs = this.PrimitiveComponents(cellIdx);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVStartOffset = 5;\n\n        // Left bottom\n        cellAttrs[UVStartOffset] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs[UVStartOffset + this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs[UVStartOffset + 2 * this.ComponentsPerVertex] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 2 * this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs[UVStartOffset + 3 * this.ComponentsPerVertex] = symbolUV.A.x;\n        cellAttrs[UVStartOffset + 3 * this.ComponentsPerVertex + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs[UVStartOffset + 4 * this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 4 * this.ComponentsPerVertex + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs[UVStartOffset + 5 * this.ComponentsPerVertex] = symbolUV.B.x;\n        cellAttrs[UVStartOffset + 5 * this.ComponentsPerVertex + 1] = symbolUV.A.y;\n\n        this.UpdatePrimitiveComponents(cellAttrs, cellIdx * this.ComponentsPerPrimitive);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveComponents(selectionIdx);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = colorOffset + n * this.ComponentsPerVertex;\n\n                attrs[colorStart] = color[0];\n                attrs[colorStart + 1] = color[1];\n                attrs[colorStart + 2] = color[2];\n            }\n\n            this.UpdatePrimitiveComponents(attrs, selectionIdx * this.ComponentsPerVertex * SelectionRenderer.IndicesPerPrimitive)\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const attributes = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([\n                ...this.PrimitiveComponentsRange(0, this.TotalPrimitives),\n                ...attributes\n            ]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attributes = this.PrimitiveComponentsRange(0, this.TotalPrimitives);\n        attributes.splice(selectionIdx * this.ComponentsPerPrimitive, this.ComponentsPerPrimitive);\n\n        this.UploadAttributes(attributes);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    static ShortestMoveForIntersection(movable: Rectangle, destination: Rectangle): Vec2 {\n        const leftToRight = destination.rt.x - movable.lb.x;\n        const rightToLeft = destination.lb.x - movable.rt.x;\n\n        const bottomToTop = destination.rt.y - movable.lb.y;\n        const topToBottom = destination.lb.y - movable.rt.y;\n\n        const intersectByX = !(leftToRight < 0 || rightToLeft > 0);\n        const intersectByY = !(bottomToTop < 0 || topToBottom > 0);\n\n        if (intersectByX && intersectByY) {\n            return { x: 0, y: 0 };\n        }\n\n        const x = leftToRight < 0 ?\n            leftToRight :\n            rightToLeft > 0 ?\n                rightToLeft :\n                0;\n\n        const y = bottomToTop < 0 ?\n            bottomToTop :\n            topToBottom > 0 ?\n                topToBottom :\n                0;\n\n\n        return { x, y };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { CodeEditorRenderer } from \"./CodeEditor/CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Transformation } from \"@/lib/math/Transformation\";\nimport { Vec3 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\n\n@injectable()\nexport class CameraService {\n    private camera: mat4 = mat4.create();\n    private projection: mat4 = mat4.create();\n    private viewProjection: mat4 = mat4.create();\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer) {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    MoveTo(position: Partial<Vec3>): void {\n        position.x !== undefined && (this.camera[12] = position.x);\n        position.y !== undefined && (this.camera[13] = position.y);\n        position.z !== undefined && (this.camera[14] = position.z);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    Translate(delta: Partial<Vec3>): void {\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                delta.x ?? 0,\n                delta.y ?? 0,\n                delta.z ?? 0\n            ]);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    get Position(): Vec3 {\n        return {\n            x: this.camera[12],\n            y: this.camera[13],\n            z: this.camera[14]\n        };\n    }\n\n    get ViewProjection(): mat4 {\n        return this.viewProjection;\n    }\n\n    Resize(): void {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    private UpdateProjection(): void {\n        mat4.perspective(\n            this.projection,\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private UpdateViewProjection(): void {\n        const view = mat4.invert(mat4.create(), this.camera);\n        mat4.mul(this.viewProjection, this.projection, view);\n    }\n\n    private MaintainCodeEditorVisible(): void {\n        const cellSize = this.codeEditorRenderer.CellSize;\n        const lbNDC = vec3.transformMat4(vec3.create(), [cellSize, cellSize, 0], this.viewProjection);\n        const rtNDC = vec3.transformMat4(\n            vec3.create(),\n            [\n                (this.settings.MemoryLimit.Width - 1) * cellSize,\n                (this.settings.MemoryLimit.Height - 1) * cellSize,\n                0\n            ],\n            this.viewProjection);\n\n        const ndcCompensation = Transformation.ShortestMoveForIntersection(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        if (ndcCompensation.x === 0 && ndcCompensation.y === 0) {\n            return;\n        }\n\n        const screenCompensation = {\n            x: ndcCompensation.x * this.settings.ViewDimension.Width / 2,\n            y: ndcCompensation.y * this.settings.ViewDimension.Height / 2\n        };\n\n        const worldCompensation = Camera.UnprojectMovement(\n            { x: screenCompensation.x, y: -screenCompensation.y },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            {\n                width: this.settings.ViewDimension.Width,\n                height: this.settings.ViewDimension.Height\n            });\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                worldCompensation.x,\n                worldCompensation.y,\n                0\n            ]);\n\n        this.UpdateViewProjection();\n    }\n}\n\nInversify.bind(CameraService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, QuestionMark, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.QuestionMark,\n                filename: 'ui_icons/question_mark.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const alertIconComponents = new Array(this.renderer.alertIcon.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const panelComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        panelAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        panelComponents,\n                        0,\n                        panelComponents.length);\n\n\n                    const alertIconComponents = this.renderer.alertIcon.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        alertIconComponents,\n                        n * this.renderer.alertIcon.ComponentsPerPrimitive,\n                        alertIconComponents,\n                        0,\n                        alertIconComponents.length);\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n                this.renderer.alertIcon.UploadAttributes(alertIconComponents);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const panelComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < panelComponents.length ? panelComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n\n                const alertIconsComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.ComponentsPerPrimitive },\n                    (_, n) => n < alertIconsComponents.length ? alertIconsComponents[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.alertIcon.ComponentsPerPrimitive).fill(0);\n\n            this.alertIcon.UpdatePrimitiveComponents(\n                emptyAttrs,\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        } else {\n            this.alertIcon.UpdatePrimitiveComponents(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.ComponentsPerPrimitive);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { SymbolStyle } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { ContainerStyle, UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            parent);\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.textList.StyleRange(begin, end, style);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return this.textList.ContainerStyle;\n    }\n\n    set ContainerStyle(style: ContainerStyle) {\n        this.textList.ContainerStyle = style;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    ScrollAligned(offset: number): void {\n        this.textList.ScrollAligned(offset);\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\nimport { ContainerStyle } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 24, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 18, basePrimitiveType: gl.TRIANGLES });\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: renderer.outline.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.outline.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const buttonComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        buttonComponents,\n                        0,\n                        buttonComponents.length);\n\n                    const buttonOutlineComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        buttonAttrs,\n                        n * this.renderer.outline.ComponentsPerPrimitive,\n                        buttonOutlineComponents,\n                        0,\n                        buttonOutlineComponents.length);\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const buttonComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < buttonComponents.length ? buttonComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const buttonOutlineComponents = this.renderer.outline.PrimitiveComponentsRange(0, this.renderer.outline.TotalPrimitives);\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.outline.ComponentsPerPrimitive },\n                    (_, n) => n < buttonOutlineComponents.length ? buttonOutlineComponents[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdatePrimitiveComponents(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            new Array(this.outline.ComponentsPerPrimitive).fill(0),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdatePrimitiveComponents(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * this.outline.ComponentsPerPrimitive);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.ComponentsPerPrimitive).fill(0);\n\n                this.renderer.UpdatePrimitiveComponents(emptyAttrs, index * this.renderer.ComponentsPerPrimitive);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const components = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        labelAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        components,\n                        0,\n                        components.length);\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const components = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < components.length ? components[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: component.AbsolutePosition.y - minBaseOffset\n        };\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdatePrimitiveComponents(attributes, offset * this.ComponentsPerPrimitive);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { ContainerStyle, UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private containerStyle: ContainerStyle,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.ContainerStyle.borderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.ContainerStyle.borderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ContainerStyle(): ContainerStyle {\n        return {\n            borderWidth: this.containerStyle.borderWidth * this.Scale,\n            fillColor: this.containerStyle.fillColor\n        };\n    }\n\n    set BorderWidth(style: ContainerStyle) {\n        this.containerStyle.borderWidth = style.borderWidth;\n        this.containerStyle.fillColor = style.fillColor;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Destroy();\n            this.scrollControls.scrollBottomButton.Destroy();\n            this.scrollControls = null;\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.containerStyle.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.containerStyle.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.ContainerStyle.borderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.containerStyle.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    ScrollAligned(offset: number): void {\n        if (!this.IsContentOverflow) {\n            return;\n        }\n\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 v_fill_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = v_fill_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec4 a_fill_color;\\n\\nout vec4 v_fill_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n  v_fill_color = a_fill_color;\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { ContainerStyle, UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 24, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly zFarIncluded = 0.1;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_fill_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.ComponentsPerPrimitive * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.ComponentsPerPrimitive);\n\n                this.renderer.borderRenderer.UpdatePrimitiveComponents(\n                    new Array(this.renderer.borderRenderer.ComponentsPerPrimitive).fill(0),\n                    index * this.renderer.borderRenderer.ComponentsPerPrimitive);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.ComponentsPerPrimitive * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    const stencilComponents = this.renderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        scencilRectAttrs,\n                        n * this.renderer.ComponentsPerPrimitive,\n                        stencilComponents,\n                        0,\n                        stencilComponents.length);\n\n                    const borderComponents = this.renderer.borderRenderer.PrimitiveComponents(offset);\n                    ArrayHelper.Copy(\n                        borderAttrs,\n                        n * this.renderer.borderRenderer.ComponentsPerPrimitive,\n                        borderComponents,\n                        0,\n                        borderComponents.length);\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const stencilComponents = this.renderer.PrimitiveComponentsRange(0, this.renderer.TotalPrimitives);\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.ComponentsPerPrimitive },\n                    (_, n) => n < stencilComponents.length ? stencilComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const borderComponents = this.renderer.borderRenderer.PrimitiveComponentsRange(0, this.renderer.borderRenderer.TotalPrimitives);\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.ComponentsPerPrimitive },\n                    (_, n) => n < borderComponents.length ? borderComponents[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            containerStyle,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.ContainerStyle.borderWidth,\n                    y: component.AbsolutePosition.y + component.ContainerStyle.borderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.ContainerStyle.borderWidth,\n                    height: component.Dimension.height - 2 * component.ContainerStyle.borderWidth\n                },\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded + 0.1],\n                    component.ContainerStyle.fillColor\n                ]);\n        } else {\n            attrs = new Array(this.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.UpdatePrimitiveComponents(attrs, component.Offset * this.ComponentsPerPrimitive);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.ContainerStyle.borderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.ComponentsPerPrimitive).fill(0);\n        }\n\n        this.borderRenderer.UpdatePrimitiveComponents(attrs, component.Offset * this.borderRenderer.ComponentsPerPrimitive);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { ContainerStyle, UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UITextListDescriptor<TRenderer, TComponent extends UITextList> {\n    renderer: TRenderer;\n    component: TComponent;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextLists: UITextListDescriptor<UITextListRenderer, UITextList>[] = [];\n\n    private uiEditableTextLists: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        const descriptor = { renderer } as UITextListDescriptor<UITextListRenderer, UITextList>;\n\n        const textList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = textList;\n\n        this.uiTextLists.push(descriptor);\n\n        return textList;\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        containerStyle: ContainerStyle,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor = { renderer } as UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            containerStyle,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.component = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchTextList(this.uiEditableTextLists, e.offsetX, e.offsetY) ?? false);\n    }\n\n    FindTextList(x: number, y: number): UITextList | null {\n        const textList = this.TouchTextList(this.uiTextLists, x, y);\n        const editableTextList = this.TouchTextList(this.uiEditableTextLists, x, y);\n\n        if (textList === null) {\n            return editableTextList;\n        }\n\n        if (editableTextList === null) {\n            return textList;\n        }\n\n        return textList.ZIndex > editableTextList.ZIndex ?\n            textList :\n            editableTextList;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchTextList<TRenderer, TComponent extends UITextList>(components: UITextListDescriptor<TRenderer, TComponent>[], x: number, y: number): TComponent | null {\n        const intersected = components\n            .filter(desc => desc.component.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.component.AbsolutePosition.x,\n                    y: desc.component.AbsolutePosition.y,\n                    width: desc.component.Dimension.width,\n                    height: desc.component.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UITextListDescriptor<TRenderer, TComponent>, b: UITextListDescriptor<TRenderer, TComponent>) => a.component.ZIndex < b.component.ZIndex)\n            .component;\n    }\n\n    private UIObservableTextListDeleter(descriptor: UITextListDescriptor<UITextListRenderer, UITextList>): void {\n        this.uiTextLists.splice(this.uiTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UITextListDescriptor<UIEditableTextListRenderer, UIEditableTextList>): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextLists.forEach(x => x.renderer.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextLists.forEach(x => x.renderer.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n\n    private helpButton: UIIconButton;\n    private helpShowed = false;\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private showHelpObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const helpButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.helpButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor: FileControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.QuestionMark, color: helpButtonIconColor },\n            _sender => this.ToggleHelpButton(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    private ToggleHelpButton(): void {\n        this.helpButton.Style = {\n            ...this.helpButton.Style,\n            outlineColor: this.helpShowed ? FileControls.DefaultButtonOutlineColor : FileControls.ToggleButtonOutlineColor\n        };\n\n        this.helpShowed = !this.helpShowed;\n\n        this.showHelpObservable.Notify()\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get ShowHelpObservable(): Observable<void> {\n        return this.showHelpObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ArrayHelper } from \"@/lib/ArrayHelper\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\ninterface AutoWordWrapResult {\n    text: string;\n    instructionRange: [number, number][];\n}\n\ninterface InstructionDescription {\n    instruction: string;\n    description: string;\n}\n\n@injectable()\nexport class LanguageSyntaxHelpControls {\n    private group: UIObservablePositioningGroup;\n    private display: UITextList | null = null;\n    private lineHeight = 16;\n    private maxWidth = 1024;\n    private defaultTextColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private instructions: InstructionDescription[];\n    private helpString!: string;\n    private instructionPaddingEnd!: number;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n\n        this.instructions = [\n            { instruction: '0-9', description: 'Push this number onto the stack.' },\n            { instruction: '+', description: 'Addition: Pop a and b, then push a+b.' },\n            { instruction: '-', description: 'Subtraction: Pop a and b, then push b-a.' },\n            { instruction: '*', description: 'Multiplication: Pop a and b, then push a*b.' },\n            { instruction: '/', description: 'Integer division: Pop a and b, then push b/a, rounded towards 0.' },\n            { instruction: '%', description: 'Modulo: Pop a and b, then push the remainder of the integer division of b/a.' },\n            { instruction: '!', description: 'Logical NOT: Pop a value. If the value is zero, push 1; otherwise, push zero.' },\n            { instruction: '`', description: 'Greater than: Pop a and b, then push 1 if b>a, otherwise zero.' },\n            { instruction: '>', description: 'Start moving right.' },\n            { instruction: '<', description: 'Start moving left.' },\n            { instruction: '^', description: 'Start moving up.' },\n            { instruction: 'v', description: 'Start moving down.' },\n            { instruction: '?', description: 'Start moving in a random cardinal direction.' },\n            { instruction: '_', description: 'Pop a value; move right if value=0, left otherwise.' },\n            { instruction: '|', description: 'Pop a value; move down if value=0, up otherwise.' },\n            { instruction: '\"', description: 'Start string mode: push each character\\'s ASCII value all the way up to the next \"' },\n            { instruction: ':', description: 'Duplicate value on top of the stack.' },\n            { instruction: '\\\\', description: 'Swap two values on top of the stack.' },\n            { instruction: '$', description: 'Pop value from the stack and discard it.' },\n            { instruction: '.', description: 'Pop value and output as an integer followed by a space.' },\n            { instruction: ',', description: 'Pop value and output as ASCII character.' },\n            { instruction: '#', description: 'Bridge: Skip next cell.' },\n            { instruction: 'p', description: 'A \"put\" call (a way to store a value for later use). Pop y, x, and v, then change the character at (x,y) in the program to the character with ASCII value v.' },\n            { instruction: 'g', description: 'A \"get\" call (a way to retrieve data in storage). Pop y and x, then push ASCII value of the character at that position in the program.' },\n            { instruction: '&', description: 'Ask user for a number and push it.' },\n            { instruction: '~', description: 'Ask user for a character and push its ASCII value.' },\n            { instruction: '@', description: 'End program.' },\n            { instruction: '\" \"', description: 'No-op. Does nothing' }\n        ];\n\n        this.BuildHelpString();\n    }\n\n    private BuildHelpString(): void {\n        this.instructionPaddingEnd = ArrayHelper\n            .Max(this.instructions, (a, b) => a.instruction.length < b.instruction.length)\n            .instruction.length;\n\n        this.helpString = this.instructions\n            .map(x => ` ${x.instruction.padEnd(this.instructionPaddingEnd)} ${x.description}`)\n            .join('\\n');\n    }\n\n    private NewLineFormatter(str: string): AutoWordWrapResult {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory(\n            {\n                ASCIIRange: { Start: ' ', End: '~' },\n                Font: { Name: 'Roboto', Size: this.lineHeight * this.group.Scale }\n            });\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        let instructionIdx = 1;\n        const instructionRange: [number, number][] = [[1, 1 + this.instructions[0].instruction.length]];\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                instructionRange.push([n + 2, n + 2 + this.instructions[instructionIdx++].instruction.length]);\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.display!.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n', ...' '.repeat(this.instructionPaddingEnd + 2));\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return { text: strArr.join(''), instructionRange };\n    }\n\n    ToggleHelp(): void {\n        if (this.display === null) {\n            this.display = this.uiRenderer.CreateTextList(\n                { x: 0, y: 0 },\n                {\n                    width: Math.min(this.maxWidth, this.settings.ViewDimension.Width) / this.group.Scale,\n                    height: this.settings.ViewDimension.Height / this.group.Scale * 0.75\n                },\n                6,\n                '',\n                { borderWidth: 2, fillColor: [1, 1, 1, 1] },\n                this.lineHeight,\n                this.group);\n\n            const formatedHelp = this.NewLineFormatter(this.helpString);\n\n            this.display.Text = formatedHelp.text;\n            formatedHelp.instructionRange.forEach(x => this.display!.StyleRange(x[0], x[1], { color: [0.9058823529411765, 0.2980392156862745, 0.23529411764705882] }));\n        } else {\n            this.display.Destroy();\n            this.display = null;\n        }\n    }\n}\n\nInversify.bind(LanguageSyntaxHelpControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            { borderWidth: 2, fillColor: [0, 0, 0, 0] },\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { LanguageSyntaxHelpControls } from \"./LanguageSyntaxHelpControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface ScrollEvent {\n    startX: number;\n    startY: number;\n    scroll: number;\n    units: 'px' | 'row';\n}\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(LanguageSyntaxHelpControls) private languageSyntaxHelpControls: LanguageSyntaxHelpControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get LanguageSyntaxHelpControls(): LanguageSyntaxHelpControls {\n        return this.languageSyntaxHelpControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Scroll(e: ScrollEvent): boolean {\n        e.startY = this.gl.canvas.height - e.startY;\n\n        const textList = this.uiRenderer.FindTextList(e.startX, e.startY);\n\n        if (textList === null) {\n            return false;\n        }\n\n        if (e.units === 'px') {\n            textList.ScrollAligned(e.scroll);\n        } else if (e.units === 'row') {\n            textList.ScrollAligned(e.scroll * textList.LineHeight);\n        }\n\n        return true;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        queueMicrotask(() => {\n            let x = 0, y = 0;\n            switch (position) {\n                case TooltipPosition.LeftBottom:\n                    x = margin + column * cellSize;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n                case TooltipPosition.LeftTop:\n                    x = margin + column * cellSize;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightTop:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                    break;\n                case TooltipPosition.RightBottom:\n                    x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                    y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                    break;\n            }\n\n            instance.Position = { x, y };\n        });\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    get RawRef(): T[] {\n        return this.data;\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let nonSpaceIdx = this.input.findIndex(x => x !== ' ');\n\n    if (['-', '+'].includes(this.input[nonSpaceIdx])) {\n      ++nonSpaceIdx;\n    }\n\n    let numberEnd = nonSpaceIdx;\n\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      char = this.input[++numberEnd]);\n\n\n    if (numberEnd === nonSpaceIdx) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { ArrayHelper } from \"../ArrayHelper\";\nimport { Array2D, Index2D } from \"../containers/Array2D\";\nimport { EnumSize } from \"../EnumSize\";\n\nimport { CPU, PCDirection } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class CellHitsFlow {\n    private stats: Array2D<number>;\n\n    constructor() {\n        const directionsCount = EnumSize(PCDirection);\n        this.stats = Array2D.WithProvider(directionsCount, directionsCount, () => 0);\n    }\n\n    Update(index: Index2D, updater: (value: number) => number): void {\n        this.stats.Update(index, updater);\n    }\n\n    get Max(): number {\n        return ArrayHelper.Max(this.stats.RawRef, (a, b) => a < b)\n    }\n\n    get Total(): number {\n        let totalHits = 0;\n        this.stats.ForEach(x => totalHits += x);\n\n        return totalHits;\n    }\n\n    Normalized(max: number): number[] {\n        return this.stats.Map(x => x / max).RawRef;\n    }\n}\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<CellHitsFlow> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => new CellHitsFlow());\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n\n            const hitsFlow = heatmap.Get({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            });\n\n            const from = this.target.PC.Direction;\n\n            this.target.ExecuteNext();\n\n            const to = this.target.PC.Direction;\n\n            hitsFlow.Update({\n                column: from,\n                row: to\n            }, x => x + 1);\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nconst float PI = 3.1415926535897932384626433832795f;\\nconst float circleRadius = 0.03f;\\nconst float sector = 1.f / 3.f;\\nconst float subsector = 1.f / 9.f;\\n\\nconst float lowSpeed = 1.f / 5.f;\\nconst float mediumSpeed = 1.f / 2.f;\\nconst float highSpeed = 1.f;\\nconst float speed[4] = float[](0.f, lowSpeed, mediumSpeed, highSpeed);\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n/*\\n* Each 2 bits describe frequency of hits flow in an direction.\\n* RR, DR, LR, UR,\\n* RD, DD, LD, UD,\\n* RL, DL, LL, UL,\\n* RU, DU, LU, UU\\n*/\\nflat in uint v_hitsFlow;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    if(v_color.a == 0.0f) {\\n        discard;\\n    }\\n\\n    float columnWidth = 1.f / 32.f;\\n    uint bitIdx = uint(floor(v_uvCoord.x / columnWidth));\\n    float bit = float(v_hitsFlow >> bitIdx & uint(1));\\n    out_color = vec4(bit, 0, 0, 0.9f);\\n\\n    uint rightRight = v_hitsFlow & uint(3);\\n    uint downRight = v_hitsFlow >> 2 & uint(3);\\n    uint leftRight = v_hitsFlow >> 4 & uint(3);\\n    uint upRight = v_hitsFlow >> 6 & uint(3);\\n    uint rightDown = v_hitsFlow >> 8 & uint(3);\\n    uint downDown = v_hitsFlow >> 10 & uint(3);\\n    uint leftDown = v_hitsFlow >> 12 & uint(3);\\n    uint upDown = v_hitsFlow >> 14 & uint(3);\\n    uint rightLeft = v_hitsFlow >> 16 & uint(3);\\n    uint downLeft = v_hitsFlow >> 18 & uint(3);\\n    uint leftLeft = v_hitsFlow >> 20 & uint(3);\\n    uint upLeft = v_hitsFlow >> 22 & uint(3);\\n    uint rightUp = v_hitsFlow >> 24 & uint(3);\\n    uint downUp = v_hitsFlow >> 26 & uint(3);\\n    uint leftUp = v_hitsFlow >> 28 & uint(3);\\n    uint upUp = v_hitsFlow >> 30 & uint(3);\\n\\n    out_color = v_color;\\n\\n    if(rightRight > uint(0)) {\\n        float x = fract(u_time * speed[rightRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(downRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[downRight] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[downRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftRight > uint(0)) {\\n        float x = fract(u_time * speed[leftRight] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(1.f - x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upRight > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upRight]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[upRight] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[upRight]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightDown > uint(0)) {\\n        {\\n            float x = mod(fract(u_time * speed[rightDown]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[rightDown] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[rightDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(1.f - u_time * speed[downDown] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(leftDown > uint(0)) {\\n        {\\n            float x = mod(1.f - fract(u_time * speed[leftDown]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[leftDown] * 0.5f * PI / sector, 0.5f * PI) + 0.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[leftDown]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upDown > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upDown] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightLeft > uint(0)) {\\n        float x = fract(u_time * speed[rightLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(x < 1.5f * sector) {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(1.5f * sector - (x - 1.5f * sector), y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(1.0f - fract(u_time * speed[downLeft]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[downLeft] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[downLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftLeft > uint(0)) {\\n        float x = 1.f - fract(u_time * speed[leftLeft] / sector);\\n        float y = 1.5f * sector;\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n\\n    if(upLeft > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[upLeft]), sector);\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[upLeft] * 0.5f * PI / sector, 0.5f * PI);\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.f - fract(u_time * speed[upLeft]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(rightUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[rightUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = mod(u_time * speed[rightUp] * 0.5f * PI / sector, 0.5f * PI) + 1.5f * PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(fract(u_time * speed[rightUp]), sector);\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(downUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[downUp] / sector);\\n\\n        if(y < 1.5f * sector) {\\n            if(distance(vec2(x, 1.f - y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        } else {\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(leftUp > uint(0)) {\\n        {\\n            float x = 1.5f * sector;\\n            float y = mod(fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float t = 0.5f * PI - mod(u_time * speed[leftUp] * 0.5f * PI / sector, 0.5f * PI) + PI;\\n            float x = cos(t) * sector / 2.f;\\n            float y = sin(t) * sector / 2.f;\\n\\n            x += 2.f * sector;\\n            y += 2.f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n        {\\n            float x = mod(1.0f - fract(u_time * speed[leftUp]), sector) + 2.0f * sector;\\n            float y = 1.5f * sector;\\n\\n            if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n                out_color = vec4(1, 1, 1, v_color.a);\\n                return;\\n            }\\n        }\\n    }\\n\\n    if(upUp > uint(0)) {\\n        float x = 1.5f * sector;\\n        float y = fract(u_time * speed[upUp] / sector);\\n\\n        if(distance(vec2(x, y), v_uvCoord) <= circleRadius) {\\n            out_color = vec4(1, 1, 1, v_color.a);\\n            return;\\n        }\\n    }\\n}\\n\"","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\nin uint a_hitsFlow;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\nflat out uint v_hitsFlow;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() {\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1f, 1.0f);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n  v_hitsFlow = a_hitsFlow;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false\n            },\n            {\n                name: 'a_hitsFlow',\n                size: 1,\n                type: gl.UNSIGNED_INT\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n        super.Draw();\n    }\n}\ninterface HeatmapCellAttributes {\n    color: Rgba;\n    hitsFlow: number;\n}\n\nexport type HeatmapRenderInfo = Array2D<HeatmapCellAttributes>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapRenderInfo): HeatmapGridRenderer {\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const attributes = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: 0, y: 0 },\n                        B: { x: 1, y: 1 }\n                    },\n                    attributes.color,\n                    attributes.hitsFlow);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba,\n        hitsFlow: number\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color,\n                [hitsFlow]\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapRenderInfo) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapRenderInfo]>(ctx => (data: HeatmapRenderInfo) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer, HeatmapRenderInfo } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { CellHitsFlow } from \"@/lib/befunge/Profiler\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<CellHitsFlow>;\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const max = this.MaxHits(this.heatmap);\n        const renderInfo: HeatmapRenderInfo = this.heatmap\n            .Map(x => ({ color: this.HitsToColor(x.Total), hitsFlow: this.PackHitsFlow(x.Normalized(max)) }));\n\n        const renderer = this.heatmapGridRendererFactory(renderInfo);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private MaxHits(stats: HeatmapHitStats): number {\n        let max = 0;\n\n        stats.ForEach(x => max = Math.max(max, x.Max));\n\n        return max;\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private PackHitsFlow(normalizedHitsFlow: number[]): number {\n        return normalizedHitsFlow.reduce((packed, x, n) => {\n            if (x >= 0.66) {\n                return packed | 3 << 2 * n;\n            } else if (x >= 0.33) {\n                return packed | 2 << 2 * n;\n            } else if (x > 0) {\n                return packed | 1 << 2 * n;\n            }\n\n            return packed;\n        }, 0);\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x.Total));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits.Total > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.Total.toString(), TooltipPosition.LeftBottom);\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n\n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { vec2 } from \"gl-matrix\";\n\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: CameraService,\n        private destination: vec2,\n        private viewport: Viewport\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.viewport);\n\n        this.camera.Translate({\n            x: delta.x,\n            y: delta.y\n        });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { ZCameraBoundary } from \"../AppSettings\";\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: CameraService,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera.Position.z + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        this.camera.Translate({ z: delta });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","export class AbortOperationException extends Error { }\n\nexport interface FileStorage {\n    Open(): Promise<string>;\n    Save(content: string): Promise<void>;\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","import { vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CameraService } from './CameraService';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { AbortOperationException, FileStorage } from '@/lib/DOM/FileStorage/FileStorage';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FileStorage) private fileStorage: FileStorage,\n        @inject(CameraService) private camera: CameraService,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera.MoveTo(\n            {\n                x: 0,\n                y: 0,\n                z: this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75\n            });\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.FocusCameraAtEditor();\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.ShowHelpObservable.Attach(() => this.overlay.LanguageSyntaxHelpControls.ToggleHelp());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.camera.Resize();\n\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnPan(e: MouseMovementEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.startX,\n            startY: e.startY,\n            scroll: -e.movementY / window.devicePixelRatio,\n            units: 'px'\n        })) {\n            const delta = Camera.UnprojectMovement(\n                { x: e.movementX, y: e.movementY },\n                { a: 0, b: 0, c: 1, d: 0 },\n                this.camera.ViewProjection,\n                this.gl.canvas);\n\n            this.camera.Translate({ x: delta.x, y: delta.y });\n\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnWheel(e: WheelEvent): void {\n        if (!this.overlay.Scroll({\n            startX: e.offsetX,\n            startY: e.offsetY,\n            scroll: Math.sign(e.deltaY),\n            units: 'row'\n        })) {\n            const smoothCameraZoomEffect = new SmoothCameraZoom(\n                e.deltaY < 0 ? 'in' : 'out',\n                this.camera,\n                this.settings.ZCameraBoundary);\n\n            this.effectRunner.Register(\n                smoothCameraZoomEffect,\n                { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n        }\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera.Position.z;\n    }\n\n    OnTouchZoom(zoom: number): void {\n        this.camera.MoveTo({\n            z: MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            sourceCode = await this.fileStorage.Open();\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message);\n            }\n\n            return;\n        }\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            await this.fileStorage.Save(this.SourceCodeString());\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.camera.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.camera.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        this.camera.Translate({\n            x: -intersection[0],\n            y: -intersection[1]\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","export async function WaitEvent<TEvent extends Event>(target: HTMLElement, event: string): Promise<TEvent> {\n    return new Promise<TEvent>(resolve => target.addEventListener(event, e => resolve(e as TEvent), { once: true }));\n}\n","import { injectable } from \"inversify\";\n\nimport { WaitEvent } from \"../EventWaiter\";\n\nimport { FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class DOMEmulatedFileStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        const input = document.createElement('input');\n\n        input.type = 'file';\n        const onChange = WaitEvent(input, 'change');\n\n        input.click();\n\n        const onChangeResult = await onChange;\n\n        const target = onChangeResult.target as HTMLInputElement | null;\n\n        if ((target?.files?.length ?? 0) === 0) {\n            throw new Error('Failed to load file');\n        }\n\n        this.openedFilename = target!.files![0].name;\n\n        return target!.files![0].text();\n    }\n\n    async Save(content: string): Promise<void> {\n        const blob = new Blob([content], { type: 'text/plain' });\n\n        const url = window.URL.createObjectURL(blob);\n\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.openedFilename;\n\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AbortOperationException, FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class FilePickerApiDiskStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                throw new AbortOperationException();\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            return file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n\n    async Save(content: string): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(content);\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { DOMEmulatedFileStorage } from \"@/lib/DOM/FileStorage/DOMEmulatedFileStorage\";\nimport { FilePickerApiDiskStorage } from \"@/lib/DOM/FileStorage/FilePickerApiFileStorage\";\nimport { FileStorage } from \"@/lib/DOM/FileStorage/FileStorage\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n\n        Inversify\n            .bind<FileStorage>(InjectionToken.FileStorage)\n            .to(this.IsPickerApiAvailable ? FilePickerApiDiskStorage : DOMEmulatedFileStorage)\n            .inSingletonScope();\n    }\n\n    private get IsPickerApiAvailable(): boolean {\n        return window.showOpenFilePicker !== undefined &&\n            window.showSaveFilePicker !== undefined;\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(572); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","pan","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","startX","window","devicePixelRatio","startY","movementX","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnPan","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","__decorate","injectable","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","FileStorage","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","Inversify","Container","AppSettings","gl","PI","Width","Height","AspectRatio","canvas","width","height","DevicePixelRatio","__param","inject","WebGL2RenderingContext","_a","Object","bind","toSelf","inSingletonScope","NotNull","msg","startSymbolCode","Columns","Rows","GlyphCount","Image","LookupUV","symbol","symbolCode","charCodeAt","glyphIdx","column","row","floor","glyphWidth","glyphHeight","leftTop","A","B","FontAtlasBuilderImpl","Build","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","ceil","rowCount","glyphCellSize","GlyphCellSize","SetupCanvas","FillCanvasWithGlyphs","context","getImageData","document","createElement","getContext","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","PrimitiveBuilder","position","dimension","attributes","leftBottom","rightTop","rightBottom","attr","Array","isArray","push","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ArrayHelper","array","comparator","dest","destStart","src","srcStart","ShaderProgram","Map","instance","createProgram","Attach","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","async","url","fetch","text","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","get","getUniformLocation","set","TypeSizeResolver","Sizes","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","ArrayBuffer","Setup","SetupAttributes","UploadAttributes","vertexCount","componentsPerVertex","vertexData","stride","vertexStart","attrDescIdx","offset","byteOffset","size","Resolve","attrInfo","target","slice","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdatePrimitiveComponents","vertexDataOffsetStart","attributeOffset","modifiedData","bufferSubData","PrimitiveComponents","index","PrimitiveComponentsRange","primitiveStartIdx","primitivesCount","ComponentsPerPrimitive","fill","vertexIdx","attrIdx","indicesPerPrimitive","Copy","TotalPrimitives","ComponentsPerVertex","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","reduce","acc","location","enableVertexAttribArray","IsIntegerAttributesType","vertexAttribIPointer","vertexAttribPointer","normalized","IntegerTypes","includes","unmanaged","EditorGridRenderer","settings","fontAtlas","fontAtlasTexture","super","FGrid","VGrid","TRIANGLES","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","cell","BuildCell","CellSize","cellIdx","cellAttrs","symbolUV","UVStartOffset","bindTexture","TEXTURE_2D","color","uv","ViewProjection","mat","Dimension","_b","_c","_d","WebGLTexture","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","AABBFrame","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionRenderer","_class","editorGridRenderer","FSelection","VSelection","SelectionRenderer_1","IndicesPerPrimitive","Select","SelectRegion","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","findIndex","r","a","b","colorOffset","attrs","colorStart","point","Unselect","UnselectRegion","splice","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","viewProjection","Clear","Transformation","movable","destination","betweenByX","Between","lb","rt","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","Min","diff","leftToRight","rightToLeft","bottomToTop","topToBottom","intersectByX","intersectByY","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","rectangle","aTopRight","bTopRight","Camera","viewport","vec","z","v","vec4","invertViewProj","mat4","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","CameraService","codeEditorRenderer","UpdateProjection","UpdateViewProjection","MoveTo","undefined","camera","MaintainCodeEditorVisible","Translate","Position","Resize","projection","Fovy","ZNear","ZFar","view","cellSize","lbNDC","rtNDC","ndcCompensation","ShortestMoveForIntersection","screenCompensation","ViewDimension","worldCompensation","UnprojectMovement","HeadlineControlsLayout","POSITIVE_INFINITY","Watch","component","Observable","ComponentUpdated","components","AbsolutePosition","absolutePosition","Scale","skipUpdates","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","absoluteExtremum","flatMap","MapComponent","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","IllegalInstructionException","Where","Opcode","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","priority","descriptor","observers","MaintainSorted","DetachAll","Notify","sender","o","temp","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","sort","pack","maxHeightInRow","items","TextureAtlas","ClonePackage","NormalizePackage","found","UndefinedUV","TextureAtlasBuilder","filename","images","packer","img","packed","CreateImage","drawImage","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","QuestionMark","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","icon","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","UIObservableAlert","zIndex","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","MemoryPoolTracker","capacity","NoFree","pool","from","_","nextFree","Allocate","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","UIAlertIconRenderer","FUIALertIcon","VUIAlertIcon","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","alertIconComponents","panelComponents","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","alertIconsComponents","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","iconSideLength","iconMargin","UpdateComponent","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_e","UIObservableEditableTextList","containerStyle","textList","CreateTextList","begin","end","OnVanish","onVanish","OnInput","keyCode","key","toDelete","ContainerStyle","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","ScrollAligned","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","buttonOutlineAttrs","buttonComponents","buttonOutlineComponents","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","BorderWidth","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","stencilComponents","borderComponents","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","UIObservableTextListDeleter","uiTextLists","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchTextList","FindTextList","intersected","AABBRectanglePoint","Max","desc","_f","DebugAction","DebugControls","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","FileControls","openButtonIconColor","saveButtonIconColor","helpButtonIconColor","openButton","FileControls_1","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","helpButton","ToggleHelpButton","helpShowed","showHelpObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","ShowHelpObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","LanguageSyntaxHelpControls","instructions","instruction","description","BuildHelpString","instructionPaddingEnd","helpString","padEnd","instructionIdx","instructionRange","display","repeat","ToggleHelp","formatedHelp","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","EnumSize","keys","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","languageSyntaxHelpControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","Scroll","units","_g","_h","_j","_k","_l","_m","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","TooltipPosition","CodeEditorTooltipService","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","RawRef","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","clipboard","writeText","CPUImpl","memory","io","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","nonSpaceIdx","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","CellHitsFlow","directionsCount","stats","Total","totalHits","Normalized","Profiler","CellHeatmapFor","heatmap","hitsFlow","to","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","MaxHits","renderInfo","HitsToColor","PackHitsFlow","hits","maxHits","lowHitsColor","hitsColorsDiff","normalizedHitsFlow","highHitsColor","HeatMapGridFactory","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","IsDone","isDone","fract","duration","progress","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","copy","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","AbortOperationException","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","fileStorage","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","OnWheel","sign","deltaY","smoothCameraZoomEffect","touchZoomStartZ","OnKeyDown","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","SourceCodeString","sourceString","trimEnd","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","WaitEvent","event","addEventListener","once","DOMEmulatedFileStorage","onChange","click","onChangeResult","files","openedFilename","content","blob","Blob","URL","createObjectURL","href","download","revokeObjectURL","FilePickerApiDiskStorage","fileHandle","showOpenFilePicker","multiple","kind","file","getFile","showSaveFilePicker","suggestedName","stream","createWritable","write","close","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","IsPickerApiAvailable","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}