{"version":3,"file":"js/app.e781337e.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype MoveCameraFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private moveCamera: MoveCameraFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.moveCamera({\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnCameraMove(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove({\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnStepZoom(e);\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnCameraMove(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnStepZoom(e: WheelEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: component.AbsolutePosition.y - minBaseOffset\n        };\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchEditableTextList(e.offsetX, e.offsetY) ?? false);\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [0, 0, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n        this.FocusCameraAtEditor();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseMovementEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnStepZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera[14];\n    }\n\n    OnTouchZoom(zoom: number): void {\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12], this.camera[13], MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12] - intersection[0], this.camera[13] - intersection[1], this.camera[14]]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4289); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","moveCamera","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","movementX","window","devicePixelRatio","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnCameraMove","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","OnWheel","OnStepZoom","__decorate","injectable","Inversify","Container","AppSettings","PI","Width","Height","DevicePixelRatio","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","HeadlineControlsLayout","settings","POSITIVE_INFINITY","width","height","Watch","component","Observable","Attach","ComponentUpdated","components","push","Position","position","AbsolutePosition","absolutePosition","Dimension","dimension","Scale","skipUpdates","ViewDimension","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","Extremum","absoluteExtremum","flatMap","MapComponent","__param","inject","_a","Object","Intersection","plane","line","d0","vec3","a","b","c","d","d1","t","intersection","rectangle","point","aTopRight","bTopRight","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","_b","IllegalInstructionException","Where","Opcode","super","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","options","priority","descriptor","observers","MaintainSorted","splice","findIndex","DetachAll","Notify","sender","o","temp","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","ceil","sort","pack","maxHeightInRow","target","items","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","undefined","UndefinedUV","A","B","uv","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","get","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","rightTop","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","unmanaged","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","iconSideLength","iconMargin","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchEditableTextList","intersected","AABBRectanglePoint","Max","desc","projection","_f","DebugAction","DebugControls","_class","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","lb","rt","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","mat4","ZNear","_g","_h","_j","_k","_l","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","region","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lbNDC","rtNDC","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","smoothCameraZoomEffect","deltaY","touchZoomStartZ","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","trimEnd","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}