{"version":3,"file":"js/app.f388f93b.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/InputControls.ts","webpack://befunge/./src/app/Overlay/OutputControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/ensure chunk","webpack://befunge/webpack/runtime/get javascript chunk filename","webpack://befunge/webpack/runtime/get mini-css chunk filename","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/load script","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/publicPath","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=af0fff8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=af0fff8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove(e);\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect(e);\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnZoom(e);\n    }\n\n    abstract OnCameraMove(e: MouseEvent): void;\n\n    abstract OnSelect(e: MouseEvent): void;\n\n    abstract OnZoom(e: WheelEvent): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    observer: Observer<T>;\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = src;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x + component.Dimension.width,\n                y: component.Position.y + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y;\n        }\n    }\n}\n","import { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(private uiRenderer: UIRenderer) {\n        this.group = new UIObservablePositioningGroup({ x: 800, y: 60 }, { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x,\n                        y: 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const yOffsetFactor = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x,\n                y: yOffsetFactor * margin + (yOffsetFactor + 1) * sideLength + margin\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.scale,\n            height: this.dimension.height * this.scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const alert = new UIObservableAlert(\n            position,\n            dimension,\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + this.AlertIconSideLength(component),\n            y: component.Position.y + component.Dimension.height / 2 - label.Dimension.height / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.Position,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    private onDestroy = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnDestroy(): Observable<void> {\n        return this.onDestroy;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onDestroy.Notify();\n\n        this.onDestroy.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.borderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.scale,\n            height: this.dimension.height * this.scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.borderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.label.Scale = scale;\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scroll = 0;\n\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                this.scrollControls.scrollBottomButton.Scale = this.scale;\n                this.scrollControls.scrollTopButton.Scale = this.scale;\n\n                this.ScrollAligned(0);\n            }\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        const margin = 5;\n\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - margin,\n                y: this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - margin\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        const margin = 5;\n\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - margin,\n                y: this.Position.y + this.borderWidth + margin\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.scale + this.Dimension.height / this.scale;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        const attrs = PrimitiveBuilder.AABBRectangle(\n            {\n                x: component.AbsolutePosition.x + component.BorderWidth,\n                y: component.AbsolutePosition.y + component.BorderWidth\n            },\n            {\n                width: component.Dimension.width - 2 * component.BorderWidth,\n                height: component.Dimension.height - 2 * component.BorderWidth\n            },\n            []\n        );\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        const attrs = PrimitiveBuilder.AABBFrame(\n            component.AbsolutePosition,\n            component.Dimension,\n            component.BorderWidth,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n            ]\n        );\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0, 0, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, dimension, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 8 * margin + 5 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const buttonMargin = 10;\n        const [buttonWidth, btnHeight] = [75, 50];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 100\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n}\n","import { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n\n    private saveToDiskObservable = new ObservableController<void>();\n\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 5 * margin + 3 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class InputControls {\n    private group: UIObservablePositioningGroup;\n\n    private input: UIEditableTextList;\n\n    constructor(private uiRenderer: UIRenderer) {\n        const margin = 10;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 145 + 800 + margin, y: 10 },\n            { vertical: VerticalAnchor.Bottom });\n\n        this.input = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: 800, height: 200 },\n            1,\n            '',\n            64,\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Text(): string {\n        return this.input.Text;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class OutputControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList!: UITextList;\n\n    private charactersPerLine = 24;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 800, height: 200 },\n            1,\n            '',\n            64,\n            this.group);\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n\n        for (let n = 0, width = 0; n < str.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = 0;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = 0;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(OutputControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group!: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private widthPercent = 0.40;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 32;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        const width = this.settings.ViewDimension.Width * this.widthPercent;\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: (this.settings.ViewDimension.Width - width) / 2, y: 0 },\n            { width, height: 100 },\n            1,\n            icon,\n            text,\n            style);\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(private uiRenderer: UIRenderer) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 650\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { InputControls } from \"./InputControls\";\nimport { OutputControls } from \"./OutputControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService implements AsyncConstructable {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    private editDirectionControls!: EditDirectionControls;\n\n    private debugControls!: DebugControls;\n\n    private inputControls!: InputControls;\n\n    private fileControls!: FileControls;\n\n    private stackControls!: StackControls;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(OutputControls) private outputControls: OutputControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n\n    async AsyncConstructor(): Promise<void> {\n        this.editDirectionControls = new EditDirectionControls(this.uiRenderer);\n        this.debugControls = new DebugControls(this.uiRenderer);\n        this.inputControls = new InputControls(this.uiRenderer);\n        this.fileControls = new FileControls(this.uiRenderer);\n        this.stackControls = new StackControls(this.uiRenderer);\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get InputControls(): InputControls {\n        return this.inputControls;\n    }\n\n    get OutputControls(): OutputControls {\n        return this.outputControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.inputControls.Resize();\n        this.outputControls.Resize();\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        this.history.Push(command);\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        this.history.Push(command);\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        this.history.Push(command);\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        this.history.Push(command);\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.OutputControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.OutputControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.OutputControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.OutputControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990,0.976,0.986), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach((shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown))\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onDestroy = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnDestroy(): Observable<void> {\n        return this.onDestroy;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnDestroy: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\n\nimport './History/Commands';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private inFocusOnDestroyReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [50, 100, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnDestroyReleaser = this.inFocus.OnDestroy.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        this.camera = mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            let sourceString = '';\n            for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n                let line = '';\n\n                for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                    line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n                }\n\n                line = line.trimEnd();\n\n                if (line.length > 0) {\n                    sourceString += line + '\\n';\n                }\n            }\n\n            await stream.write(sourceString);\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    private LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnDestroyReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnDestroy.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  SetupContext();\n\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = canvas.value?.clientWidth ?? 0;\n  innerHeight.value = canvas.value?.clientHeight ?? 0;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=51837941&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51837941\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  setup(__props) {\n\nlet service!: AppService;\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheel: OnWheel,\n    onKeydown: OnKeyDown\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    component: CodeEditor\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', 'url(fonts/roboto-latin-500-normal.3170fd9a.woff2)');\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"6d728454\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"befunge:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/befunge_ide/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1021); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","x","y","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","AppEventTransformer","OnMouseMove","buttons","Left","OnCameraMove","selectStrategy","OnSelect","OnWheel","OnZoom","__decorate","injectable","Inversify","Container","AppSettings","Math","PI","min","max","Width","Height","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","PCDirection","IllegalInstructionException","Error","Where","Opcode","super","ObservableController","Attach","observer","descriptor","id","observers","push","splice","findIndex","DetachAll","Notify","sender","forEach","o","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangle","rectangles","Pack","idealArea","maxWidth","rect","width","height","estimatedWidth","ceil","sqrt","sort","a","b","pack","maxHeightInRow","target","position","items","dimension","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","find","undefined","UndefinedUV","A","B","static","uv","map","item","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","component","childs","RemoveChild","removeIdx","indexOf","Observable","Position","AbsolutePosition","get","ViewDimension","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","Scale","scale","Dimension","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MaintainExtremum","rightTop","Destroy","point","extremum","viewWidth","Right","Middle","viewHeight","Top","DebugControls","uiRenderer","group","margin","buttonSideLength","executeButton","CreateButton","fillColor","DefaultButtonFillColor","outlineColor","DefaultButtonOutlineColor","color","DefaultButtonIconColor","_sender","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","Icon","DebugModeButtonIconColor","sideLength","Disable","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","yOffsetFactor","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","Style","ArrayHelper","array","comparator","length","n","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","absolutePosition","ZIndex","Text","IsDestroyed","EnumSize","Object","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","value","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","window","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","__param","unmanaged","_a","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","inject","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","settings","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","CreateLabel","panelContentZOffset","lineHeight","StyleRange","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","iconMargin","AlertIconSideLength","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","iconUV","toDestroyIdx","_b","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnDestroy","onDestroy","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","MathUtil","tolerance","EPSILON","abs","points","p","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","settingsButton","openSettingsObservable","OpenFromDiskObservable","SaveToDiskObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","InputControls","input","OutputControls","outputTextList","Output","NewLineFormatter","RetrieveFontGlyphCollection","strArr","join","SnackbarControls","Show","snackbar","Hide","widthPercent","hideTimer","setTimeout","showTime","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","historyControls","editControls","outputControls","BuildStickyProjection","debugControls","inputControls","fileControls","stackControls","Snackbar","stickyProjection","mat4","ZNear","SourceCodeMemory","Initialize","ctr","Read","ptr","Write","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","_class","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","p0","p1","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lb","rt","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","flatMap","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","emptyValue","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","inFocus","inFocusOnDestroyReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","OpenSettings","movementX","movementY","SwitchFocus","smoothCameraZoomEffect","deltaY","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","DOMException","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","showSaveFilePicker","suggestedName","stream","createWritable","sourceString","write","close","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","_g","_h","_j","_k","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","service","OnContextReady","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheel","onKeydown","routes","path","CodeEditor","router","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","every","getter","__esModule","definition","defineProperty","enumerable","f","chunkId","all","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","event","doneFns","parentNode","removeChild","head","appendChild","toStringTag","installedChunks","installedChunkData","promise","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}