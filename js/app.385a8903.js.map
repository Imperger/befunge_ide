{"version":3,"file":"js/app.385a8903.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=af0fff8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=af0fff8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove(e);\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect(e);\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnZoom(e);\n    }\n\n    abstract OnCameraMove(e: MouseEvent): void;\n\n    abstract OnSelect(e: MouseEvent): void;\n\n    abstract OnZoom(e: WheelEvent): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        const factor = window.devicePixelRatio === 1 ? 1 : 0.5;\n\n        return window.devicePixelRatio * factor;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    observer: Observer<T>;\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale / Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x + component.Dimension.width,\n                y: component.Position.y + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const alert = new UIObservableAlert(\n            position,\n            dimension,\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + component.Dimension.height / 2 - label.Dimension.height / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight * this.Scale,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.UpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scroll = 0;\n\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height + this.Dimension.height;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, dimension, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { EditControls } from \"./EditControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    private readonly verticalPositions = { default: 60, shifted: 100 };\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(EditControls) private editControls: EditControls) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 800, y: this.verticalPositions.default },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n\n        this.BeResponsible();\n    }\n\n    private BeResponsible(): void {\n        const dimension = this.group.Dimension;\n\n        const shiftedY = Intersection.RectangleRectangle(\n            { ...this.group.AbsolutePosition, width: dimension.width, height: dimension.height + (this.verticalPositions.shifted - this.verticalPositions.default) / 2 },\n            { ...this.editControls.Position, ...this.editControls.Dimension }) ?\n            this.verticalPositions.shifted :\n            this.verticalPositions.default;\n\n        if (this.group.Position.y !== shiftedY) {\n            this.group.Position = { x: this.group.Position.x, y: shiftedY };\n        }\n\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + margin + sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n}\n","import { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private currentTab: 'input' | 'output' = 'output';\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 200;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            64,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            64,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n\n        return Math.min(this.maxPanelWidth, widthToFit);\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n\n        for (let n = 0, width = 0; n < str.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = 0;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = 0;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private widthPercent = 0.95;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 32;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        const width = Math.min(this.settings.ViewDimension.Width * this.widthPercent / this.group.Scale, 800);\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            { width, height: 100 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService implements AsyncConstructable {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    private editDirectionControls!: EditDirectionControls;\n\n    private fileControls!: FileControls;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.editDirectionControls = new EditDirectionControls(this.uiRenderer);\n        this.fileControls = new FileControls(this.uiRenderer);\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (symbol !== String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt))) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => String.fromCharCode(x) === symbol)) {\n            this.history.Push(command);\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990,0.976,0.986), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach((shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown))\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [50, 100, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        this.camera = mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  SetupContext();\n\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = canvas.value?.clientWidth ?? 0;\n  innerHeight.value = canvas.value?.clientHeight ?? 0;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=51837941&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51837941\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5106); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","x","y","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","AppEventTransformer","OnMouseMove","buttons","Left","OnCameraMove","selectStrategy","OnSelect","OnWheel","OnZoom","__decorate","injectable","Inversify","Container","AppSettings","Math","PI","min","max","Width","Height","DevicePixelRatio","factor","window","devicePixelRatio","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","ObservableController","Attach","observer","descriptor","id","observers","push","splice","findIndex","DetachAll","Notify","sender","forEach","o","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangle","rectangles","Pack","idealArea","maxWidth","rect","width","height","estimatedWidth","ceil","sqrt","sort","a","b","pack","maxHeightInRow","target","position","items","dimension","NotNull","msg","Error","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","find","undefined","UndefinedUV","A","B","static","uv","map","item","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","component","childs","RemoveChild","removeIdx","indexOf","Observable","Position","AbsolutePosition","get","ViewDimension","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","Scale","scale","Dimension","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MaintainExtremum","rightTop","Destroy","point","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","length","n","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","aTopRight","bTopRight","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","absolutePosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","Object","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","value","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","__param","unmanaged","_a","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","super","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","inject","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","settings","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","iconMargin","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_b","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","MathUtil","tolerance","EPSILON","abs","points","p","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","margin","CreateButton","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","EditControls","buttonIconColor","btnSideLength","group","selectButton","_sender","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","IllegalInstructionException","Where","Opcode","PCDirection","DebugControls","_class","editControls","default","shifted","verticalPositions","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","BeResponsible","shiftedY","RectangleRectangle","DebugMode","debugMode","mode","DebugModeButtonIconColor","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","join","SnackbarControls","Show","snackbar","Hide","widthPercent","hideTimer","setTimeout","showTime","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","historyControls","debugControls","stackControls","ioControls","BuildStickyProjection","fileControls","Snackbar","stickyProjection","mat4","ZNear","_g","_h","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","Empty","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","p0","p1","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lb","rt","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","flatMap","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","OnSourceCodeChanged","movementX","movementY","SwitchFocus","smoothCameraZoomEffect","deltaY","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","_j","_k","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}