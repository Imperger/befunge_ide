{"version":3,"file":"js/app.f48bd75a.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/InputControls.ts","webpack://befunge/./src/app/Overlay/OutputControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100vh;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=af0fff8a\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=af0fff8a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove(e);\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect(e);\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnZoom(e);\n    }\n\n    abstract OnCameraMove(e: MouseEvent): void;\n\n    abstract OnSelect(e: MouseEvent): void;\n\n    abstract OnZoom(e: WheelEvent): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    observer: Observer<T>;\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x + component.Dimension.width,\n                y: component.Position.y + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y;\n        }\n    }\n}\n","import { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(private uiRenderer: UIRenderer) {\n        this.group = new UIObservablePositioningGroup({ x: 800, y: 60 }, { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x,\n                        y: 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const yOffsetFactor = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x,\n                y: yOffsetFactor * margin + (yOffsetFactor + 1) * sideLength + margin\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.scale,\n            height: this.dimension.height * this.scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const alert = new UIObservableAlert(\n            position,\n            dimension,\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + this.AlertIconSideLength(component),\n            y: component.Position.y + component.Dimension.height / 2 - label.Dimension.height / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.Position,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    private onDestroy = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnDestroy(): Observable<void> {\n        return this.onDestroy;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onDestroy.Notify();\n\n        this.onDestroy.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.borderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.scale,\n            height: this.dimension.height * this.scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.borderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.label.Scale = scale;\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scroll = 0;\n\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                this.scrollControls.scrollBottomButton.Scale = this.scale;\n                this.scrollControls.scrollTopButton.Scale = this.scale;\n\n                this.ScrollAligned(0);\n            }\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        const margin = 5;\n\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - margin,\n                y: this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - margin\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        const margin = 5;\n\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - margin,\n                y: this.Position.y + this.borderWidth + margin\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.scale + this.Dimension.height / this.scale;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        const attrs = PrimitiveBuilder.AABBRectangle(\n            {\n                x: component.AbsolutePosition.x + component.BorderWidth,\n                y: component.AbsolutePosition.y + component.BorderWidth\n            },\n            {\n                width: component.Dimension.width - 2 * component.BorderWidth,\n                height: component.Dimension.height - 2 * component.BorderWidth\n            },\n            []\n        );\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        const attrs = PrimitiveBuilder.AABBFrame(\n            component.AbsolutePosition,\n            component.Dimension,\n            component.BorderWidth,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n            ]\n        );\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, dimension, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const buttonMargin = 10;\n        const [buttonWidth, btnHeight] = [75, 50];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 100\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n}\n","import { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(private uiRenderer: UIRenderer) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n\n        this.shareButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport class InputControls {\n    private group: UIObservablePositioningGroup;\n\n    private input: UIEditableTextList;\n\n    constructor(private uiRenderer: UIRenderer) {\n        const margin = 10;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 145 + 800 + margin, y: 10 },\n            { vertical: VerticalAnchor.Bottom });\n\n        this.input = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: 800, height: 200 },\n            1,\n            '',\n            64,\n            this.group\n        );\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Text(): string {\n        return this.input.Text;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class OutputControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList!: UITextList;\n\n    private charactersPerLine = 24;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 800, height: 200 },\n            1,\n            '',\n            64,\n            this.group);\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n\n        for (let n = 0, width = 0; n < str.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = 0;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = 0;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(OutputControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group!: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private widthPercent = 0.40;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 32;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        const width = this.settings.ViewDimension.Width * this.widthPercent;\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: (this.settings.ViewDimension.Width - width) / 2, y: 0 },\n            { width, height: 100 },\n            1,\n            icon,\n            text,\n            style);\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(private uiRenderer: UIRenderer) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 650\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { InputControls } from \"./InputControls\";\nimport { OutputControls } from \"./OutputControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService implements AsyncConstructable {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    private editDirectionControls!: EditDirectionControls;\n\n    private debugControls!: DebugControls;\n\n    private inputControls!: InputControls;\n\n    private fileControls!: FileControls;\n\n    private stackControls!: StackControls;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(OutputControls) private outputControls: OutputControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n\n    async AsyncConstructor(): Promise<void> {\n        this.editDirectionControls = new EditDirectionControls(this.uiRenderer);\n        this.debugControls = new DebugControls(this.uiRenderer);\n        this.inputControls = new InputControls(this.uiRenderer);\n        this.fileControls = new FileControls(this.uiRenderer);\n        this.stackControls = new StackControls(this.uiRenderer);\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get InputControls(): InputControls {\n        return this.inputControls;\n    }\n\n    get OutputControls(): OutputControls {\n        return this.outputControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.inputControls.Resize();\n        this.outputControls.Resize();\n    }\n\n    Touch(e: MouseEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (symbol !== String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt))) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => String.fromCharCode(x) === symbol)) {\n            this.history.Push(command);\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        this.history.Push(command);\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.OutputControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.OutputControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.OutputControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.OutputControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990,0.976,0.986), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach((shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown))\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.InputControls.Text);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onDestroy = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnDestroy(): Observable<void> {\n        return this.onDestroy;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnDestroy: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private inFocusOnDestroyReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [50, 100, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnDestroyReleaser = this.inFocus.OnDestroy.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        this.camera = mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnDestroyReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnDestroy.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  SetupContext();\n\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = canvas.value?.clientWidth ?? 0;\n  innerHeight.value = canvas.value?.clientHeight ?? 0;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=51837941&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51837941\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7692); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","x","y","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","AppEventTransformer","OnMouseMove","buttons","Left","OnCameraMove","selectStrategy","OnSelect","OnWheel","OnZoom","__decorate","injectable","Inversify","Container","AppSettings","Math","PI","min","max","Width","Height","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","IllegalInstructionException","Error","Where","Opcode","super","PCDirection","ObservableController","Attach","observer","descriptor","id","observers","push","splice","findIndex","DetachAll","Notify","sender","forEach","o","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangle","rectangles","Pack","idealArea","maxWidth","rect","width","height","estimatedWidth","ceil","sqrt","sort","a","b","pack","maxHeightInRow","target","position","items","dimension","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","find","undefined","UndefinedUV","A","B","static","uv","map","item","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","component","childs","RemoveChild","removeIdx","indexOf","Observable","Position","AbsolutePosition","get","ViewDimension","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","Scale","scale","Dimension","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MaintainExtremum","rightTop","Destroy","point","extremum","viewWidth","Right","Middle","viewHeight","Top","DebugControls","uiRenderer","group","margin","buttonSideLength","executeButton","CreateButton","fillColor","DefaultButtonFillColor","outlineColor","DefaultButtonOutlineColor","color","DefaultButtonIconColor","_sender","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","Icon","DebugModeButtonIconColor","sideLength","Disable","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","yOffsetFactor","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","Style","ArrayHelper","array","comparator","length","n","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","absolutePosition","ZIndex","Text","IsDestroyed","EnumSize","Object","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","value","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","window","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","__param","unmanaged","_a","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","inject","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","settings","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","CreateLabel","panelContentZOffset","lineHeight","StyleRange","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","iconMargin","AlertIconSideLength","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","iconUV","toDestroyIdx","_b","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnDestroy","onDestroy","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","MathUtil","tolerance","EPSILON","abs","points","p","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","InputControls","input","OutputControls","outputTextList","Output","NewLineFormatter","RetrieveFontGlyphCollection","strArr","join","SnackbarControls","Show","snackbar","Hide","widthPercent","hideTimer","setTimeout","showTime","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","historyControls","editControls","outputControls","BuildStickyProjection","debugControls","inputControls","fileControls","stackControls","Snackbar","stickyProjection","mat4","ZNear","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","Empty","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","_class","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","p0","p1","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lb","rt","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","flatMap","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","inFocus","inFocusOnDestroyReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","OnSourceCodeChanged","movementX","movementY","SwitchFocus","smoothCameraZoomEffect","deltaY","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","Encode","router","replace","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","_g","_h","_j","_k","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}