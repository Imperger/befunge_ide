{"version":3,"file":"js/app.0aef7d0c.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CameraService.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextButton/UIObservableTextButton.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/VirtualKeyboardControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/DOM/FileStorage/FileStorage.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/lib/DOM/EventWaiter.ts","webpack://befunge/./src/lib/DOM/FileStorage/DOMEmulatedFileStorage.ts","webpack://befunge/./src/lib/DOM/FileStorage/FilePickerApiFileStorage.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype MoveCameraFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private moveCamera: MoveCameraFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.moveCamera({\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnCameraMove(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove({\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnStepZoom(e);\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnCameraMove(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnStepZoom(e: WheelEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory'),\n    FileStorage: Symbol('File storage')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { inject, injectable } from \"inversify\";\n\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) {\n        this.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n    }\n\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    static ShortestMoveForIntersection(movable: Rectangle, destination: Rectangle): Vec2 {\n        const leftToRight = destination.rt.x - movable.lb.x;\n        const rightToLeft = destination.lb.x - movable.rt.x;\n\n        const bottomToTop = destination.rt.y - movable.lb.y;\n        const topToBottom = destination.lb.y - movable.rt.y;\n\n        const intersectByX = !(leftToRight < 0 || rightToLeft > 0);\n        const intersectByY = !(bottomToTop < 0 || topToBottom > 0);\n\n        if (intersectByX && intersectByY) {\n            return { x: 0, y: 0 };\n        }\n\n        const x = leftToRight < 0 ?\n            leftToRight :\n            rightToLeft > 0 ?\n                rightToLeft :\n                0;\n\n        const y = bottomToTop < 0 ?\n            bottomToTop :\n            topToBottom > 0 ?\n                topToBottom :\n                0;\n\n\n        return { x, y };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { CodeEditorRenderer } from \"./CodeEditor/CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Transformation } from \"@/lib/math/Transformation\";\nimport { Vec3 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\n\n@injectable()\nexport class CameraService {\n    private camera: mat4 = mat4.create();\n    private projection: mat4 = mat4.create();\n    private viewProjection: mat4 = mat4.create();\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer) {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    MoveTo(position: Partial<Vec3>): void {\n        position.x !== undefined && (this.camera[12] = position.x);\n        position.y !== undefined && (this.camera[13] = position.y);\n        position.z !== undefined && (this.camera[14] = position.z);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    Translate(delta: Partial<Vec3>): void {\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                delta.x ?? 0,\n                delta.y ?? 0,\n                delta.z ?? 0\n            ]);\n\n        this.UpdateViewProjection();\n        this.MaintainCodeEditorVisible();\n    }\n\n    get Position(): Vec3 {\n        return {\n            x: this.camera[12],\n            y: this.camera[13],\n            z: this.camera[14]\n        };\n    }\n\n    get ViewProjection(): mat4 {\n        return this.viewProjection;\n    }\n\n    Resize(): void {\n        this.UpdateProjection();\n        this.UpdateViewProjection();\n    }\n\n    private UpdateProjection(): void {\n        mat4.perspective(\n            this.projection,\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private UpdateViewProjection(): void {\n        const view = mat4.invert(mat4.create(), this.camera);\n        mat4.mul(this.viewProjection, this.projection, view);\n    }\n\n    private MaintainCodeEditorVisible(): void {\n        const cellSize = this.codeEditorRenderer.CellSize;\n        const lbNDC = vec3.transformMat4(vec3.create(), [cellSize, cellSize, 0], this.viewProjection);\n        const rtNDC = vec3.transformMat4(\n            vec3.create(),\n            [\n                (this.settings.MemoryLimit.Width - 1) * cellSize,\n                (this.settings.MemoryLimit.Height - 1) * cellSize,\n                0\n            ],\n            this.viewProjection);\n\n        const ndcCompensation = Transformation.ShortestMoveForIntersection(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        if (ndcCompensation.x === 0 && ndcCompensation.y === 0) {\n            return;\n        }\n\n        const screenCompensation = {\n            x: ndcCompensation.x * this.settings.ViewDimension.Width / 2,\n            y: ndcCompensation.y * this.settings.ViewDimension.Height / 2\n        };\n\n        const worldCompensation = Camera.UnprojectMovement(\n            { x: screenCompensation.x, y: -screenCompensation.y },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            {\n                width: this.settings.ViewDimension.Width,\n                height: this.settings.ViewDimension.Height\n            });\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [\n                worldCompensation.x,\n                worldCompensation.y,\n                0\n            ]);\n\n        this.UpdateViewProjection();\n    }\n}\n\nInversify.bind(CameraService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Empty, Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug, DebugStepInto,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output, Keyboard, Shift, Backspace\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.Empty,\n                filename: 'ui_icons/empty.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.DebugStepInto,\n                filename: 'ui_icons/debug_step_into.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Keyboard,\n                filename: 'ui_icons/keyboard.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Shift,\n                filename: 'ui_icons/shift.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Backspace,\n                filename: 'ui_icons/backspace.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n    private updateNeeded = false;\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    private UpdateChilds(): void {\n        this.CalculateDimension();\n\n        this.observable.Notify(this);\n\n        this.updateNeeded = false;\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n\n        if (!this.updateNeeded) {\n            queueMicrotask(() => this.UpdateChilds());\n        }\n\n        this.updateNeeded = true;\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    CalculateDimension(): void {\n        if (this.childs.length === 0) {\n\n            this.dimension.width = 0;\n            this.dimension.height = 0;\n\n            return;\n        }\n\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        this.dimension.width = max.x - min.x;\n        this.dimension.height = max.y - min.y;\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { MyInputEvent } from \"../InputReceiver\";\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\n@injectable()\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle, UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        if (parent === null) {\n            this.UpdateAttributes(button);\n        }\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    private updateNeeded = false;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.DeferredNotify()) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.DeferredNotify();\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.DeferredNotify();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.DeferredNotify();\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.DeferredNotify();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.DeferredNotify();\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.DeferredNotify();\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private DeferredNotify(): void {\n        if (!this.updateNeeded) {\n            this.updateNeeded = true;\n            queueMicrotask(() => this.Notify());\n        }\n    }\n\n    private Notify(): void {\n        this.observable.Notify(this);\n        this.updateNeeded = false;\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[lines.length - 1].text, component, fontGlyphCollection);\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: component.AbsolutePosition.y - minBaseOffset\n        };\n\n        for (let n = lines.length - 1; n >= 0; --n) {\n            const line = lines[n];\n\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y += component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y += component.LineHeight * component.Scale + minBaseOffset;\n        }\n\n        component.UpdateTextDimension({ width, height: y - component.AbsolutePosition.y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { SymbolStyle, UILabel } from \"../UILabel/UILabel\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { Dimension, UIButtonStyle, UICaptionStyle, UITextButton } from \"./UITextButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UITextButton) => void;\n\nexport type UpdateCallback = (component: UIObservableTextButton) => void;\n\nexport type DeleterCallback = (component: UIObservableTextButton) => void;\n\nexport class UIObservableTextButton implements UIComponent, UITextButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private observable = new ObservableController<UIObservableTextButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private button: UIIconButton;\n\n    private label: UILabel;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private caption: UICaptionStyle,\n        private touchCallback: TouchCallback,\n        uiRenderer: UICreator,\n        private parent: UIObservablePositioningGroup | null = null) {\n\n        this.button = uiRenderer.CreateIconButton(\n            this.position,\n            this.dimension,\n            this.zIndex,\n            this.style,\n            { color: [0, 0, 0], icon: UIIcon.Empty },\n            (sender: UIIconButton) => this.TouchAdapter(sender),\n            this.parent);\n\n        const aboveButton = 0.001;\n        this.label = uiRenderer.CreateLabel(\n            this.Position,\n            zIndex + aboveButton,\n            this.caption.text,\n            this.caption.lineHeight,\n            this.parent);\n        this.label.StyleRange(0, this.label.Text.length, { color: this.caption.color });\n\n        this.label.Position = this.CaptionPosition;\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableTextButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.button.Position = this.Position;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.button.Dimension = dimension;\n        this.label.Position = this.CaptionPosition;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.button.ZIndex = zIndex;\n\n        const aboveButton = 0.001;\n        this.label.ZIndex = zIndex + aboveButton;\n\n        this.observable.Notify(this);\n    }\n\n    get Caption(): UICaptionStyle {\n        return this.caption;\n    }\n\n    set Caption(style: UICaptionStyle) {\n        this.caption = { ...style };\n\n        this.label.Text = style.text;\n        this.label.LineHeight = style.lineHeight;\n        this.label.StyleRange(0, this.label.Text.length, { color: style.color });\n\n        queueMicrotask(() => this.label.Position = this.CaptionPosition);\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.button.Style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.button.Scale = scale;\n        this.label.Scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n        this.button.Disable = value;\n\n        this.observable.Notify(this);\n    }\n\n    private get CaptionPosition(): Vec2 {\n        return {\n            x: this.Position.x + (this.dimension.width - this.label.Dimension.width / this.label.Scale) / 2,\n            y: this.Position.y + (this.dimension.height - this.label.Dimension.height / this.label.Scale) / 2\n        }\n    }\n\n    private TouchAdapter(_sender: UIIconButton): void {\n        this.touchCallback(this);\n    }\n\n    StyleCaptionRange(begin: number, end: number, style: SymbolStyle): void {\n        this.label.StyleRange(begin, end, style);\n    }\n\n    Touch(): void {\n        this.button.Touch();\n    }\n\n    Destroy(): void {\n        this.label.Destroy();\n        this.button.Destroy();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n}\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.ScheduleUpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.ScheduleUpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        queueMicrotask(() => {\n            if (this.visible && this.IsContentOverflow) {\n                this.scroll = 0;\n                this.ScrollAligned(this.MinScroll);\n            }\n        });\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private ScheduleUpdateScrollControlsPresence(): void {\n        queueMicrotask(() => this.UpdateScrollControlsPresence());\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateIconButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height - 2 * this.borderWidth;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback as IconButtonTouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { TouchCallback as TextButtonTouchCallback } from \"./UITextButton/UIObservableTextButton\";\nimport { UIObservableTextButton } from \"./UITextButton/UIObservableTextButton\";\nimport { UICaptionStyle, UITextButton } from \"./UITextButton/UITextButton\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null): UITextButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateIconButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: IconButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateTextButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        caption: UICaptionStyle,\n        touchCallback: TextButtonTouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UITextButton {\n        return new UIObservableTextButton(position, dimension, zIndex, style, caption, touchCallback, this, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const touchResult = this.TouchAlerts(e.offsetX, e.offsetY) ||\n            this.TouchButtons(e.offsetX, e.offsetY) ||\n            this.TouchLabels(e.offsetX, e.offsetY);\n\n        return touchResult || (this.TouchEditableTextList(e.offsetX, e.offsetY) ?? false);\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        intersected[0].Destroy();\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\nexport enum DebugAction { RunNextBreakpoint, RunNextInstruction, Interrupt };\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<DebugAction>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateIconButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(DebugAction.RunNextBreakpoint),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateIconButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateIconButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + 2 * margin + 2 * sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const executeNextInstructionButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: margin + sideLength },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.DebugStepInto, color: DebugControls.DebugModeButtonIconColor },\n                    _sender => this.debugObservable.Notify(DebugAction.RunNextInstruction),\n                    this.debugMenuGroup);\n\n                const stopDebuggingButton = this.uiRenderer.CreateIconButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(DebugAction.Interrupt),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<DebugAction> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateIconButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateIconButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateIconButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateIconButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateIconButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateIconButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateIconButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateIconButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateIconButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateIconButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateIconButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateIconButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.stackTextList.Visible = false;\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n\n    get Visible(): boolean {\n        return this.stackTextList.Visible;\n    }\n\n    set Visible(visible: boolean) {\n        this.stackTextList.Visible = visible;\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextButton } from \"@/lib/UI/UITextButton/UITextButton\";\n\nenum KeyboardShiftMode { Lovercase, Uppercase, Secondary };\n\ninterface KeyboardStateFetcher {\n    shift: () => KeyboardShiftMode;\n    ascii: () => boolean;\n}\n\nclass KeyboardButtonLayout {\n    private symbols: string[];\n\n    constructor(\n        private keyboardState: KeyboardStateFetcher,\n        primary: string,\n        secondary?: string) {\n        this.symbols = secondary === undefined ?\n            [primary] :\n            [secondary, primary];\n    }\n\n    get Caption(): string {\n        let primary = this.symbols[this.symbols.length - 1];\n        primary = this.IsUppercase ? primary.toUpperCase() : primary.toLowerCase();\n\n        if (this.keyboardState.shift() !== KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n            primary = primary.charCodeAt(0).toString();\n        }\n\n        if (this.HasSecondary) {\n            let secondary = this.symbols[0];\n\n            if (this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii()) {\n                secondary = secondary.charCodeAt(0).toString();\n            }\n\n            return `${secondary}\\n${primary}`;\n        } else {\n            return primary;\n        }\n    }\n\n    get Symbol(): string {\n        const symbol = this.symbols[this.Index];\n\n        return this.IsUppercase ? symbol.toUpperCase() : symbol.toLowerCase();\n    }\n\n    get CaptionDelimiter(): number {\n        return this.keyboardState.shift() === KeyboardShiftMode.Secondary && this.keyboardState.ascii() ?\n            this.symbols[0].charCodeAt(0).toString().length :\n            this.symbols[0].length;\n    }\n\n    get HasSecondary(): boolean {\n        return this.symbols.length > 1;\n    }\n\n    private get Index(): number {\n        return +(this.keyboardState.shift() === KeyboardShiftMode.Lovercase ||\n            this.keyboardState.shift() === KeyboardShiftMode.Uppercase) % this.symbols.length;\n    }\n\n    private get IsUppercase(): boolean {\n        return this.keyboardState.shift() === KeyboardShiftMode.Uppercase;\n    }\n}\n\ntype ButtonDeleter = () => void;\n\ninterface SymbolButtonDescriptor {\n    button: UITextButton;\n    layout: KeyboardButtonLayout;\n}\n\n@injectable()\nexport class VirtualKeyboardControls {\n    private readonly fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private readonly outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private zIndex = 5;\n\n    private toggleKeyboardGroup: UIObservablePositioningGroup;\n    private toggleKeyboard = false;\n    private toggleKeyboardButton!: UIIconButton;\n    private shiftIconColor = {\n        lovercase: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb,\n        uppercase: [0.08235294117647059, 0.396078431372549, 0.7529411764705882] as Rgb,\n        secondary: [0.5568627450980392, 0.26666666666666666, 0.6784313725490196] as Rgb\n    };\n\n    private buttonCaptionColor = {\n        inactive: [0.7411764705882353, 0.7411764705882353, 0.7411764705882353] as Rgb,\n        active: [0.17254901960784313, 0.24313725490196078, 0.3137254901960784] as Rgb\n    };\n\n    private asciiToggleOutlineColor = {\n        inactive: [0.4980392156862745, 0.5490196078431373, 0.5529411764705883] as Rgb,\n        active: [0, 0, 0] as Rgb\n    };\n\n    private buttonContentColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private keyboardGroup: UIObservablePositioningGroup;\n    private symbolButtons: SymbolButtonDescriptor[] = [];\n    private buttonDimension = { width: 30, height: 60 };\n    private readonly symbolMargin = 5;\n\n    private spacebarButton!: UITextButton;\n\n    private buttonDeleter: ButtonDeleter[] = [];\n\n    private shiftWidth = 50;\n    private shiftMode = KeyboardShiftMode.Lovercase;\n\n    private asciiMode = false;\n\n    private digitsSymbolRow!: KeyboardButtonLayout[];\n    private firstSymbolRow!: KeyboardButtonLayout[];\n    private secondSymbolRow!: KeyboardButtonLayout[];\n    private thirdSymbolRow!: KeyboardButtonLayout[];\n\n    private observable = new ObservableController<string>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        this.toggleKeyboardGroup = new UIObservablePositioningGroup({ x: 10, y: 10 });\n\n        this.toggleKeyboardButton = this.uiRenderer.CreateIconButton(\n            { x: 0, y: 0 },\n            { width: 30, height: 30 },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Keyboard, color: this.shiftIconColor.lovercase },\n            (_sender: UIIconButton) => this.ToggleKeyboard(),\n            this.toggleKeyboardGroup);\n\n        this.keyboardGroup = new UIObservablePositioningGroup(\n            { x: 0, y: this.symbolMargin },\n            { horizontal: HorizontalAnchor.Middle });\n\n        this.SetupKeyboardLayouts();\n\n        this.observable.Attach(_symbol => this.TouchFeedback());\n    }\n\n    private SetupKeyboardLayouts(): void {\n        const keyboardStateFetcher = {\n            shift: () => this.shiftMode,\n            ascii: () => this.asciiMode\n        };\n\n        this.digitsSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, '1', '!'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '2', '?'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '3', ','),\n            new KeyboardButtonLayout(keyboardStateFetcher, '4', '.'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '5', '\\\\'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '6', '`'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '7'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '8'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '9'),\n            new KeyboardButtonLayout(keyboardStateFetcher, '0')\n        ];\n\n        this.firstSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'q', '%'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'w', '^'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'e', '~'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'r', '|'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 't', '['),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'y', ']'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'u', '<'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'i', '>'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'o', '{'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'p', '}')\n        ];\n\n        this.secondSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'a', '@'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '#'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'd', '&'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'f', '*'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'g', '-'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'h', '+'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'j', '='),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'k', '('),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'l', ')')\n        ];\n\n        this.thirdSymbolRow = [\n            new KeyboardButtonLayout(keyboardStateFetcher, 'z', '_'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 's', '$'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'c', '\"'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'v', '\\''),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'b', ':'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'n', ';'),\n            new KeyboardButtonLayout(keyboardStateFetcher, 'm', '/')\n        ];\n    }\n\n    private ToggleKeyboard(): void {\n        this.toggleKeyboard = !this.toggleKeyboard;\n\n        this.toggleKeyboardButton.Icon = {\n            icon: this.toggleKeyboardButton.Icon.icon,\n            color: this.toggleKeyboard ? this.shiftIconColor.uppercase : this.shiftIconColor.lovercase\n        };\n\n        this.toggleKeyboard ?\n            this.SpawnKeyboard() :\n            this.HideKeyboard();\n    }\n\n    private SpawnKeyboard(): void {\n        this.CreateSymbolRow({ x: 0, y: 4 * this.buttonDimension.height + 5 * this.symbolMargin },\n            this.digitsSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: 0, y: 3 * this.buttonDimension.height + 4 * this.symbolMargin },\n            this.firstSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.buttonDimension.width / 2, y: 2 * this.buttonDimension.height + 3 * this.symbolMargin },\n            this.secondSymbolRow);\n\n        this.CreateSymbolRow(\n            { x: this.shiftWidth + this.symbolMargin, y: this.buttonDimension.height + 2 * this.symbolMargin },\n            this.thirdSymbolRow);\n\n        this.CreateBottomRow();\n    }\n\n    private CreateSymbolRow(position: Vec2, layouts: KeyboardButtonLayout[]): void {\n        for (let n = 0; n < layouts.length; ++n) {\n            const layout = layouts[n];\n            const button = this.uiRenderer.CreateTextButton(\n                {\n                    x: position.x + (this.buttonDimension.width + this.symbolMargin) * n,\n                    y: position.y\n                },\n                {\n                    width: this.buttonDimension.width,\n                    height: this.buttonDimension.height\n                },\n                this.zIndex,\n                { fillColor: this.fillColor, outlineColor: this.outlineColor },\n                { text: layout.Caption, lineHeight: 16, color: this.buttonContentColor },\n                (_sender: UITextButton) => this.observable.Notify(layouts[n].Symbol),\n                this.keyboardGroup);\n\n            this.StyleButtonCaption(button, layout, true);\n\n            this.symbolButtons.push({ button, layout });\n            this.buttonDeleter.push(() => button.Destroy());\n        }\n    }\n\n    private CreateBottomRow(): void {\n        const shift = this.uiRenderer.CreateIconButton(\n            {\n                x: 0,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Shift, color: this.buttonContentColor },\n            (sender: UIIconButton) => this.ToggleShift(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => shift.Destroy());\n\n\n        this.spacebarButton = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.symbolMargin,\n                y: this.symbolMargin\n            },\n            {\n                width: this.thirdSymbolRow.length * this.buttonDimension.width + this.symbolMargin * (this.thirdSymbolRow.length - 1),\n                height: this.buttonDimension.height\n            },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: '', lineHeight: 16, color: this.buttonContentColor },\n            (_sender: UITextButton) => this.observable.Notify(' '),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => this.spacebarButton.Destroy());\n\n\n        const backspace = this.uiRenderer.CreateIconButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.buttonDimension.height + 2 * this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { icon: UIIcon.Backspace, color: this.buttonContentColor },\n            (_sender: UIIconButton) => this.observable.Notify('Backspace'),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => backspace.Destroy());\n\n\n        const asciiCodes = this.uiRenderer.CreateTextButton(\n            {\n                x: this.shiftWidth + this.thirdSymbolRow.length * this.buttonDimension.width + (this.thirdSymbolRow.length + 1) * this.symbolMargin,\n                y: this.symbolMargin\n            },\n            { width: this.shiftWidth, height: this.buttonDimension.height },\n            this.zIndex,\n            { fillColor: this.fillColor, outlineColor: this.outlineColor },\n            { text: 'ASCII', lineHeight: 16, color: this.buttonContentColor },\n            (sender: UITextButton) => this.ToggleASCII(sender),\n            this.keyboardGroup);\n\n        this.buttonDeleter.push(() => asciiCodes.Destroy());\n    }\n\n    private ToggleShift(sender: UIIconButton): void {\n        this.TouchFeedback();\n\n        this.shiftMode = (this.shiftMode + 1) % EnumSize(KeyboardShiftMode);\n\n        const color = [\n            this.shiftIconColor.lovercase,\n            this.shiftIconColor.uppercase,\n            this.shiftIconColor.secondary\n        ][this.shiftMode];\n\n        sender.Icon = { ...sender.Icon, color };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private ToggleASCII(sender: UITextButton): void {\n        this.TouchFeedback();\n\n        this.asciiMode = !this.asciiMode;\n\n        this.spacebarButton.Caption = {\n            ...this.spacebarButton.Caption,\n            text: this.asciiMode ? ' '.charCodeAt(0).toString() : ''\n        };\n\n\n        sender.Style = {\n            ...sender.Style,\n            outlineColor: this.asciiToggleOutlineColor[this.asciiMode ? 'active' : 'inactive']\n        };\n\n        this.UpdateSymbolButtonsCaptions();\n    }\n\n    private UpdateSymbolButtonsCaptions(): void {\n        this.symbolButtons.forEach(descriptor => {\n            const { button, layout } = descriptor;\n\n            button.Caption = { ...button.Caption, text: layout.Caption };\n\n            switch (this.shiftMode) {\n                case KeyboardShiftMode.Lovercase:\n                case KeyboardShiftMode.Uppercase:\n                    this.StyleButtonCaption(button, layout, true);\n                    break;\n                case KeyboardShiftMode.Secondary:\n                    this.StyleButtonCaption(button, layout, false);\n                    break;\n            }\n        });\n    }\n\n    private StyleButtonCaption(button: UITextButton, layout: KeyboardButtonLayout, primary: boolean): void {\n        if (layout.HasSecondary) {\n            const [primaryColor, secondaryColor] = primary ?\n                [this.buttonCaptionColor.inactive, this.buttonCaptionColor.active] :\n                [this.buttonCaptionColor.active, this.buttonCaptionColor.inactive];\n\n            button.StyleCaptionRange(0, layout.CaptionDelimiter, { color: primaryColor });\n            button.StyleCaptionRange(layout.CaptionDelimiter + 1, button.Caption.text.length, { color: secondaryColor });\n        } else {\n            button.StyleCaptionRange(0, button.Caption.text.length, { color: this.buttonCaptionColor.active });\n        }\n    }\n\n    private HideKeyboard(): void {\n        this.buttonDeleter.forEach(destroy => destroy());\n        this.buttonDeleter.length = 0;\n\n        this.symbolButtons.length = 0;\n\n        this.shiftMode = KeyboardShiftMode.Lovercase;\n    }\n\n    private TouchFeedback(): void {\n        navigator.vibrate(30);\n    }\n\n    get Observable(): Observable<string> {\n        return this.observable;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.keyboardGroup.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.keyboardGroup.Dimension;\n    }\n\n    Resize(): void {\n        this.toggleKeyboardGroup.Resize();\n        this.keyboardGroup.Resize();\n    }\n}\n\nInversify.bind(VirtualKeyboardControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\nimport { VirtualKeyboardControls } from \"./VirtualKeyboardControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(VirtualKeyboardControls) private virtualKeyboardControls: VirtualKeyboardControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    get VirtualKeyboardControls(): VirtualKeyboardControls {\n        return this.virtualKeyboardControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.virtualKeyboardControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const isKeyboardTouched = Intersection.AABBRectanglePoint(\n            {\n                x: this.virtualKeyboardControls.AbsolutePosition.x,\n                y: this.virtualKeyboardControls.AbsolutePosition.y,\n                width: this.virtualKeyboardControls.Dimension.width,\n                height: this.virtualKeyboardControls.Dimension.height\n            },\n            { x, y });\n\n        return this.uiRenderer.Touch({ offsetX: x, offsetY: y }) || isKeyboardTouched;\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(keyCode: string): void {\n        this.IsSingleCell ? this.CellInputSingle(keyCode) : this.CellInputRegion(keyCode);\n    }\n\n    private CellInputSingle(keyCode: string): void {\n        const oldValue = String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt));\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                ' ',\n                this.ReversedDirection(this.editionDirection),\n                this.cellMoveNextPostActionFactory()) :\n            this.editCellCommandFactory(\n                this.editableRegion.lt,\n                oldValue,\n                keyCode,\n                this.editionDirection,\n                this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)) ||\n            keyCode === 'Backspace' && oldValue === ' ')) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(keyCode: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = keyCode === 'Backspace' ?\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => ' '.charCodeAt(0)),\n                this.ReversedDirection(this.editionDirection),\n                this.regionMoveNextPostActionFactory()) :\n            this.editCellsRegionCommandFactory(\n                this.editableRegion,\n                oldValue,\n                Array2D.WithProvider(dimension.width, dimension.height, () => keyCode.charCodeAt(0)),\n                this.editionDirection,\n                this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!(keyCode === 'Backspace' && oldValue.Every(x => String.fromCharCode(x) === ' ') ||\n            oldValue.Every(x => String.fromCharCode(x) === keyCode))) {\n            this.history.Push(command);\n        }\n    }\n\n    private ReversedDirection(direction: EditionDirection): EditionDirection {\n        switch (direction) {\n            case EditionDirection.Left:\n                return EditionDirection.Right;\n            case EditionDirection.Right:\n                return EditionDirection.Left;\n            case EditionDirection.Up:\n                return EditionDirection.Down;\n            case EditionDirection.Down:\n                return EditionDirection.Up\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: MyInputEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  get IP(): Pointer {\n    return this.cpu.PC.Location;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { DebugAction, PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private breakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((action: DebugAction) => this.DebugCodeAction(action));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.breakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.breakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(action: DebugAction): void {\n        if (!this.DebugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.DebugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            if (action === DebugAction.RunNextBreakpoint) {\n                executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n            } else if (action === DebugAction.RunNextInstruction) {\n                executionResult = debug.RunNext();\n                if (executionResult.length > 0) {\n                    executionResult = debug.RunNext();\n                }\n            } else {\n                throw new Error('Unexpected debug action');\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (action === DebugAction.RunNextBreakpoint && breakpoints.length > 0) {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } else {\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [{ Location: { x: interpreter.IP.x, y: interpreter.IP.y } }];\n\n            this.codeEditor.Select(interpreter.IP.x, interpreter.IP.y, this.activeBreakpointColor);\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n        if (debug.IsHalted) {\n            this.DebugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n\n            this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.DebugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n\n        this.activeCellBreakpoints.forEach(brk => this.codeEditor.Unselect(brk.Location.x, brk.Location.y));\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    private set DebugMode(debug: boolean) {\n        this.debugMode = debug;\n\n        this.overlay.StackControls.Visible = debug;\n        this.overlay.EditControls.Disable = debug;\n    }\n\n    private DebugCodeAction(action: DebugAction): void {\n        if (action === DebugAction.RunNextBreakpoint && this.breakpoints.length === 0 && !this.debugMode) {\n            this.RunNext(DebugAction.RunNextInstruction);\n        } else if (action === DebugAction.Interrupt) {\n            this.Interrupt();\n        } else {\n            this.RunNext(action);\n        }\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.breakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.DebugMode ? this.SetCellBreakpoint(condition) : null;\n            this.breakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.breakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.breakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            this.breakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver, MyInputEvent } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: MyInputEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0) || e.key === 'Backspace') {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { vec2 } from \"gl-matrix\";\n\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: CameraService,\n        private destination: vec2,\n        private viewport: Viewport\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.viewport);\n\n        this.camera.Translate({\n            x: delta.x,\n            y: delta.y\n        });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { ZCameraBoundary } from \"../AppSettings\";\nimport { CameraService } from \"../CameraService\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: CameraService,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera.Position.z + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        this.camera.Translate({ z: delta });\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","export class AbortOperationException extends Error { }\n\nexport interface FileStorage {\n    Open(): Promise<string>;\n    Save(content: string): Promise<void>;\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { Observable } from \"../Observable\";\n\nexport interface MyInputEvent {\n    key: string;\n}\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: MyInputEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","import { vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CameraService } from './CameraService';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { AbortOperationException, FileStorage } from '@/lib/DOM/FileStorage/FileStorage';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver, MyInputEvent } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FileStorage) private fileStorage: FileStorage,\n        @inject(CameraService) private camera: CameraService,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera.MoveTo(\n            {\n                x: 0,\n                y: 0,\n                z: this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75\n            });\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.FocusCameraAtEditor();\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n\n        this.overlay.VirtualKeyboardControls.Observable.Attach((key: string) => this.inFocus.OnInput({ key }));\n\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.camera.Resize();\n\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseMovementEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.camera.ViewProjection,\n            this.gl.canvas);\n\n        this.camera.Translate({ x: delta.x, y: delta.y });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnStepZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera.Position.z;\n    }\n\n    OnTouchZoom(zoom: number): void {\n        this.camera.MoveTo({\n            z: MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n\n    OnKeyDown(e: MyInputEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.camera.ViewProjection;\n            this.debugRenderer.ViewProjection = this.camera.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            sourceCode = await this.fileStorage.Open();\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message);\n            }\n\n            return;\n        }\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            await this.fileStorage.Save(this.SourceCodeString());\n        } catch (e) {\n            if (e instanceof AbortOperationException) {\n                return;\n            } else if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.camera.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.camera.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.camera.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.camera.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        this.camera.Translate({\n            x: -intersection[0],\n            y: -intersection[1]\n        });\n\n        this.codeEditor.ViewProjection = this.camera.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.camera.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","export async function WaitEvent<TEvent extends Event>(target: HTMLElement, event: string): Promise<TEvent> {\n    return new Promise<TEvent>(resolve => target.addEventListener(event, e => resolve(e as TEvent), { once: true }));\n}\n","import { injectable } from \"inversify\";\n\nimport { WaitEvent } from \"../EventWaiter\";\n\nimport { FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class DOMEmulatedFileStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        const input = document.createElement('input');\n\n        input.type = 'file';\n        const onChange = WaitEvent(input, 'change');\n\n        input.click();\n\n        const onChangeResult = await onChange;\n\n        const target = onChangeResult.target as HTMLInputElement | null;\n\n        if ((target?.files?.length ?? 0) === 0) {\n            throw new Error('Failed to load file');\n        }\n\n        this.openedFilename = target!.files![0].name;\n\n        return target!.files![0].text();\n    }\n\n    async Save(content: string): Promise<void> {\n        const blob = new Blob([content], { type: 'text/plain' });\n\n        const url = window.URL.createObjectURL(blob);\n\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.openedFilename;\n\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AbortOperationException, FileStorage } from \"./FileStorage\";\n\n@injectable()\nexport class FilePickerApiDiskStorage implements FileStorage {\n    private openedFilename = 'befunge.txt';\n\n    async Open(): Promise<string> {\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                throw new AbortOperationException();\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            return file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n\n    async Save(content: string): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(content);\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        throw new AbortOperationException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { DOMEmulatedFileStorage } from \"@/lib/DOM/FileStorage/DOMEmulatedFileStorage\";\nimport { FilePickerApiDiskStorage } from \"@/lib/DOM/FileStorage/FilePickerApiFileStorage\";\nimport { FileStorage } from \"@/lib/DOM/FileStorage/FileStorage\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n\n        Inversify\n            .bind<FileStorage>(InjectionToken.FileStorage)\n            .to(this.IsPickerApiAvailable ? FilePickerApiDiskStorage : DOMEmulatedFileStorage)\n            .inSingletonScope();\n    }\n\n    private get IsPickerApiAvailable(): boolean {\n        return window.showOpenFilePicker !== undefined &&\n            window.showSaveFilePicker !== undefined;\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8240); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","moveCamera","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","movementX","window","devicePixelRatio","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnCameraMove","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","OnWheel","OnStepZoom","__decorate","injectable","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","FileStorage","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","Inversify","Container","AppSettings","gl","PI","Width","Height","AspectRatio","canvas","width","height","DevicePixelRatio","__param","inject","WebGL2RenderingContext","_a","Object","bind","toSelf","inSingletonScope","EnumSize","keys","NotNull","msg","startSymbolCode","Columns","Rows","GlyphCount","Image","LookupUV","symbol","symbolCode","charCodeAt","glyphIdx","column","row","floor","glyphWidth","glyphHeight","leftTop","A","B","FontAtlasBuilderImpl","Build","options","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","ceil","rowCount","glyphCellSize","GlyphCellSize","SetupCanvas","FillCanvasWithGlyphs","context","getImageData","document","createElement","getContext","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","PrimitiveBuilder","position","dimension","attributes","leftBottom","rightTop","rightBottom","attr","Array","isArray","push","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","Map","instance","createProgram","Attach","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","async","url","fetch","text","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","get","getUniformLocation","set","TypeSizeResolver","Sizes","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","index","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","size","location","enableVertexAttribArray","vertexAttribPointer","normalized","unmanaged","CodeCellComponent","EditorGridRenderer","settings","fontAtlas","fontAtlasTexture","floatSize","gridStride","super","FGrid","VGrid","TRIANGLES","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","cell","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","bindTexture","TEXTURE_2D","color","uv","ViewProjection","mat","Dimension","_b","_c","_d","WebGLTexture","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","AABBFrame","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","_class","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","IndicesPerPrimitive","Select","SelectRegion","region","Extremum","FlipY","OutOfGrid","selectionIdx","selected","findIndex","r","a","b","colorOffset","attrs","componentsPerVertex","colorStart","selection","point","Unselect","UnselectRegion","copy","splice","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","viewProjection","Clear","ArrayHelper","array","comparator","Transformation","movable","destination","betweenByX","Between","lb","rt","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","Min","diff","leftToRight","rightToLeft","bottomToTop","topToBottom","intersectByX","intersectByY","Intersection","plane","line","d0","vec3","c","d","d1","t","intersection","rectangle","aTopRight","bTopRight","Camera","viewport","vec","z","v","vec4","invertViewProj","mat4","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","CameraService","codeEditorRenderer","UpdateProjection","UpdateViewProjection","MoveTo","undefined","camera","MaintainCodeEditorVisible","Translate","Position","Resize","projection","Fovy","ZNear","ZFar","view","cellSize","lbNDC","rtNDC","ndcCompensation","ShortestMoveForIntersection","screenCompensation","ViewDimension","worldCompensation","UnprojectMovement","HeadlineControlsLayout","POSITIVE_INFINITY","Watch","component","Observable","ComponentUpdated","components","AbsolutePosition","absolutePosition","Scale","skipUpdates","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","absoluteExtremum","flatMap","MapComponent","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","IllegalInstructionException","Where","Opcode","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","priority","descriptor","observers","MaintainSorted","DetachAll","Notify","sender","o","temp","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","sort","pack","maxHeightInRow","target","items","TextureAtlas","ClonePackage","NormalizePackage","found","UndefinedUV","TextureAtlasBuilder","filename","images","packer","img","packed","CreateImage","drawImage","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Empty","Debugger","Open","Save","Play","PlayDebug","DebugStepInto","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Copy","Cut","Paste","EditDelete","Share","Input","Output","Keyboard","Shift","Backspace","icon","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","observable","AppendChild","childs","updateNeeded","UpdateChilds","CalculateDimension","RemoveChild","removeIdx","indexOf","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","UIObservableAlert","zIndex","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","MemoryPoolTracker","capacity","NoFree","pool","from","_","nextFree","Allocate","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","FUIALertIcon","VUIAlertIcon","AttributesPerComponent","Attributes","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","iconSideLength","iconMargin","UpdateComponent","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","DeferredNotify","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Try","str","lineStart","whenTargetIsDefault","whenTargetNamed","UIObservableTextButton","caption","CreateIconButton","TouchAdapter","aboveButton","CaptionPosition","Caption","_sender","StyleCaptionRange","UIObservableTextList","labelRenderer","ScheduleUpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","UpdateScrollControlsPresence","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateTextButton","CreateAlert","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","touchResult","TouchAlerts","TouchButtons","TouchLabels","TouchEditableTextList","intersected","AABBRectanglePoint","Max","desc","_f","DebugAction","DebugControls","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","executeObservable","debugButton","debugObservable","RunNextBreakpoint","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","RunNextInstruction","Interrupt","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","KeyboardShiftMode","KeyboardButtonLayout","keyboardState","primary","secondary","symbols","IsUppercase","toUpperCase","toLowerCase","shift","Secondary","ascii","toString","HasSecondary","Index","CaptionDelimiter","Lovercase","Uppercase","VirtualKeyboardControls","lovercase","uppercase","inactive","active","toggleKeyboardGroup","toggleKeyboardButton","shiftIconColor","ToggleKeyboard","keyboardGroup","symbolMargin","SetupKeyboardLayouts","_symbol","TouchFeedback","keyboardStateFetcher","shiftMode","asciiMode","digitsSymbolRow","firstSymbolRow","secondSymbolRow","thirdSymbolRow","toggleKeyboard","SpawnKeyboard","HideKeyboard","CreateSymbolRow","buttonDimension","shiftWidth","CreateBottomRow","layouts","buttonContentColor","StyleButtonCaption","symbolButtons","buttonDeleter","ToggleShift","spacebarButton","backspace","asciiCodes","ToggleASCII","UpdateSymbolButtonsCaptions","asciiToggleOutlineColor","primaryColor","secondaryColor","buttonCaptionColor","destroy","navigator","vibrate","OverlayService","snackbarControls","fileControls","historyControls","editControls","debugControls","stackControls","virtualKeyboardControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","isKeyboardTouched","_g","_h","_j","_k","_l","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","PointerArithmetics","Target","EmptyExtension","Unload","TooltipPosition","CodeEditorTooltipService","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","oldValue","ReversedDirection","editionDirection","RegionDimension","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","IP","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","action","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","IsDone","isDone","fract","duration","progress","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","AbortOperationException","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","fileStorage","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","smoothCameraZoomEffect","deltaY","touchZoomStartZ","OnKeyDown","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","SourceCodeString","sourceString","trimEnd","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","_m","WaitEvent","event","addEventListener","once","DOMEmulatedFileStorage","onChange","click","onChangeResult","files","openedFilename","content","blob","Blob","URL","createObjectURL","href","download","revokeObjectURL","FilePickerApiDiskStorage","fileHandle","showOpenFilePicker","multiple","kind","file","getFile","showSaveFilePicker","suggestedName","stream","createWritable","write","close","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","to","IsPickerApiAvailable","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}