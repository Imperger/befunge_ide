{"version":3,"file":"js/app.0c6cb321.js","mappings":"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","sources":["webpack://befunge/./src/App.vue","webpack://befunge/./src/App.vue?7ccd","webpack://befunge/./src/registerServiceWorker.ts","webpack://befunge/./src/lib/DOM/MouseButtons.ts","webpack://befunge/./src/lib/math/MathUtil.ts","webpack://befunge/./src/app/AppEventTransformer.ts","webpack://befunge/./src/Inversify.ts","webpack://befunge/./src/app/AppSettings.ts","webpack://befunge/./src/app/InjectionToken.ts","webpack://befunge/./src/app/Overlay/Layouts/HeadlineControlsLayout.ts","webpack://befunge/./src/lib/math/Intersection.ts","webpack://befunge/./src/app/Overlay/Layouts/DebugControlsLayout.ts","webpack://befunge/./src/lib/befunge/CPU/CPU.ts","webpack://befunge/./src/lib/Observable.ts","webpack://befunge/./src/lib/DI/AsyncConstructorActivator.ts","webpack://befunge/./src/lib/math/RectanglePacker.ts","webpack://befunge/./src/lib/NotNull.ts","webpack://befunge/./src/lib/renderer/TextureAtlas.ts","webpack://befunge/./src/lib/UI/UIIcon.ts","webpack://befunge/./src/lib/UI/UIObservablePositioningGroup.ts","webpack://befunge/./src/lib/ArrayHelper.ts","webpack://befunge/./src/lib/UI/UIAlert/UIALertIcon.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertIcon.vert","webpack://befunge/./src/lib/UI/UIAlert/UIALertPanel.frag","webpack://befunge/./src/lib/UI/UIAlert/UIAlertPanel.vert","webpack://befunge/./src/lib/UI/UIAlert/UIObservableAlert.ts","webpack://befunge/./src/lib/EnumSize.ts","webpack://befunge/./src/lib/MemoryPoolTracker.ts","webpack://befunge/./src/lib/renderer/PrimitiveBuilder.ts","webpack://befunge/./src/lib/renderer/ShaderProgram.ts","webpack://befunge/./src/lib/renderer/TypeSizeResolver.ts","webpack://befunge/./src/lib/renderer/PrimitivesRenderer.ts","webpack://befunge/./src/lib/UI/UIAlert/UIAlertRenderer.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.frag","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListCursor.vert","webpack://befunge/./src/lib/UI/UIEditableTextList/UIObservableEditableTextList.ts","webpack://befunge/./src/lib/UI/UIEditableTextList/UIEditableTextListRenderer.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButton.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.frag","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonOutline.vert","webpack://befunge/./src/lib/UI/UIIconButton/UIObservableIconButton.ts","webpack://befunge/./src/lib/UI/UIIconButton/UIIconButtonRenderer.ts","webpack://befunge/./src/lib/UI/UILabel/UILabel.frag","webpack://befunge/./src/lib/UI/UILabel/UILabel.vert","webpack://befunge/./src/lib/UI/UILabel/UIObservableLabel.ts","webpack://befunge/./src/lib/ExceptionTrap.ts","webpack://befunge/./src/lib/font/FontAtlasBuilder.ts","webpack://befunge/./src/lib/font/FontGlyphCollection.ts","webpack://befunge/./src/lib/SelfBind.ts","webpack://befunge/./src/lib/UI/UILabel/UILabelRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UIObservableTextList.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListRenderer.ts","webpack://befunge/./src/lib/UI/UITextList/UITextListBorder.vert","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.frag","webpack://befunge/./src/lib/UI/UITextList/UITextListStencil.vert","webpack://befunge/./src/lib/UI/UIRenderer.ts","webpack://befunge/./src/app/Overlay/DebugControls.ts","webpack://befunge/./src/app/Overlay/EditControls.ts","webpack://befunge/./src/app/Overlay/EditDirectionControls.ts","webpack://befunge/./src/app/Overlay/FileControls.ts","webpack://befunge/./src/app/History/AppHistory.ts","webpack://befunge/./src/app/Overlay/HistoryControls.ts","webpack://befunge/./src/app/Overlay/IOControls.ts","webpack://befunge/./src/app/Overlay/SnackbarControls.ts","webpack://befunge/./src/lib/font/EscapeString.ts","webpack://befunge/./src/app/Overlay/StackControls.ts","webpack://befunge/./src/app/Overlay/OverlayService.ts","webpack://befunge/./src/app/SourceCodeMemory.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorExtension.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.frag","webpack://befunge/./src/app/CodeEditor/EditorGridRenderer.ts","webpack://befunge/./src/app/CodeEditor/CellsOutline.vert","webpack://befunge/./src/app/CodeEditor/Grid.frag","webpack://befunge/./src/app/CodeEditor/Grid.vert","webpack://befunge/./src/app/CodeEditor/EditorGridCellsOutlineRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.frag","webpack://befunge/./src/app/CodeEditor/SelectionRenderer.ts","webpack://befunge/./src/app/CodeEditor/Selection.vert","webpack://befunge/./src/app/CodeEditor/CodeEditorRenderer.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorTooltipService.ts","webpack://befunge/./src/lib/containers/Array2D.ts","webpack://befunge/./src/app/CodeEditor/EditableTarget.ts","webpack://befunge/./src/lib/renderer/Camera.ts","webpack://befunge/./src/app/CodeEditor/CodeEditorService.ts","webpack://befunge/./src/lib/befunge/CPU/CPUImpl.ts","webpack://befunge/./src/lib/befunge/instructions/Add.ts","webpack://befunge/./src/lib/befunge/instructions/Bridge.ts","webpack://befunge/./src/lib/befunge/instructions/Divide.ts","webpack://befunge/./src/lib/befunge/instructions/EndProgram.ts","webpack://befunge/./src/lib/befunge/instructions/GreatherThan.ts","webpack://befunge/./src/lib/befunge/instructions/HorizontalIf.ts","webpack://befunge/./src/lib/befunge/instructions/InputASCII.ts","webpack://befunge/./src/lib/befunge/instructions/InputInteger.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryRead.ts","webpack://befunge/./src/lib/befunge/instructions/MemoryWrite.ts","webpack://befunge/./src/lib/befunge/instructions/Modulo.ts","webpack://befunge/./src/lib/befunge/instructions/Multiply.ts","webpack://befunge/./src/lib/befunge/instructions/Negation.ts","webpack://befunge/./src/lib/befunge/instructions/NoOperation.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionDown.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionLeft.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRandom.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionRight.ts","webpack://befunge/./src/lib/befunge/instructions/PCDirectionUp.ts","webpack://befunge/./src/lib/befunge/instructions/StackPop.ts","webpack://befunge/./src/lib/befunge/instructions/PrintASCII.ts","webpack://befunge/./src/lib/befunge/instructions/PrintInteger.ts","webpack://befunge/./src/lib/befunge/instructions/StackDuplicate.ts","webpack://befunge/./src/lib/befunge/instructions/StackPushDigit.ts","webpack://befunge/./src/lib/befunge/instructions/StackSwap.ts","webpack://befunge/./src/lib/befunge/instructions/Subtract.ts","webpack://befunge/./src/lib/befunge/instructions/ToggleStringMode.ts","webpack://befunge/./src/lib/befunge/instructions/VerticalIf.ts","webpack://befunge/./src/lib/befunge/IOPort.ts","webpack://befunge/./src/lib/befunge/Befunge.ts","webpack://befunge/./src/lib/befunge/Debugger.ts","webpack://befunge/./src/lib/befunge/Profiler.ts","webpack://befunge/./src/app/BefungeToolbox.ts","webpack://befunge/./src/app/CodeExecution/DebuggingService.ts","webpack://befunge/./src/app/CodeExecution/ExecutionService.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.frag","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatMapGridRenderer.ts","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapGrid.vert","webpack://befunge/./src/app/AnalysisTools/Heatmap/HeatmapExtension.ts","webpack://befunge/./src/app/CodeExecution/ProfilingService.ts","webpack://befunge/./src/app/CodeExecution/CodeExecutionService.ts","webpack://befunge/./src/app/CodeEditorServiceInputReceiver.ts","webpack://befunge/./src/app/DebugRenderer.frag","webpack://befunge/./src/app/DebugRenderer.vert","webpack://befunge/./src/app/DebugRenderer.ts","webpack://befunge/./src/app/Effects/SmoothCameraMove.ts","webpack://befunge/./src/app/Effects/SmoothCameraZoom.ts","webpack://befunge/./src/lib/befunge/BefungeSourceCodeCodec.ts","webpack://befunge/./src/lib/befunge/memory/ModuloPointerArithmetics.ts","webpack://befunge/./src/lib/befunge/memory/ArrayMemory.ts","webpack://befunge/./src/lib/befunge/SourceCodeValidityAnalyser.ts","webpack://befunge/./src/lib/effect/EffectRunner.ts","webpack://befunge/./src/lib/math/Transformation.ts","webpack://befunge/./src/lib/UI/InputReceiver.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/EditCellCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/EditCellsRegionCommand.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction.ts","webpack://befunge/./src/app/History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction.ts","webpack://befunge/./src/app/AppService.ts","webpack://befunge/./src/app/GlobalDependencies.ts","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue?8f8a","webpack://befunge/./src/lib/VueComponents/WebglCanvas.vue","webpack://befunge/./src/app/CodeEditor.vue?f59c","webpack://befunge/./src/app/CodeEditor.vue","webpack://befunge/./src/router/index.ts","webpack://befunge/./src/store/index.ts","webpack://befunge/./src/main.ts","webpack://befunge/webpack/bootstrap","webpack://befunge/webpack/runtime/chunk loaded","webpack://befunge/webpack/runtime/compat get default export","webpack://befunge/webpack/runtime/define property getters","webpack://befunge/webpack/runtime/global","webpack://befunge/webpack/runtime/hasOwnProperty shorthand","webpack://befunge/webpack/runtime/make namespace object","webpack://befunge/webpack/runtime/jsonp chunk loading","webpack://befunge/webpack/startup"],"sourcesContent":["<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Roboto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4fb952e8\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=4fb952e8&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","export enum MouseButtons {\n  Nope = 0,\n  Left = 1,\n  Right = 2,\n  Wheel = 4,\n  BrowserBack = 8,\n  BrowserForward = 16\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface ExtremumResult {\n    min: Vec2;\n    max: Vec2;\n}\n\nexport class MathUtil {\n    static Clamp(value: number, min: number, max: number): number {\n        return Math.max(Math.min(value, max), min);\n    }\n\n    static Between(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    static Equal(x: number, y: number, tolerance = Number.EPSILON) {\n        return Math.abs(x - y) < tolerance;\n    }\n\n    static Extremum(points: Vec2[]): ExtremumResult {\n        if (points.length === 0) {\n            throw new Error('Empty points array');\n        }\n\n        const min = { ...points[0] };\n        const max = { ...points[0] };\n\n        for (let n = 1; n < points.length; ++n) {\n            const p = points[n];\n\n            if (p.x < min.x) {\n                min.x = p.x;\n            }\n\n            if (p.x > max.x) {\n                max.x = p.x;\n            }\n\n            if (p.y < min.y) {\n                min.y = p.y;\n            }\n\n            if (p.y > max.y) {\n                max.y = p.y;\n            }\n        }\n\n        return { min, max };\n    }\n\n    static Distance(p0: Vec2, p1: Vec2): number {\n        return Math.sqrt(MathUtil.SqrDistance(p0, p1));\n    }\n\n    public static SqrDistance(p0: Vec2, p1: Vec2): number {\n        return Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2);\n    }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { injectable } from \"inversify\";\n\nimport { MouseButtons } from \"@/lib/DOM/MouseButtons\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nclass OnSelectStrategy {\n    private mouseDownStart = 0;\n    private lastMouseDownPosition: Vec2 = { x: 0, y: 0 };\n\n    private isSelect = false;\n\n    constructor(\n        private releaseTimeout: number,\n        private maxDistance: number) { }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.mouseDownStart = Date.now();\n        this.lastMouseDownPosition.x = e.offsetX;\n        this.lastMouseDownPosition.y = e.offsetY;\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        const distance = vec2.dist(\n            [this.lastMouseDownPosition.x, this.lastMouseDownPosition.y],\n            [e.offsetX, e.offsetY]);\n\n        const elapsedTime = Date.now() - this.mouseDownStart;\n\n        this.isSelect = distance <= this.maxDistance && elapsedTime <= this.releaseTimeout;\n    }\n\n    get IsSelect(): boolean {\n        return this.isSelect;\n    }\n}\n\nexport interface MouseMovementEvent {\n    movementX: number;\n    movementY: number;\n}\n\nexport interface MouseSelectEvent {\n    offsetX: number;\n    offsetY: number;\n}\n\ninterface TouchTrace {\n    id: number;\n    x: number;\n    y: number;\n}\n\ntype MoveCameraFn = (e: MouseMovementEvent) => void;\n\nclass TouchPan {\n    private touchPrev!: TouchTrace;\n\n    constructor(private moveCamera: MoveCameraFn) { }\n\n    OnTouchStart(e: TouchEvent): void {\n        const touch = e.targetTouches[0];\n        this.touchPrev = {\n            id: touch.identifier,\n            x: touch.pageX,\n            y: touch.pageY\n        };\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        if (e.targetTouches.item(0)?.identifier !== this.touchPrev.id) {\n            return;\n        }\n\n        const touch = e.targetTouches[0];\n\n        this.moveCamera({\n            movementX: (touch.pageX - this.touchPrev.x) * window.devicePixelRatio,\n            movementY: (touch.pageY - this.touchPrev.y) * window.devicePixelRatio\n        });\n\n        this.touchPrev.x = touch.pageX;\n        this.touchPrev.y = touch.pageY;\n    }\n}\n\ntype ZoomStartFn = () => void;\n\ntype ZoomProgressFn = (zoom: number) => void;\n\nexport class TouchZoom {\n    private readonly prev: TouchTrace[] = [\n        { id: -1, x: 0, y: 0 },\n        { id: -1, x: 0, y: 0 }\n    ];\n\n    constructor(\n        private zoomStart: ZoomStartFn,\n        private zoomProgress: ZoomProgressFn\n    ) { }\n\n    public OnTouchStart(e: TouchEvent): void {\n        if (e.targetTouches.length !== 2) {\n            return;\n        }\n\n        this.zoomStart();\n\n        this.UpdateTrace(e);\n    }\n\n    public OnTouchEnd(e: TouchEvent): void {\n        [...e.targetTouches].forEach(touch => {\n            const prevTouch = this.prev.find(x => x.id === touch.identifier);\n\n            if (prevTouch) {\n                prevTouch.id = -1;\n            }\n        });\n    }\n\n    public OnTouchMove(e: TouchEvent): void {\n        if (\n            e.targetTouches.length !== 2 ||\n            !this.prev.every(trace => trace.id !== -1)\n        ) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const [p0, p1] = (\n            e.targetTouches[0].identifier === this.prev[0].id\n                ? [e.targetTouches[0], e.targetTouches[1]]\n                : [e.targetTouches[1], e.targetTouches[0]]\n        ).map(touch => ({ x: touch.pageX, y: touch.pageY }));\n\n        const dist0 = MathUtil.Distance(this.prev[0], this.prev[1]);\n        const dist1 = MathUtil.Distance(p0, p1);\n\n        this.zoomProgress(dist0 / dist1);\n    }\n\n    private UpdateTrace(e: TouchEvent): void {\n        for (let n = 0; n < e.targetTouches.length; ++n) {\n            this.prev[n].id = e.targetTouches[n].identifier;\n            this.prev[n].x = e.targetTouches[n].pageX;\n            this.prev[n].y = e.targetTouches[n].pageY;\n        }\n    }\n}\n\n@injectable()\nexport abstract class AppEventTransformer {\n    private readonly selectStrategy = new OnSelectStrategy(250, 3);\n\n    private touchPan: TouchPan;\n    private touchZoom: TouchZoom;\n\n    constructor() {\n        this.touchPan = new TouchPan((e: MouseMovementEvent) => this.OnCameraMove(e));\n        this.touchZoom = new TouchZoom(\n            () => this.OnTouchZoomStart(),\n            (zoom: number) => this.OnTouchZoom(zoom)\n        );\n    }\n\n    OnMouseMove(e: MouseEvent): void {\n        if (e.buttons & MouseButtons.Left) {\n            this.OnCameraMove({\n                movementX: e.movementX * window.devicePixelRatio,\n                movementY: e.movementY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnMouseDown(e: MouseEvent): void {\n        this.selectStrategy.OnMouseDown(e);\n    }\n\n    OnMouseUp(e: MouseEvent): void {\n        this.selectStrategy.OnMouseUp(e);\n\n        if (this.selectStrategy.IsSelect) {\n            this.OnSelect({\n                offsetX: e.offsetX * window.devicePixelRatio,\n                offsetY: e.offsetY * window.devicePixelRatio\n            });\n        }\n    }\n\n    OnWheel(e: WheelEvent): void {\n        this.OnStepZoom(e);\n    }\n\n    OnTouchStart(e: TouchEvent): void {\n        this.touchPan.OnTouchStart(e);\n        this.touchZoom.OnTouchStart(e);\n    }\n\n    OnTouchMove(e: TouchEvent): void {\n        this.touchPan.OnTouchMove(e);\n        this.touchZoom.OnTouchMove(e);\n    }\n\n    OnTouchEnd(e: TouchEvent): void {\n        this.touchZoom.OnTouchEnd(e);\n    }\n\n    abstract OnCameraMove(e: MouseMovementEvent): void;\n\n    abstract OnSelect(e: MouseSelectEvent): void;\n\n    abstract OnStepZoom(e: WheelEvent): void;\n\n    abstract OnTouchZoomStart(): void;\n\n    abstract OnTouchZoom(zoom: number): void;\n}\n","import { Container } from \"inversify\";\n\nconst Inversify = new Container();\n\nexport { Inversify };\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\n\ninterface Dimension {\n    Width: number;\n    Height: number;\n}\n\nexport interface ZCameraBoundary {\n    min: number;\n    max: number;\n}\n\n@injectable()\nexport class AppSettings {\n    public readonly ZNear = 1;\n\n    public readonly ZFar = 500;\n\n    public readonly Fovy = 60 / 180 * Math.PI;\n\n    public readonly ZCameraBoundary: ZCameraBoundary = { min: 50, max: 250 };\n\n    public AspectRatio = 1;\n\n    public get DevicePixelRatio(): number {\n        return window.devicePixelRatio;\n    }\n\n    public ViewDimension: Dimension = { Width: 800, Height: 600 };\n\n    public ExecutionTimeout = 1000;\n\n    public MaxOutputLength = 1000;\n\n    public MemoryLimit: MemoryLimit = { Width: 80, Height: 25 };\n}\n\nInversify.bind(AppSettings).toSelf().inSingletonScope();\n","export const InjectionToken = {\n    WebGLRenderingContext: Symbol('webgl2 rendering context'),\n    FontAtlas: Symbol('Font atlas'),\n    IconAtlas: Symbol('Icon atlas'),\n    FontAtlasTexture: Symbol('Font texture'),\n    IconAtlasTexture: Symbol('Icon texture'),\n    FontGlyphCollectionFactory: Symbol('Font glyph collection factory'),\n    HeatmapGridRendererFactory: Symbol('Heatmap grid renderer factory'),\n    HeatmapExtensionFactory: Symbol('Heatmap extension factory'),\n    UITextListRendererFactory: Symbol('UITetList renderer factory'),\n    CodeEditorServiceInputReceiverFactory: Symbol('CodeEditorServiceInputReceiver factory'),\n    UIEditableTextListRendererFactory: Symbol('UIEditableTextListRenderer factory')\n};\n\n\nexport const UILabelRendererTargetName = {\n    Perspective: Symbol('UILabel perspective renderer'),\n    Unique: Symbol('UILabel unique')\n}\n\nexport const AppCommandInjectionToken = {\n    EditCellCommandFactory: Symbol('EditCellCommand factory'),\n    EditCellsRegionFactory: Symbol('EditCellsRegion factory')\n};\n\nexport const EditCellCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action')\n};\n\nexport const EditCellsRegionCommandPostAction = {\n    MoveNext: Symbol('MoveNext post action'),\n    StayLeftTop: Symbol('StayLeftTop post action')\n};\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { Dimension, UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class HeadlineControlsLayout {\n    private skipUpdates = false;\n\n    private components: UIComponent[] = [];\n\n    private position: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private absolutePosition: Vec2 = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n\n    private dimension: Dimension = { width: 0, height: 0 };\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    Watch(component: UIComponent): void {\n        component.Observable.Attach(component => this.ComponentUpdated(component));\n\n        this.components.push(component);\n        this.ComponentUpdated(component);\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.absolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.dimension;\n    }\n\n    get Scale(): number {\n        return this.settings.DevicePixelRatio;\n    }\n\n    private ComponentUpdated(component: UIComponent): void {\n        if (!this.skipUpdates && (component.Scale / this.settings.DevicePixelRatio < 1 || component.AbsolutePosition.x + component.Dimension.width > this.settings.ViewDimension.Width)) {\n            const margin = 10;\n            const targetScale = this.settings.ViewDimension.Width / (component.Position.x + component.Dimension.width / component.Scale + margin);\n            const scale = Math.min(targetScale / this.settings.DevicePixelRatio - Number.EPSILON, 1);\n\n            this.skipUpdates = true;\n            this.components.forEach(x => x.Scale = scale);\n            this.skipUpdates = false;\n        }\n\n        this.MaintainPositionDimension();\n    }\n\n    private MaintainPositionDimension(): void {\n        const relativeExtremum = MathUtil\n            .Extremum(this.components.map(x => ({ ...x.Position })));\n\n        this.position.x = relativeExtremum.min.x;\n        this.position.y = relativeExtremum.min.y;\n\n\n        const absoluteExtremum = MathUtil\n            .Extremum(this.components.flatMap(x => this.MapComponent(x)));\n\n        this.absolutePosition.x = absoluteExtremum.min.x;\n        this.absolutePosition.y = absoluteExtremum.min.y;\n\n        this.dimension.width = absoluteExtremum.max.x - absoluteExtremum.min.x;\n        this.dimension.height = absoluteExtremum.max.y - absoluteExtremum.min.y;\n    }\n\n    private MapComponent(component: UIComponent): Vec2[] {\n        const dimension = component.Dimension;\n\n        return [\n            component.AbsolutePosition,\n            {\n                x: component.AbsolutePosition.x + dimension.width,\n                y: component.AbsolutePosition.y + dimension.height\n            }\n        ];\n    }\n}\n\nInversify.bind(HeadlineControlsLayout).toSelf().inSingletonScope();\n","import { vec3 } from 'gl-matrix';\n\nimport { Vec2 } from '../Primitives';\n\nexport interface Plane {\n    a: number;\n    b: number;\n    c: number;\n    d: number\n}\n\nexport type Vec3 = [number, number, number];\n\nexport interface Line {\n    a: Vec3;\n    b: Vec3;\n}\n\n// (x, y) represents left bottom corner\nexport interface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface Range {\n    min: number;\n    max: number;\n}\n\nexport class Intersection {\n    static PlaneLine(plane: Plane, line: Line): Vec3 {\n        const d0 = vec3.dot([plane.a, plane.b, plane.c], line.a) + plane.d;\n        const d1 = vec3.dot([plane.a, plane.b, plane.c], line.b) + plane.d;\n        const t = -d0 / (d1 - d0);\n        const intersection = vec3.add(vec3.create(), line.a, vec3.scale(vec3.create(), vec3.sub(vec3.create(), line.b, line.a), t));\n\n        return [intersection[0], intersection[1], intersection[2]];\n    }\n\n    static AABBRectanglePoint(rectangle: Rectangle, point: Vec2): boolean {\n        return (\n            point.x <= rectangle.x + rectangle.width &&\n            point.x >= rectangle.x &&\n            point.y <= rectangle.y + rectangle.height &&\n            point.y >= rectangle.y\n        );\n    }\n\n    static RectangleRectangle(a: Rectangle, b: Rectangle): boolean {\n        const aTopRight: Vec2 = { x: a.x + a.width, y: a.y + a.height };\n        const bTopRight: Vec2 = { x: b.x + b.width, y: b.y + b.height };\n\n        return a.x < bTopRight.x && aTopRight.x > b.x &&\n            a.y < bTopRight.y && aTopRight.y > b.y;\n    }\n\n    static RangeRange(a: Range, b: Range): boolean {\n        return a.min < b.max && a.max > b.min;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./HeadlineControlsLayout\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { UIComponent } from \"@/lib/UI/UIComponent\";\n\n@injectable()\nexport class DebugControlsLayout {\n    private skipUpdates = false;\n\n    private debugGroup!: UIComponent;\n\n    private readonly verticalPosition = 60;\n\n    constructor(\n        @inject(HeadlineControlsLayout) private headlineLayout: HeadlineControlsLayout,\n        @inject(AppSettings) private settings: AppSettings) { }\n\n    set DebugGroup(group: UIComponent) {\n        this.debugGroup = group;\n\n        group.Observable.Attach(() => this.DebugGroupUpdated());\n    }\n\n    DebugGroupUpdated(): void {\n        if (this.skipUpdates) {\n            return;\n        }\n\n        queueMicrotask(() => this.RecalculatePosition());\n    }\n\n    private RecalculatePosition(): void {\n        const debugGroupDimension = this.debugGroup.Dimension;\n\n        if (Intersection.RangeRange(\n            { min: this.debugGroup.AbsolutePosition.x, max: this.debugGroup.AbsolutePosition.x + debugGroupDimension.width },\n            { min: this.headlineLayout.AbsolutePosition.x, max: this.headlineLayout.AbsolutePosition.x + this.headlineLayout.Dimension.width })) {\n\n            const margin = 10;\n\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: (this.settings.ViewDimension.Height - this.headlineLayout.AbsolutePosition.y) / this.headlineLayout.Scale + debugGroupDimension.height / this.debugGroup.Scale + margin\n            };\n\n            this.skipUpdates = false;\n        } else {\n            this.skipUpdates = true;\n\n            this.debugGroup.Position = {\n                x: this.debugGroup.Position.x,\n                y: this.verticalPosition\n            };\n\n            this.skipUpdates = false;\n        }\n    }\n}\n\nInversify.bind(DebugControlsLayout).toSelf().inSingletonScope();\n","import { Pointer } from '../memory/Memory';\n\nexport class IllegalInstructionException extends Error {\n  constructor(\n    public readonly Where: Pointer,\n    public readonly Opcode: number,\n    public readonly Symbol: string) {\n    super(`An illegal instruction was executed.\\nWith opcode ${Opcode}(${Symbol}) at location ${Where.x}:${Where.y}`);\n  }\n}\n\nexport enum PCDirection {\n  Right,\n  Down,\n  Left,\n  Up\n}\n\nexport interface CPU {\n  StackPush(value: number): void;\n  StackPop(): number;\n  StackDuplicate(): void;\n  StackSwap(): void;\n\n  PCDirection(dir: PCDirection): void;\n  ExecuteNext(): void;\n  SkipNext(): void;\n\n  StringModeToggle(): void;\n\n  ReadMemory(ptr: Pointer): number;\n  WriteMemory(ptr: Pointer, value: number): void;\n\n  WriteIO(symbol: string): void;\n  ReadCharacter(): string;\n  ReadNumber(): number;\n\n  Halt(): void;\n\n  get IsHalted(): boolean;\n\n  get NextInstructionCode(): string;\n\n  get PC(): { Location: Pointer; Direction: PCDirection };\n\n  get Stack(): number[];\n}\n","export type Observer<T> = (target: T) => void;\n\nexport type ObserverDetacher = () => void;\n\ninterface ObserverDescriptor<T> {\n    id: symbol;\n    priority: number;\n    observer: Observer<T>;\n}\n\ninterface AttachOptions {\n    priority: number;\n}\n\nexport const ObservablePriority = {\n    Low: Number.NEGATIVE_INFINITY,\n    Normal: 0,\n    High: Number.POSITIVE_INFINITY\n}\n\nexport interface Observable<T> {\n    Attach(observer: Observer<T>, options?: AttachOptions): ObserverDetacher;\n}\n\nexport class ObservableController<T> implements Observable<T> {\n    private observers: ObserverDescriptor<T>[] = [];\n\n    Attach(observer: Observer<T>, options: AttachOptions = { priority: ObservablePriority.Normal }): ObserverDetacher {\n        const descriptor: ObserverDescriptor<T> = {\n            id: Symbol(),\n            priority: options.priority,\n            observer\n        };\n\n        this.observers.push(descriptor);\n\n        this.MaintainSorted();\n\n        return () => this.observers.splice(this.observers.findIndex(x => x.id === descriptor.id), 1);\n    }\n\n    DetachAll(): void {\n        this.observers = [];\n    }\n\n    Notify(sender: T): void {\n        this.observers.forEach(o => o.observer(sender));\n    }\n\n    private MaintainSorted(): void {\n        for (let n = this.observers.length - 1;\n            n > 0 && this.observers[n].priority > this.observers[n - 1].priority;\n            --n) {\n            const temp = this.observers[n - 1];\n            this.observers[n - 1] = this.observers[n];\n            this.observers[n] = temp;\n        }\n    }\n}\n","import { interfaces } from \"inversify\";\n\nexport interface AsyncConstructable {\n    AsyncConstructor(): Promise<void>;\n}\n\nexport async function AsyncConstructorActivator<T extends AsyncConstructable>(_context: interfaces.Context, constructable: T): Promise<T> {\n    await constructable.AsyncConstructor();\n    return constructable;\n}\n","import { Vec2 } from \"../Primitives\";\n\nexport interface Rectangle {\n    width: number;\n    height: number;\n}\n\ninterface PackageItem<TRectangle extends Rectangle> {\n    target: TRectangle;\n    position: Vec2;\n}\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface Package<TRectangle extends Rectangle> {\n    items: PackageItem<TRectangle>[];\n    dimension: Dimension;\n}\n\nexport class RectangleRowPacker<TRectangle extends Rectangle> {\n    private rectangles: TRectangle[] = [];\n\n    Add(rectangle: TRectangle): void {\n        this.rectangles.push(rectangle);\n    }\n\n    Pack(): Package<TRectangle> {\n        let idealArea = 0;\n        let maxWidth = 0;\n        for (const rect of this.rectangles) {\n            idealArea += rect.width * rect.height;\n            maxWidth = Math.max(maxWidth, rect.width);\n        }\n\n        const estimatedWidth = Math.max(Math.ceil(Math.sqrt(idealArea)), maxWidth);\n\n        this.rectangles.sort((a, b) => b.height - a.height);\n\n        const pack: PackageItem<TRectangle>[] = [];\n        let maxHeightInRow = 0;\n        let x = 0, y = 0;\n        for (const rect of this.rectangles) {\n            if (x + rect.width > estimatedWidth) {\n                x = 0;\n                y += maxHeightInRow;\n                maxHeightInRow = 0;\n            }\n\n            pack.push({ target: rect, position: { x, y } });\n\n            maxHeightInRow = Math.max(maxHeightInRow, rect.height);\n            x += rect.width;\n        }\n\n        return { items: pack, dimension: { width: estimatedWidth, height: y + maxHeightInRow } };\n    }\n}\n\n/* class RectanglePacker<TRectangle extends Rectangle> {\n    private rectangles: Rectangle[] = [];\n\n    Add(rectangle: Rectangle): void {\n        this.rectangles.push(rectangle.Clone());\n    }\n\n    Pack(): void {\n        const roughtArea = this.RoughlyPackedArea();\n\n        console.log(roughtArea);\n    }\n\n    private RoughlyPackedArea(): number {\n        const totalWidthFromLeft = Array.from({ length: this.rectangles.length + 1 }, () => ({ width: 0, maxHeight: 0 }));\n\n        for (let n = 0; n < this.rectangles.length; ++n) {\n            const rect = this.rectangles[n];\n\n            totalWidthFromLeft[n + 1].width = totalWidthFromLeft[n].width + rect.Width;\n            totalWidthFromLeft[n + 1].maxHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height);\n        }\n\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].width = 0;\n        totalWidthFromLeft[totalWidthFromLeft.length - 1].maxHeight = 0;\n\n        for (let n = this.rectangles.length - 1; n >= 0; --n) {\n            const rect = this.rectangles[n];\n\n            const nonRotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            const nonRotatedWidth = totalWidthFromLeft[n].width + rect.Width + totalWidthFromLeft[n + 1].width;\n            const nonRotatedArea = nonRotatedWidth * nonRotatedHeight;\n\n            const rotatedHeight = Math.max(totalWidthFromLeft[n].maxHeight, rect.Width, totalWidthFromLeft[n + 1].maxHeight);\n            const rotatedWidth = totalWidthFromLeft[n].width + rect.Height + totalWidthFromLeft[n + 1].width;\n            const rotatedArea = rotatedWidth * rotatedHeight;\n\n            //console.log(`${nonRotatedWidth} * ${nonRotatedHeight} = ${nonRotatedArea}`, `${rotatedWidth} * ${rotatedHeight} = ${rotatedArea}`);\n            if (rotatedArea < nonRotatedArea) {\n                const w = rect.Width;\n                rect.Width = rect.Height;\n                rect.Height = w;\n\n                if (n > 0 && totalWidthFromLeft[n - 1].maxHeight < rect.Height) {\n                    totalWidthFromLeft[n - 1].maxHeight = rect.Height;\n                }\n            }\n\n            totalWidthFromLeft[n].width = rect.Width + totalWidthFromLeft[n + 1].width;\n            totalWidthFromLeft[n].maxHeight = Math.max(rect.Height, totalWidthFromLeft[n + 1].maxHeight);\n            //console.log(JSON.stringify(totalWidthFromLeft));\n        }\n\n        let totalWidth = 0;\n        let maxHeight = 0;\n\n        for (const rect of this.rectangles) {\n            totalWidth += rect.Width;\n            maxHeight = Math.max(maxHeight, rect.Height);\n        }\n\n        return totalWidth * maxHeight;\n    }\n} */\n","export function NotNull(msg: string): never {\n  throw new Error(msg);\n}\n","import { Package, RectangleRowPacker } from \"../math/RectanglePacker\";\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\ninterface ImageToPack<TId> {\n    id: TId;\n    filename: string;\n    width: number;\n    height: number;\n}\n\nexport class TextureAtlas<TId> {\n    protected static readonly UndefinedUV = { A: { x: -1, y: -1 }, B: { x: -1, y: -1 } };\n\n    protected pack!: Package<ImageToPack<TId>>;\n\n    constructor(public readonly Image: ImageData, pack: Package<ImageToPack<TId>>) {\n        this.ClonePackage(pack);\n        this.NormalizePackage();\n    }\n\n    LookupUV(id: TId): UV {\n        const found = this.pack.items.find(x => x.target.id === id);\n\n        if (found === undefined) {\n            return TextureAtlas.UndefinedUV;\n        }\n\n        return {\n            A: { x: found.position.x, y: found.position.y },\n            B: { x: found.position.x + found.target.width, y: found.position.y + found.target.height }\n        };\n    }\n\n    static IsUndefinedUV(uv: UV): boolean {\n        return uv === TextureAtlas.UndefinedUV;\n    }\n\n    private ClonePackage(pack: Package<ImageToPack<TId>>): void {\n        this.pack = {\n            dimension: { ...pack.dimension },\n            items: pack.items.map(x => ({ position: { ...x.position }, target: { ...x.target } }))\n        };\n    }\n\n    private NormalizePackage(): void {\n        this.pack.items.forEach(item => {\n            item.position.x /= this.pack.dimension.width;\n            item.position.y /= this.pack.dimension.height;\n            item.target.width /= this.pack.dimension.width;\n            item.target.height /= this.pack.dimension.height;\n        });\n    }\n}\n\nexport class TextureAtlasBuilder<TId> {\n    private images: ImageToPack<TId>[] = [];\n\n    private context!: CanvasRenderingContext2D;\n\n    Add(id: TId, filename: string, dimension: Dimension): void {\n        this.images.push({ id, filename, ...dimension });\n    }\n\n    async Build(): Promise<TextureAtlas<TId>> {\n        const packer = new RectangleRowPacker<ImageToPack<TId>>();\n        this.images.forEach(img => packer.Add(img));\n        const pack = packer.Pack();\n\n        this.SetupCanvas(pack.dimension.width, pack.dimension.height);\n\n        for (const packed of pack.items) {\n            const img = await TextureAtlasBuilder.CreateImage(packed.target.filename);\n\n            this.context.drawImage(img,\n                packed.position.x, packed.position.y,\n                packed.target.width, packed.target.height);\n        }\n\n        return new TextureAtlas(\n            this.context.getImageData(0, 0, pack.dimension.width, pack.dimension.height),\n            pack\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        //document.body.appendChild(canvas);\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n\n        this.context = context;\n    }\n\n    private static async CreateImage(src: string): Promise<HTMLImageElement> {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => resolve(image);\n            image.onerror = () => reject(new Error('Failed to create an image'));\n            image.src = `${process.env.BASE_URL}${src}`;\n        });\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { AsyncConstructable, AsyncConstructorActivator } from \"../DI/AsyncConstructorActivator\";\nimport { TextureAtlas, TextureAtlasBuilder, UV } from \"../renderer/TextureAtlas\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum UIIcon {\n    Open, Save, ArrowRight, ArrowDown, ArrowLeft, ArrowUp, Debugger,\n    Play, PlayDebug,\n    ExclamationCircle, ExclamationTriangle, CheckCircle,\n    Breakpoint, ArrowThinAll, ArrowThinRight, ArrowThinDown, ArrowThinLeft, ArrowThinUp,\n    Delete, Stop, Heatmap, Undo, Redo, Settings, Select, Copy, Cut, Paste, EditDelete, Share,\n    Input, Output\n};\n\nexport interface UVExtra extends UV {\n    aspectRatio: number;\n}\n\nexport interface IconExtra<TId> {\n    id: TId;\n    aspectRatio: number;\n}\n\n@injectable()\nexport class UIIconAtlas implements AsyncConstructable {\n    private atlas!: TextureAtlas<UIIcon>;\n    private iconExtras: IconExtra<UIIcon>[] = [];\n\n    async AsyncConstructor(): Promise<void> {\n        await this.BuildAtlas();\n    }\n\n    LookupUV(id: UIIcon): UVExtra {\n        switch (id) {\n            case UIIcon.ArrowLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowRight)\n                    };\n                }\n            case UIIcon.ArrowUp:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowDown);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowDown)\n                    };\n                }\n            case UIIcon.ArrowThinLeft:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinRight);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinRight)\n                    };\n                }\n            case UIIcon.ArrowThinDown:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.ArrowThinUp);\n                    return {\n                        A: { x: uv.B.x, y: uv.B.y },\n                        B: { x: uv.A.x, y: uv.A.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.ArrowThinUp)\n                    };\n                }\n            case UIIcon.Undo:\n                {\n                    const uv = this.atlas.LookupUV(UIIcon.Redo);\n                    return {\n                        A: { x: uv.B.x, y: uv.A.y },\n                        B: { x: uv.A.x, y: uv.B.y },\n                        aspectRatio: this.ExtractAspectRatio(UIIcon.Redo)\n                    };\n                }\n            default:\n                return { ...this.atlas.LookupUV(id), aspectRatio: this.ExtractAspectRatio(id) };\n        }\n    }\n\n    get Image(): ImageData {\n        return this.atlas.Image;\n    }\n\n    private ExtractAspectRatio(id: UIIcon): number {\n        return this.iconExtras.find(x => x.id === id)!.aspectRatio;\n    }\n\n    private async BuildAtlas(): Promise<void> {\n        const builder = new TextureAtlasBuilder<UIIcon>();\n\n        const icons = [\n            {\n                id: UIIcon.ArrowRight,\n                filename: 'ui_icons/arrow_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowDown,\n                filename: 'ui_icons/arrow_down.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Debugger,\n                filename: 'ui_icons/bug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Open,\n                filename: 'ui_icons/open.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Save,\n                filename: 'ui_icons/save.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Play,\n                filename: 'ui_icons/play.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.PlayDebug,\n                filename: 'ui_icons/play_debug.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationCircle,\n                filename: 'ui_icons/exclamation_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ExclamationTriangle,\n                filename: 'ui_icons/exclamation_triangle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.CheckCircle,\n                filename: 'ui_icons/check_circle.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Breakpoint,\n                filename: 'ui_icons/breakpoint.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinAll,\n                filename: 'ui_icons/arrow_thin_all.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinUp,\n                filename: 'ui_icons/arrow_thin_up.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.ArrowThinRight,\n                filename: 'ui_icons/arrow_thin_right.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Delete,\n                filename: 'ui_icons/trash_can.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Stop,\n                filename: 'ui_icons/stop.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Heatmap,\n                filename: 'ui_icons/heatmap.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Redo,\n                filename: 'ui_icons/redo.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Settings,\n                filename: 'ui_icons/settings.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Select,\n                filename: 'ui_icons/select.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Copy,\n                filename: 'ui_icons/copy.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Cut,\n                filename: 'ui_icons/cut.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Paste,\n                filename: 'ui_icons/paste.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.EditDelete,\n                filename: 'ui_icons/edit_delete.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Share,\n                filename: 'ui_icons/share.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Input,\n                filename: 'ui_icons/input.svg',\n                dimension: { width: 128, height: 128 }\n            },\n            {\n                id: UIIcon.Output,\n                filename: 'ui_icons/output.svg',\n                dimension: { width: 128, height: 128 }\n            }\n        ];\n\n        for (const icon of icons) {\n            builder.Add(icon.id, icon.filename, icon.dimension);\n            this.iconExtras.push({ id: icon.id, aspectRatio: icon.dimension.width / icon.dimension.height });\n        }\n\n        this.atlas = await builder.Build();\n    }\n}\n\nInversify.bind(UIIconAtlas).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { Observable, ObservableController } from \"../Observable\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { Dimension, UIComponent } from \"./UIComponent\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { Inversify } from \"@/Inversify\";\n\nexport enum HorizontalAnchor { Left, Right, Middle };\n\nexport enum VerticalAnchor { Bottom, Top };\n\nexport interface Anchor {\n    horizontal?: HorizontalAnchor;\n    vertical?: VerticalAnchor;\n}\n\nexport class UIObservablePositioningGroup implements UIComponent {\n    private observable = new ObservableController<UIObservablePositioningGroup>();\n\n    private scale = 1;\n\n    private childs: UIComponent[] = [];\n\n\n    constructor(\n        private position: Vec2,\n        private anchor: Anchor = { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Left }) {\n    }\n\n    public Resize(): void {\n        this.observable.Notify(this);\n    }\n\n    AppendChild(component: UIComponent): void {\n        this.childs.push(component);\n    }\n\n    RemoveChild(component: UIComponent): void {\n        const removeIdx = this.childs.indexOf(component);\n\n        if (removeIdx !== -1) {\n            this.childs.splice(removeIdx, 1);\n        }\n    }\n\n    get Observable(): Observable<UIComponent> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        const dimension = Inversify.get(AppSettings).ViewDimension;\n\n        return {\n            x: this.HorizontalPositionRespectAnchor(dimension.Width),\n            y: this.VerticalPositionRespectAnchor(dimension.Height)\n        };\n    }\n\n    get Scale(): number {\n        return this.scale * Inversify.get(AppSettings).DevicePixelRatio;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        const min = { x: Number.POSITIVE_INFINITY, y: Number.POSITIVE_INFINITY };\n        const max = { x: Number.NEGATIVE_INFINITY, y: Number.NEGATIVE_INFINITY };\n\n        for (const component of this.childs) {\n            UIObservablePositioningGroup.MaintainExtremum(component.Position, { min, max });\n\n            const rightTop = {\n                x: component.Position.x * component.Scale + component.Dimension.width,\n                y: component.Position.y * component.Scale + component.Dimension.height\n            };\n\n            UIObservablePositioningGroup.MaintainExtremum(rightTop, { min, max });\n        }\n\n        return { width: max.x - min.x, height: max.y - min.y };\n    }\n\n    Destroy(): void {\n        [...this.childs].forEach(x => x.Destroy());\n    }\n\n    private static MaintainExtremum(point: Vec2, extremum: { min: Vec2, max: Vec2 }): void {\n        if (point.x < extremum.min.x) {\n            extremum.min.x = point.x;\n        }\n\n        if (point.x > extremum.max.x) {\n            extremum.max.x = point.x;\n        }\n\n        if (point.y < extremum.min.y) {\n            extremum.min.y = point.y;\n        }\n\n        if (point.y > extremum.max.y) {\n            extremum.max.y = point.y;\n        }\n    }\n\n    private HorizontalPositionRespectAnchor(viewWidth: number): number {\n        switch (this.anchor.horizontal) {\n            default:\n            case HorizontalAnchor.Left:\n                return this.position.x * this.Scale;\n            case HorizontalAnchor.Right:\n                return viewWidth - this.position.x * this.Scale;\n            case HorizontalAnchor.Middle:\n                return (viewWidth - this.Dimension.width) / 2 + this.Position.x;\n        }\n    }\n\n    private VerticalPositionRespectAnchor(viewHeight: number): number {\n        switch (this.anchor.vertical) {\n            default:\n            case VerticalAnchor.Bottom:\n                return this.position.y * this.Scale;\n            case VerticalAnchor.Top:\n                return viewHeight - this.position.y * this.Scale;\n        }\n    }\n}\n","type Comparator<T> = (a: T, b: T) => boolean;\n\nexport class ArrayHelper {\n    static Max<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let max = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(max, array[n])) {\n                max = array[n];\n            }\n        }\n\n        return max;\n    }\n\n    static Min<T>(array: T[], comparator: Comparator<T>): T {\n        if (array.length === 1) {\n            return array[0];\n        }\n\n        let min = array[0];\n        for (let n = 1; n < array.length; ++n) {\n            if (comparator(array[n], min)) {\n                min = array[n];\n            }\n        }\n\n        return min;\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_icon);\\n    out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type DeleterCallback = (component: UIObservableAlert) => void;\n\nexport class UIObservableAlert implements UIComponent, UIAlert {\n    private observable = new ObservableController<UIObservableAlert>();\n\n    private scale = 1;\n\n    private isDestroyed = false;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private icon: UIAlertIconStyle,\n        private text: UIAlertText,\n        private style: UIAlertStyle,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    Destroy(): void {\n        this.isDestroyed = true;\n\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    get Observable(): Observable<UIObservableAlert> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIAlertIconStyle {\n        return this.icon;\n    }\n\n    set Icon(style: UIAlertIconStyle) {\n        this.icon = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Text(): UIAlertText {\n        return this.text;\n    }\n\n    set Text(text: UIAlertText) {\n        this.text = { ...text };\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIAlertStyle {\n        return this.style;\n    }\n\n    set Style(style: UIAlertStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get IsDestroyed(): boolean {\n        return this.isDestroyed;\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n    }\n}\n","export function EnumSize<T extends object>(e: T): number {\n    return Object.keys(e).length >> 1;\n}\n","export abstract class MemoryPoolTracker {\n    private static readonly NoFree = -1;\n    private static readonly InUse = -2;\n    private static growthFactor = 2;\n    private static shrinkFactor = 0.25;\n\n    private pool: number[];\n    private nextFree = MemoryPoolTracker.NoFree;\n    private size = 0;\n\n    constructor(\n        capacity: number) {\n        this.pool = Array.from({ length: capacity }, (_, n) => n + 1);\n\n        if (capacity > 0) {\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.nextFree = 0;\n        }\n    }\n\n    /**\n     *\n     * @returns index in the pool array\n     */\n    Allocate(): number {\n        ++this.size;\n\n        if (this.HasFreeSlot) {\n            const freeSlot = this.nextFree;\n\n            this.nextFree = this.pool[this.nextFree];\n\n            this.pool[freeSlot] = MemoryPoolTracker.InUse;\n\n            return freeSlot;\n        } else {\n            const slot = this.pool.length;\n            this.nextFree = this.pool.length + 1;\n\n            this.pool = [\n                ...this.pool,\n                ...Array.from({ length: this.pool.length * MemoryPoolTracker.growthFactor - this.pool.length }, (_, n) => this.pool.length + n + 1)\n            ];\n            this.pool[this.pool.length - 1] = MemoryPoolTracker.NoFree;\n\n            this.pool[slot] = MemoryPoolTracker.InUse;\n\n            this.OnExtend(this.Capacity);\n\n            return slot;\n        }\n    }\n\n    Free(index: number): void {\n        if (index >= this.pool.length || this.pool[index] !== MemoryPoolTracker.InUse) {\n            return;\n        }\n\n        this.pool[index] = this.nextFree;\n\n        this.nextFree = index;\n\n        --this.size;\n\n        if (this.size / this.Capacity <= MemoryPoolTracker.shrinkFactor) {\n            this.OnShrink(this.GatherInUseIndices());\n\n            this.Shrink();\n        }\n    }\n\n\n    get Capacity(): number {\n        return this.pool.length;\n    }\n\n    abstract OnShrink(inUseIndices: number[]): void;\n\n    abstract OnExtend(extendedCapacity: number): void;\n\n    private get HasFreeSlot(): boolean {\n        return this.nextFree < this.pool.length && this.nextFree !== MemoryPoolTracker.NoFree;\n    }\n\n    private GatherInUseIndices(): number[] {\n        const inUse: number[] = [];\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            if (this.pool[n] === MemoryPoolTracker.InUse) {\n                inUse.push(n);\n            }\n        }\n\n        return inUse;\n    }\n\n    private Shrink(): void {\n        this.pool.splice(this.size, this.pool.length - this.size);\n\n        for (let n = 0; n < this.pool.length; ++n) {\n            this.pool[n] = MemoryPoolTracker.InUse;\n        }\n\n        this.nextFree = MemoryPoolTracker.NoFree;\n    }\n}\n","import { Vec2 } from \"../Primitives\";\n\ninterface Dimension {\n    width: number;\n    height: number;\n}\n\ninterface ObjectAttribute {\n    LeftBottom: number[];\n    LeftTop: number[];\n    RightTop: number[];\n    RightBottom: number[];\n}\n\ntype Attribute = number[] | ObjectAttribute;\n\nexport class PrimitiveBuilder {\n    static AABBRectangle(\n        position: Vec2,\n        dimension: Dimension,\n        attributes: Attribute[]\n    ): number[] {\n        const leftBottom = [position.x, position.y];\n        const leftTop = [position.x, position.y + dimension.height];\n        const rightTop = [position.x + dimension.width, position.y + dimension.height];\n        const rightBottom = [position.x + dimension.width, position.y];\n\n        for (const attr of attributes) {\n            if (Array.isArray(attr)) {\n                leftBottom.push(...attr);\n                leftTop.push(...attr);\n                rightTop.push(...attr);\n                rightBottom.push(...attr);\n            } else {\n                leftBottom.push(...attr.LeftBottom);\n                leftTop.push(...attr.LeftTop);\n                rightTop.push(...attr.RightTop);\n                rightBottom.push(...attr.RightBottom);\n            }\n        }\n\n        return [\n            ...leftBottom,\n            ...rightTop,\n            ...leftTop,\n            ...leftBottom,\n            ...rightBottom,\n            ...rightTop\n        ];\n    }\n\n    static AABBFrame(\n        position: Vec2,\n        dimension: Dimension,\n        borderWidth: number,\n        attributes: Attribute[]): number[] {\n        const borderTop = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + dimension.height - borderWidth },\n            { width: dimension.width, height: borderWidth },\n            attributes\n        );\n\n        const borderRight = PrimitiveBuilder.AABBRectangle(\n            { x: position.x + dimension.width - borderWidth, y: position.y },\n            { width: borderWidth, height: dimension.height - borderWidth },\n            attributes\n        );\n\n        const borderBottom = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y },\n            { width: dimension.width - borderWidth, height: borderWidth },\n            attributes\n        );\n\n        const borderLeft = PrimitiveBuilder.AABBRectangle(\n            { x: position.x, y: position.y + borderWidth },\n            { width: borderWidth, height: dimension.height - 2 * borderWidth },\n            attributes\n        );\n\n        return [\n            ...borderTop,\n            ...borderRight,\n            ...borderBottom,\n            ...borderLeft\n        ];\n    }\n}\n","import { NotNull } from '../NotNull';\n\nexport type Mat4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number];\n\nexport class ShaderProgram {\n  private uniformCache: Map<string, WebGLUniformLocation> = new Map();\n  protected instance: WebGLProgram;\n  public constructor(protected gl: WebGL2RenderingContext) {\n    if (!gl) throw new Error('Invalid webgl2 context');\n\n    this.instance =\n      gl.createProgram() ?? NotNull(\"Can't create shader program\");\n  }\n\n  public Attach(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (shader === null) throw new Error('Failed to create shader');\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const err = new Error(\n        this.gl.getShaderInfoLog(shader) ?? 'Failed to compile shader'\n      );\n      this.gl.deleteShader(shader);\n      throw err;\n    }\n\n    this.gl.attachShader(this.instance, shader);\n  }\n\n  public async AttachFromUrl(type: number, url: string) {\n    this.Attach(type, await (await fetch(url)).text());\n  }\n\n  public Link() {\n    this.gl.linkProgram(this.instance);\n    if (!this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS)) {\n      const err = new Error(\n        this.gl.getProgramParameter(this.instance, this.gl.LINK_STATUS) ??\n        'Failed to link shader'\n      );\n      this.gl.deleteProgram(this.instance);\n      throw err;\n    }\n  }\n\n  public Use() {\n    this.gl.useProgram(this.instance);\n  }\n\n  public SetUniform3fv(name: string, value: number[]) {\n    this.gl.uniform3fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2fv(name: string, value: number[]) {\n    this.gl.uniform2fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform4fv(name: string, value: number[]) {\n    this.gl.uniform4fv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1f(name: string, value: number) {\n    this.gl.uniform1f(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform1i(name: string, value: number) {\n    this.gl.uniform1i(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniform2iv(name: string, value: number[]) {\n    this.gl.uniform2iv(this.GetUniformLocation(name), value);\n  }\n\n  public SetUniformMatrix4fv(name: string, value: Mat4 | Float32Array) {\n    this.gl.uniformMatrix4fv(this.GetUniformLocation(name), false, value);\n  }\n\n  public GetAttributeLocation(name: string) {\n    this.Use();\n\n    const loc = this.gl.getAttribLocation(this.instance, name);\n\n    if (loc === -1) throw new Error(`Failed to locate attribute '${name}'`);\n\n    return loc;\n  }\n\n  Dispose(): void {\n    this.gl.deleteProgram(this.instance);\n  }\n\n  private GetUniformLocation(name: string) {\n    this.Use();\n\n    let loc = this.uniformCache.get(name) ?? null;\n\n    if (loc === null) {\n      loc = this.gl.getUniformLocation(this.instance, name);\n\n      if (loc === null) throw new Error(`Failed to locate uniform '${name}'`);\n\n      this.uniformCache.set(name, loc);\n    }\n\n    return loc;\n  }\n}\n","type SupportedTypes<T extends readonly (readonly [GLenum, number])[]> =\n  T[number][0];\n\nexport class TypeSizeResolver {\n  private static readonly Sizes = [\n    [window.WebGL2RenderingContext.BYTE, Int8Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.SHORT,\n      Int16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_BYTE,\n      Uint8Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_SHORT,\n      Uint16Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.FLOAT,\n      Float32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [window.WebGL2RenderingContext.HALF_FLOAT, 2] as const,\n    [window.WebGL2RenderingContext.INT, Int32Array.BYTES_PER_ELEMENT] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT,\n      Uint32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const,\n    [\n      window.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV,\n      Int32Array.BYTES_PER_ELEMENT\n    ] as const\n  ] as const;\n\n  public static Resolve(\n    type: SupportedTypes<typeof TypeSizeResolver.Sizes>\n  ): number {\n    return (\n      TypeSizeResolver.Sizes.find(x => x[0] === type) as [GLenum, number]\n    )[1];\n  }\n}\n","\nimport { injectable, unmanaged } from 'inversify';\n\nimport { NotNull } from '../NotNull';\n\nimport { ShaderProgram } from './ShaderProgram';\nimport { TypeSizeResolver } from './TypeSizeResolver';\n\ninterface ShaderProgramSource {\n  vertex: string;\n  fragment: string;\n}\n\ntype AttributeType =\n  | typeof WebGL2RenderingContext.BYTE\n  | typeof WebGL2RenderingContext.SHORT\n  | typeof WebGL2RenderingContext.UNSIGNED_BYTE\n  | typeof WebGL2RenderingContext.UNSIGNED_SHORT\n  | typeof WebGL2RenderingContext.FLOAT\n  | typeof WebGL2RenderingContext.HALF_FLOAT\n  | typeof WebGL2RenderingContext.INT\n  | typeof WebGL2RenderingContext.UNSIGNED_INT\n  | typeof WebGL2RenderingContext.INT_2_10_10_10_REV\n  | typeof WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;\n\ntype BasePrimitiveType =\n  | typeof WebGL2RenderingContext.POINTS\n  | typeof WebGL2RenderingContext.LINES\n  | typeof WebGL2RenderingContext.LINE_LOOP\n  | typeof WebGL2RenderingContext.LINE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLES\n  | typeof WebGL2RenderingContext.TRIANGLE_STRIP\n  | typeof WebGL2RenderingContext.TRIANGLE_FAN;\n\ninterface AttributeDescription {\n  name: string;\n  size: GLint;\n  type: AttributeType;\n  normalized: GLboolean;\n  stride: GLsizei;\n  offset: GLintptr; // TODO Make property optional and automatic calculate at runtime\n}\n\ninterface PrimitiveDescription {\n  indicesPerPrimitive: number;\n  basePrimitiveType: BasePrimitiveType;\n}\n\nexport interface DataDescriptor {\n  buffer: Float32Array;\n  offset: number;\n}\n\n\n@injectable()\nexport class PrimitivesRenderer {\n  protected vbo!: WebGLBuffer;\n  private vao!: WebGLVertexArrayObject;\n  protected shader!: ShaderProgram;\n\n  protected attributes: Float32Array = new Float32Array();\n\n  private componentsPerAttributeSet = 0;\n  private attributeSetCount = 0;\n\n  constructor(\n    @unmanaged() protected readonly gl: WebGL2RenderingContext,\n    @unmanaged() shaderSource: ShaderProgramSource,\n    @unmanaged() attributes: AttributeDescription[],\n    @unmanaged() private readonly primitiveDescription: PrimitiveDescription\n  ) {\n    this.Setup(shaderSource);\n    this.SetupAttributes(attributes);\n  }\n\n  public UploadAttributes(attrib: number[]): void {\n    this.attributes = new Float32Array(attrib);\n\n    this.attributeSetCount =\n      this.attributes.length / this.componentsPerAttributeSet;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.attributes,\n      this.gl.DYNAMIC_DRAW\n    );\n  }\n\n  public UpdateComponentAttributes(attriutes: number[], offset: number): void {\n    this.attributes.set(attriutes, offset);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bufferSubData(\n      this.gl.ARRAY_BUFFER,\n      TypeSizeResolver.Resolve(this.gl.FLOAT) * offset,\n      this.attributes,\n      offset,\n      attriutes.length);\n  }\n\n  public PrimitiveAttributes(index: number): DataDescriptor {\n    return {\n      buffer: this.attributes,\n      offset:\n        index *\n        this.componentsPerAttributeSet *\n        this.primitiveDescription.indicesPerPrimitive\n    };\n  }\n\n  public Draw(): void {\n    this.shader.Use();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindVertexArray(this.vao);\n    this.gl.drawArrays(\n      this.primitiveDescription.basePrimitiveType,\n      0,\n      this.attributeSetCount\n    );\n  }\n\n  Dispose(): void {\n    this.gl.deleteBuffer(this.vbo);\n    this.gl.deleteVertexArray(this.vao);\n\n    this.shader.Dispose();\n  }\n\n  private Setup(shaderSource: ShaderProgramSource): void {\n    this.vbo = this.gl.createBuffer() ?? NotNull('Failed to create vbo');\n    this.vao = this.gl.createVertexArray() ?? NotNull('Failed to create vao');\n\n    this.shader = new ShaderProgram(this.gl);\n    this.shader.Attach(this.gl.FRAGMENT_SHADER, shaderSource.fragment);\n    this.shader.Attach(this.gl.VERTEX_SHADER, shaderSource.vertex);\n    this.shader.Link();\n    this.shader.Use();\n  }\n\n  private SetupAttributes(attributes: AttributeDescription[]): void {\n    if (attributes.length === 0) {\n      throw new Error(\"Attributes description can't be empty\");\n    }\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n\n    this.gl.bindVertexArray(this.vao);\n\n    const stride = attributes.reduce(\n      (stride, attr) =>\n        stride + attr.size * TypeSizeResolver.Resolve(attr.type),\n      0\n    );\n\n    this.componentsPerAttributeSet =\n      stride / TypeSizeResolver.Resolve(attributes[0].type);\n\n    for (\n      let n = 0, offset = 0;\n      n < attributes.length;\n      offset +=\n      attributes[n].size * TypeSizeResolver.Resolve(attributes[n].type),\n      ++n\n    ) {\n      const attr = attributes[n];\n\n      const location = this.shader.GetAttributeLocation(attr.name);\n      this.gl.enableVertexAttribArray(location);\n      this.gl.vertexAttribPointer(\n        location,\n        attr.size,\n        attr.type,\n        attr.normalized,\n        stride,\n        offset\n      );\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIIconAtlas } from '../UIIcon';\nimport { Dimension } from '../UIIconButton/UIIconButton';\nimport { UILabel } from '../UILabel/UILabel';\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\nimport { UICreator } from '../UIRenderer';\n\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from './UIAlert';\nimport FUIALertIcon from './UIALertIcon.frag';\nimport VUIAlertIcon from './UIAlertIcon.vert';\nimport FUIAlertPanel from './UIALertPanel.frag';\nimport VUIAlertPanel from './UIAlertPanel.vert';\nimport { UIObservableAlert } from './UIObservableAlert';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum UIAlertIconComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIAlertPanelComponent { X, Y, Z, R, G, B };\n\n@injectable()\nclass UIAlertIconRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive = 6;\n\n    public readonly AttributesPerComponent;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIALertIcon, vertex: VUIAlertIcon },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertIconComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n\n}\n\nInversify.bind(UIAlertIconRenderer).toSelf().inSingletonScope();\n\n@injectable()\nexport class UIAlertRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private uiRenderer!: UICreator;\n\n    private alerts: UIObservableAlert[] = [];\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private panelContentZOffset = 0.001;\n\n    private readonly iconMargin = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UIAlertIconRenderer) private alertIcon: UIAlertIconRenderer,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture,\n        @inject(AppSettings) private settings: AppSettings) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIAlertPanelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUIAlertPanel, vertex: VUIAlertPanel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIAlertPanelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIAlertRenderer) {\n                const initialCapacity = 1;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.alertIcon.UploadAttributes(Array.from({ length: this.renderer.alertIcon.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const panelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(this.renderer.alertIcon.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        panelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.alertIcon.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * this.renderer.alertIcon.AttributesPerComponent + attribOffset] = this.renderer.alertIcon.Attributes[offset * this.renderer.alertIcon.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(panelAttrs);\n\n                this.renderer.alerts.forEach(alert => {\n                    const idx = inUseIndices.indexOf(alert.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${alert.Offset}`);\n                    }\n\n                    alert.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedPanelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedPanelAttrs);\n\n                const extendedAlertIconAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.alertIcon.AttributesPerComponent },\n                    (_, n) => n < this.renderer.alertIcon.Attributes.length ? this.renderer.alertIcon.Attributes[n] : 0);\n\n                this.renderer.alertIcon.UploadAttributes(extendedAlertIconAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n\n        const alertText = this.uiRenderer.CreateLabel(\n            position,\n            zIndex + this.panelContentZOffset,\n            text.text,\n            text.lineHeight,\n            parent);\n        alertText.StyleRange(0, alertText.Text.length, { color: text.color })\n\n        const iconSideLength = alertText.Dimension.height / alertText.Scale;\n        const alert = new UIObservableAlert(\n            position,\n            {\n                width: iconSideLength + 3 * this.iconMargin + alertText.Dimension.width / alertText.Scale,\n                height: iconSideLength + 2 * this.iconMargin\n            },\n            zIndex,\n            icon,\n            text,\n            style,\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableAlert) => this.Destroy(component, alertText),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(alert);\n        }\n\n        alert.Observable.Attach((component: UIObservableAlert) => this.UpdateComponent(component, alertText));\n\n        this.alerts.push(alert);\n\n        this.UpdateComponent(alert, alertText);\n\n        return alert;\n    }\n\n    public Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        super.Draw();\n        this.alertIcon.Draw();\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    get Alerts(): readonly UIAlert[] {\n        return this.alerts;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.alertIcon.ViewProjection = mat;\n    }\n\n    private UpdateComponent(component: UIObservableAlert, label: UILabel): void {\n        label.Position = this.LabelPosition(component, label);\n        label.Text = component.Text.text;\n        label.LineHeight = component.Text.lineHeight;\n        this.UpdateAttributes(component);\n    }\n\n    private LabelPosition(component: UIObservableAlert, label: UILabel): Vec2 {\n        return {\n            x: component.Position.x + 2 * this.iconMargin + (component.Dimension.height / component.Scale - 2 * this.iconMargin),\n            y: component.Position.y + (component.Dimension.height / component.Scale - label.Dimension.height / label.Scale) / 2\n        };\n    }\n\n    private UpdateAttributes(component: UIObservableAlert): void {\n        this.UpdateComponentAttributes(\n            this.ExtractPanelAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n\n        if (component.IsDestroyed) {\n            const emptyAttrs = new Array(this.IndicesPerPrimitive * EnumSize(UIAlertIconComponent)).fill(0);\n\n            this.alertIcon.UpdateComponentAttributes(\n                emptyAttrs,\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        } else {\n            this.alertIcon.UpdateComponentAttributes(\n                this.ExtractIconAttributes(component),\n                component.Offset * this.alertIcon.AttributesPerComponent);\n        }\n    }\n\n    private ExtractPanelAttributes(component: UIObservableAlert): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            component.Dimension,\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor\n            ])\n    }\n\n    private ExtractIconAttributes(component: UIObservableAlert): number[] {\n        const sideLength = this.AlertIconSideLength(component);\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        return PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + this.iconMargin, y: component.AbsolutePosition.y + this.iconMargin },\n            { width: sideLength, height: sideLength },\n            [\n                [this.settings.ZFar - component.ZIndex - this.panelContentZOffset - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n    }\n\n    private AlertIconSideLength(component: UIObservableAlert): number {\n        return component.Dimension.height - 2 * this.iconMargin;\n    }\n\n    private Destroy(component: UIObservableAlert, alertText: UILabel): void {\n        const toDestroyIdx = this.alerts.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.alerts.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n\n        alertText.Destroy();\n    }\n}\n\nInversify.bind(UIAlertRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","import { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\nimport { UITextList } from \"../UITextList/UITextList\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\n\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Vec2 } from \"@/lib/Primitives\";\n\nexport type UIObservableEditableTextListDeleter = () => void;\n\nexport class UIObservableEditableTextList implements UIEditableTextList {\n    public visible = true;\n\n    private onVanish = new ObservableController<void>();\n\n    private textList: UITextList;\n\n    private hasFocus = false;\n\n    private onUpdate = new ObservableController<UIObservableEditableTextList>();\n\n    constructor(\n        position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        uiRenderer: UICreator,\n        private deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null\n    ) {\n        this.textList = uiRenderer.CreateTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key === 'Backspace' && this.Text.length > 0) {\n            const toDelete = 1 + +(this.Text[this.Text.length - 1] === '\\n' && this.Text.length > 1);\n            this.Text = this.Text.slice(0, this.Text.length - toDelete)\n        } else if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            this.Text = this.Text + e.key;\n        } else if (e.key === 'Enter') {\n            this.Text = this.Text + '\\n';\n        }\n    }\n\n    get Position(): Vec2 {\n        return this.textList.Position;\n    }\n\n    set Position(position: Vec2) {\n        this.textList.Position = position;\n    }\n\n    get Dimension(): Dimension {\n        return this.textList.Dimension;\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.textList.Dimension = dimension;\n    }\n\n    get AbsolutePosition(): Vec2 {\n        return this.textList.AbsolutePosition;\n    }\n\n    get Text(): string {\n        return this.textList.Text;\n    }\n\n    set Text(text: string) {\n        this.textList.Text = text;\n    }\n\n    get ZIndex(): number {\n        return this.textList.ZIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.textList.ZIndex = zIndex;\n    }\n\n    get LineHeight(): number {\n        return this.textList.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.textList.LineHeight = lineHeight;\n    }\n\n    get BorderWidth(): number {\n        return this.textList.BorderWidth;\n    }\n\n    set BorderWdith(borderWidth: number) {\n        this.textList.BorderWidth = borderWidth;\n    }\n\n    get Scale(): number {\n        return this.textList.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.textList.Scale = scale;\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        if (!value) {\n            this.onVanish.Notify();\n        }\n\n        this.textList.Visible = value;\n    }\n\n    get Observable(): Observable<UIObservableEditableTextList> {\n        return this.onUpdate;\n    }\n\n    get HasFocus(): boolean {\n        return this.hasFocus;\n    }\n\n    Focus(): void {\n        this.hasFocus = true;\n    }\n\n    Blur(): void {\n        this.hasFocus = false;\n    }\n\n    ScrollToTop(): void {\n        this.textList.ScrollToTop();\n    }\n\n    Destroy(): void {\n        this.onVanish.Notify();\n\n        this.onVanish.DetachAll();\n        this.onUpdate.DetachAll();\n\n        this.deleter();\n\n        this.textList.Destroy();\n    }\n}\n","import { inject, interfaces } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIEditableTextList } from \"./UIEditableTextList\";\nimport FEditableTextListCursor from './UIEditableTextListCursor.frag';\nimport VEditableTextListCursor from './UIEditableTextListCursor.vert';\nimport { UIObservableEditableTextList, UIObservableEditableTextListDeleter } from \"./UIObservableEditableTextList\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UIEditableTextListCursorComponent { X, Y, Z };\n\nexport class UIEditableTextListRenderer extends PrimitivesRenderer {\n    private uiRenderer!: UICreator;\n\n    constructor(@inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIEditableTextListCursorComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FEditableTextListCursor, vertex: VEditableTextListCursor },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableEditableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n\n        return new UIObservableEditableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.uiRenderer,\n            deleter,\n            parent);\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(UIEditableTextListRenderer).toSelf().inTransientScope();\n\nexport type UIEditableTextListRendererFactory = (uiRenderer: UIRenderer) => UIEditableTextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UIEditableTextListRendererFactory>>(InjectionToken.UIEditableTextListRendererFactory)\n    .toFactory<UIEditableTextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UIEditableTextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nvec2 UndefinedUV = vec2(-1.0, -1.0);\\n\\nin vec2 v_icon;\\nin vec3 v_fillColor;\\nin vec3 v_iconColor;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n      if (v_icon.xy == UndefinedUV) {\\n            out_color = vec4(v_fillColor, 1.0);\\n      } else {\\n            vec4 text_color = texture(u_icon, v_icon);\\n            out_color = mix(vec4(v_fillColor, 1.0), vec4(v_iconColor - text_color.xzy, 1.0), text_color.w);\\n      }\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_fillColor;\\nin vec3 a_iconColor;\\nin vec2 a_icon;\\n\\nout vec2 v_icon;\\nout vec3 v_fillColor;\\nout vec3 v_iconColor;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_icon = a_icon;\\n  v_fillColor = a_fillColor;\\n  v_iconColor = a_iconColor;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n\\n  v_color = a_color;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconStyle } from \"./UIIconButton\";\nimport { UIIconButton } from \"./UIIconButton\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport type TouchCallback = (sender: UIIconButton) => void;\n\nexport type UpdateCallback = (component: UIObservableIconButton) => void;\n\nexport type DeleterCallback = (component: UIObservableIconButton) => void;\n\nexport class UIObservableIconButton implements UIComponent, UIIconButton {\n    private static readonly DisabledIconColor: Rgb = [0.47058823529411764, 0.5647058823529412, 0.611764705882353];\n\n    private static UninitializedTag = -1;\n\n    private observable = new ObservableController<UIObservableIconButton>();\n\n    private scale = 1;\n\n    private destroyed = false;\n\n    private disabled = false;\n\n    private originIconStyle!: UIIconStyle;\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        private style: UIButtonStyle,\n        private iconStyle: UIIconStyle,\n        private touchCallback: TouchCallback,\n        public Offset: number,\n        private deleter: DeleterCallback,\n        private parent: UIObservablePositioningGroup | null = null) {\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    get Observable(): Observable<UIObservableIconButton> {\n        return this.observable;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Dimension(): Dimension {\n        return { width: this.dimension.width * this.Scale, height: this.dimension.height * this.Scale };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Icon(): UIIconStyle {\n        return this.iconStyle;\n    }\n\n    set Icon(style: UIIconStyle) {\n        this.iconStyle = style;\n\n        this.observable.Notify(this);\n    }\n\n    get Style(): UIButtonStyle {\n        return this.style;\n    }\n\n    set Style(style: UIButtonStyle) {\n        this.style = { ...style };\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Destroyed(): boolean {\n        return this.destroyed;\n    }\n\n    get Disable(): boolean {\n        return this.disabled;\n    }\n\n    set Disable(value: boolean) {\n        if (value === this.disabled) {\n            return;\n        }\n\n        this.disabled = value;\n\n        if (value) {\n            this.originIconStyle = { ...this.iconStyle };\n\n            this.iconStyle.color = UIObservableIconButton.DisabledIconColor;\n        } else {\n            this.iconStyle.color = this.originIconStyle.color;\n        }\n\n        this.observable.Notify(this);\n    }\n\n    Touch(): void {\n        if (!this.disabled) {\n            this.touchCallback(this);\n        }\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        this.deleter(this);\n\n        this.Offset = UIObservableIconButton.UninitializedTag;\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.position = { x: 0, y: 0 };\n        this.dimension = { width: 0, height: 0 };\n        this.destroyed = true;\n    }\n}\n","\nimport { inject, injectable } from \"inversify\";\n\nimport { EnumSize } from \"../../EnumSize\";\nimport { MemoryPoolTracker } from \"../../MemoryPoolTracker\";\nimport { Rgb, Vec2 } from \"../../Primitives\";\nimport { PrimitiveBuilder } from \"../../renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"../../renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"../../renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"../../renderer/TypeSizeResolver\";\nimport { UIIconAtlas, UVExtra } from \"../UIIcon\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { Dimension, UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton\";\nimport FUIIconButton from './UIIconButton.frag';\nimport VUIIconButton from './UIIconButton.vert';\nimport FUIIconButtonOutline from './UIIconButtonOutline.frag';\nimport VUIIconButtonOutline from './UIIconButtonOutline.vert';\nimport { TouchCallback, UIObservableIconButton } from \"./UIObservableIconButton\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { TextureAtlas } from \"@/lib/renderer/TextureAtlas\";\n\nenum UIIconButtonComponent { X, Y, Z, fillR, fillG, fillB, iconR, iconG, iconB, Ux, Uy };\n\nenum UIIconButtonOutlineComponent { X, Y, Z, R, G, B };\n\nclass UIButtonOutlineRenderer extends PrimitivesRenderer {\n    static IndicesPerPrimitive = 24;\n\n    static readonly AttributesPerComponent = EnumSize(UIIconButtonOutlineComponent) * UIButtonOutlineRenderer.IndicesPerPrimitive;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UIIconButtonOutlineComponent);\n\n        super(gl,\n            { fragment: FUIIconButtonOutline, vertex: VUIIconButtonOutline },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            }],\n            { indicesPerPrimitive: UIButtonOutlineRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\ninterface TouchAnimationStart {\n    target: UIIconButton;\n    originFillColor: Rgb;\n    timestamp: number;\n}\n\n@injectable()\nexport class UIIconButtonRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent\n\n    private readonly zFarIncluded = 0.1;\n\n    private settings: AppSettings;\n\n    private iconButtons: UIObservableIconButton[] = [];\n\n    private outline: UIButtonOutlineRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private touchStart: TouchAnimationStart[] = [];\n\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.IconAtlas) private iconAtlas: UIIconAtlas,\n        @inject(InjectionToken.IconAtlasTexture) private iconAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const stride = floatSize * EnumSize(UIIconButtonComponent);\n        const indicesPerPrimitive = 18;\n        super(gl,\n            { fragment: FUIIconButton, vertex: VUIIconButton },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_fillColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_iconColor',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            },\n            {\n                name: 'a_icon',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 9 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UIIconButtonComponent) * this.IndicesPerPrimitive;\n\n        this.settings = Inversify.get(AppSettings);\n\n        this.outline = new UIButtonOutlineRenderer(gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UIIconButtonRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                renderer.outline.UploadAttributes(Array.from({ length: UIButtonOutlineRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const buttonAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const buttonOutlineAttrs = new Array(UIButtonOutlineRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        buttonAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < UIButtonOutlineRenderer.AttributesPerComponent; ++attribOffset) {\n                        buttonOutlineAttrs[n * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset] = this.renderer.outline.Attributes[offset * UIButtonOutlineRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(buttonAttrs);\n                this.renderer.outline.UploadAttributes(buttonOutlineAttrs);\n\n                this.renderer.iconButtons.forEach(btn => {\n                    const idx = inUseIndices.indexOf(btn.Offset);\n\n                    if (idx === -1) {\n                        throw new Error(`Can't find position for offset ${btn.Offset}`);\n                    }\n\n                    btn.Offset = idx;\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedButtonAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedButtonAttrs);\n\n\n                const extendedOutlineAttrs = Array.from(\n                    { length: extendedCapacity * UIButtonOutlineRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.outline.Attributes.length ? this.renderer.outline.Attributes[n] : 0);\n\n                this.renderer.outline.UploadAttributes(extendedOutlineAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton {\n\n        const button = new UIObservableIconButton(\n            position,\n            dimension,\n            zIndex,\n            style,\n            iconStyle,\n            (sender: UIIconButton) => this.TouchProxy(sender, touchCallback),\n            this.vertexAttributesTracker.Allocate(),\n            (component: UIObservableIconButton) => this.Destroy(component),\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(button);\n        }\n\n        button.Observable.Attach((component: UIObservableIconButton) => this.UpdateAttributes(component));\n\n        this.iconButtons.push(button);\n\n        this.UpdateAttributes(button);\n\n        return button;\n    }\n\n    private TouchProxy(sender: UIIconButton, origin: TouchCallback): void {\n        const alreadyTouchedIdx = this.touchStart.findIndex(btn => btn.target === sender);\n\n        if (alreadyTouchedIdx !== -1) {\n            const animation = this.touchStart[alreadyTouchedIdx];\n            animation.target.Style = { ...animation.target.Style, fillColor: animation.originFillColor };\n\n            this.touchStart.splice(alreadyTouchedIdx, 1);\n        }\n\n        this.touchStart.push({ target: sender, originFillColor: sender.Style.fillColor, timestamp: Date.now() });\n\n        origin(sender);\n    }\n\n    private Destroy(component: UIObservableIconButton): void {\n        const toDestroyIdx = this.iconButtons.indexOf(component);\n\n        if (toDestroyIdx === -1) {\n            return;\n        }\n\n        this.iconButtons.splice(toDestroyIdx, 1)\n\n        this.UpdateAttributes(component);\n\n        this.vertexAttributesTracker.Free(component.Offset);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.iconAtlasTexture);\n\n        this.TouchAnimation();\n\n        super.Draw();\n        this.outline.Draw();\n    }\n\n    private TouchAnimation(): void {\n        const lightingDuration = 80;\n        const darkeningDuration = 100;\n        const brightFactor = 1.2;\n\n        const notFinished: TouchAnimationStart[] = [];\n        const finished: TouchAnimationStart[] = [];\n        for (const animation of this.touchStart) {\n            if (animation.target.Destroyed) {\n                continue;\n            }\n\n            if (Date.now() - animation.timestamp <= lightingDuration + darkeningDuration) {\n                notFinished.push(animation);\n            } else {\n                finished.push(animation);\n            }\n        }\n\n        this.touchStart = notFinished;\n\n        finished.forEach(anim => anim.target.Style = { ...anim.target.Style, fillColor: anim.originFillColor });\n\n        for (const animation of this.touchStart) {\n            const fillColor: Rgb = [...animation.target.Style.fillColor];\n            const elapsed = Date.now() - animation.timestamp;\n\n            if (elapsed <= lightingDuration) {\n                const lightingProgress = elapsed / lightingDuration;\n                const bright = 1 + (brightFactor - 1) * lightingProgress;\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            } else {\n                const darkeningProgress = (elapsed - lightingDuration) / darkeningDuration;\n                const bright = 1 + (brightFactor - 1) * (1 - darkeningProgress);\n\n                fillColor[0] = Math.min(1, animation.originFillColor[0] * bright);\n                fillColor[1] = Math.min(1, animation.originFillColor[1] * bright);\n                fillColor[2] = Math.min(1, animation.originFillColor[2] * bright);\n            }\n\n            animation.target.Style = { ...animation.target.Style, fillColor };\n        }\n    }\n\n    get IconButtons(): readonly UIIconButton[] {\n        return this.iconButtons;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.outline.ViewProjection = mat;\n    }\n\n    private UpdateAttributes(component: UIObservableIconButton): void {\n        this.UpdateContentAttributes(component);\n\n        if (component.Destroyed) {\n            this.ResetOutlineAttributes(component);\n        } else {\n            this.UpdateOutlineAttributes(component);\n        }\n    }\n\n    private UpdateContentAttributes(component: UIObservableIconButton): void {\n        this.UpdateComponentAttributes(\n            this.ExtractContentAttributes(component),\n            component.Offset * this.AttributesPerComponent);\n    }\n\n    private ResetOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            new Array(UIButtonOutlineRenderer.IndicesPerPrimitive * EnumSize(UIIconButtonOutlineComponent)).fill(0),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private UpdateOutlineAttributes(component: UIObservableIconButton): void {\n        this.outline.UpdateComponentAttributes(\n            this.ExtractOutlineAttributes(component),\n            component.Offset * UIButtonOutlineRenderer.AttributesPerComponent);\n    }\n\n    private ExtractContentAttributes(component: UIObservableIconButton): number[] {\n        const iconUV = this.iconAtlas.LookupUV(component.Icon.icon);\n\n        if (TextureAtlas.IsUndefinedUV(iconUV)) {\n            throw new Error(`Can't find icon with id ${component.Icon.icon}`);\n        }\n\n        return component.Dimension.width / component.Dimension.height >= 1 ?\n            this.ExtractContentAttributesWide(component, iconUV) :\n            this.ExtractContentAttributesTall(component, iconUV);\n    }\n\n    private ExtractContentAttributesWide(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconWidth = component.Dimension.height * iconUV.aspectRatio;\n        const segmentWidth = (component.Dimension.width - iconWidth) / 2;\n\n        const leftSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth, y: component.AbsolutePosition.y },\n            { width: iconWidth, height: component.Dimension.height },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const rightSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x + segmentWidth + iconWidth, y: component.AbsolutePosition.y },\n            { width: segmentWidth, height: component.Dimension.height },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...leftSegmentAttributes, ...iconAttributes, ...rightSegmentAttributes];\n    }\n\n    private ExtractContentAttributesTall(component: UIObservableIconButton, iconUV: UVExtra): number[] {\n        const iconHeight = component.Dimension.width / iconUV.aspectRatio;\n        const segmentHeight = (component.Dimension.height - iconHeight) / 2;\n\n        const bottomSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            component.AbsolutePosition,\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        const iconAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight },\n            { width: component.Dimension.width, height: iconHeight },\n            [\n                [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                component.Style.fillColor,\n                component.Icon.color,\n                {\n                    LeftBottom: [iconUV.A.x, iconUV.B.y],\n                    LeftTop: [iconUV.A.x, iconUV.A.y],\n                    RightTop: [iconUV.B.x, iconUV.A.y],\n                    RightBottom: [iconUV.B.x, iconUV.B.y]\n                }\n            ]);\n\n        const topSegmentAttributes = PrimitiveBuilder.AABBRectangle(\n            { x: component.AbsolutePosition.x, y: component.AbsolutePosition.y + segmentHeight + iconHeight },\n            { width: component.Dimension.width, height: segmentHeight },\n            [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.fillColor, component.Icon.color, [-1, -1]]);\n\n        return [...bottomSegmentAttributes, ...iconAttributes, ...topSegmentAttributes];\n    }\n\n    private ExtractOutlineAttributes(component: UIObservableIconButton): number[] {\n        const width = 2;\n\n        return PrimitiveBuilder.AABBFrame(\n            { x: component.AbsolutePosition.x - width, y: component.AbsolutePosition.y - width },\n            { width: component.Dimension.width + 2 * width, height: component.Dimension.height + 2 * width },\n            width * component.Scale, [[this.settings.ZFar - component.ZIndex - this.zFarIncluded], component.Style.outlineColor]);\n    }\n}\n\nInversify.bind(UIIconButtonRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\nin vec2 v_glyph;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_icon;\\n\\nvoid main() \\n{\\n    vec4 text_color = texture(u_icon, v_glyph);\\n    //out_color = mix(vec4(1.0, 0, 0, 1.0), vec4(v_color - text_color.xzy, 1.0), text_color.w);\\n\\n    out_color = vec4(v_color - text_color.xzy, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec3 v_color;\\nout vec2 v_glyph;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0);\\n\\n  v_color = a_color;\\n  v_glyph = a_glyph;\\n}\\n\"","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension, UIComponent } from \"../UIComponent\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\n\nimport { SymbolStyle, UILabel } from \"./UILabel\";\n\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\nexport interface GlyphAllocator {\n    Allocate: (component: UIObservableLabel) => number;\n    Free: (idx: number) => void;\n}\n\nexport class UIObservableLabel implements UIComponent, UILabel {\n    public static readonly NonPrintableOffset = -1;\n\n    private static readonly NonPrintableSymbols = ['\\r', '\\n'];\n\n    private static DefaultSymbolStyle = { color: [0, 0, 0] as Rgb };\n\n    private scale = 1;\n\n    private symbolsStyle: SymbolStyle[];\n\n    private offsets: number[] = [];\n\n    private observable = new ObservableController<UIObservableLabel>();\n\n    public dimension: Dimension = { width: 0, height: 0 };\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private text: string,\n        private lineHeight: number,\n        private zIndex: number,\n        private glyphAllocator: GlyphAllocator,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.symbolsStyle = [];\n        this.ResizeSymbolStyles();\n\n        this.AdjustPoolMemory();\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n    }\n\n    StyleRange(begin: number, end: number, style: SymbolStyle): void {\n        for (let n = begin; n < end; ++n) {\n            this.symbolsStyle[n] = { ...style };\n        }\n\n        this.observable.Notify(this);\n    }\n\n    ReplaceOffset(old: number, offset: number): void {\n        this.offsets[this.offsets.indexOf(old)] = offset;\n    }\n\n    get Style(): SymbolStyle[] {\n        return this.symbolsStyle;\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.text;\n    }\n\n    set Text(text: string) {\n        this.text = text;\n        this.ResizeSymbolStyles();\n        this.AdjustPoolMemory();\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.lineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.lineHeight = lineHeight;\n\n        this.observable.Notify(this);\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return { ...this.dimension };\n    }\n\n    UpdateTextDimension(dimension: Dimension): void {\n        this.dimension = dimension;\n    }\n\n    get Offsets(): number[] {\n        return this.offsets;\n    }\n\n    get Observable(): Observable<UIObservableLabel> {\n        return this.observable;\n    }\n\n    private get PrintableTextLength(): number {\n        return this.text\n            .split('')\n            .filter(char => !UIObservableLabel.NonPrintableSymbols.includes(char))\n            .length;\n    }\n\n    private get PrintableOffsetLength(): number {\n        return this.offsets\n            .filter(x => x !== UIObservableLabel.NonPrintableOffset)\n            .length;\n    }\n\n    Destroy(): void {\n        this.Uninitialize();\n\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n    }\n\n    private Uninitialize(): void {\n        this.Text = '';\n    }\n\n    private ExtendPoolMemory(): void {\n        let extraMemoryNeeded = this.PrintableTextLength - this.PrintableOffsetLength;\n\n        while (extraMemoryNeeded-- > 0) {\n            const offset = this.glyphAllocator.Allocate(this);\n            this.offsets.push(offset);\n        }\n    }\n\n    private ShrinkPoolMemory(): void {\n        const excessOffsets = this.PrintableOffsetLength - this.PrintableTextLength;\n\n        for (let n = this.offsets.length - 1, released = 0; released < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset !== UIObservableLabel.NonPrintableOffset) {\n                this.glyphAllocator.Free(offset);\n                this.offsets.splice(n, 1);\n\n                ++released;\n            }\n        }\n    }\n\n    private AdjustPoolMemory(): void {\n        if (this.PrintableTextLength > this.PrintableOffsetLength) {\n            this.ExtendPoolMemory();\n        } else if (this.PrintableTextLength < this.PrintableOffsetLength) {\n            this.ShrinkPoolMemory();\n        }\n\n        if (this.text.length > this.offsets.length) {\n            this.AddExtraNonPrintableOffsets();\n        } else if (this.offsets.length > this.text.length) {\n            this.RemoveExcessNonPrintableOffsets();\n        }\n\n        this.AdjustNonPrintableOffsets();\n    }\n\n    private AddExtraNonPrintableOffsets(): void {\n        let extraNonPrintableOffsets = this.text.length - this.offsets.length;\n\n        while (extraNonPrintableOffsets-- > 0) {\n            this.offsets.push(UIObservableLabel.NonPrintableOffset);\n        }\n    }\n\n    private RemoveExcessNonPrintableOffsets(): void {\n        const excessOffsets = this.offsets.length - this.text.length;\n\n        for (let n = this.offsets.length - 1, removed = 0; removed < excessOffsets; --n) {\n            const offset = this.offsets[n];\n\n            if (offset === UIObservableLabel.NonPrintableOffset) {\n                this.offsets.splice(n, 1);\n\n                ++removed;\n            }\n        }\n    }\n\n    private AdjustNonPrintableOffsets(): void {\n        for (let charIdx = 0, offsetStartIdx = 0; charIdx < this.text.length; ++charIdx) {\n            const symbol = this.text[charIdx];\n            const offset = this.offsets[charIdx];\n\n            if (UIObservableLabel.NonPrintableSymbols.includes(symbol) && offset !== UIObservableLabel.NonPrintableOffset) {\n                const nonPrintableOffsetIdx = this.offsets\n                    .slice(offsetStartIdx)\n                    .findIndex((x, n) => x === UIObservableLabel.NonPrintableOffset && !UIObservableLabel.NonPrintableSymbols.includes(this.text[offsetStartIdx + n])) + offsetStartIdx;\n\n                this.offsets[charIdx] = UIObservableLabel.NonPrintableOffset;\n                this.offsets[nonPrintableOffsetIdx] = offset;\n\n                offsetStartIdx = nonPrintableOffsetIdx + 1;\n            }\n        }\n    }\n\n    private ExtendSymbolStyles(): void {\n        this.symbolsStyle = [...this.symbolsStyle, ...Array.from({ length: this.text.length }, () => ({ ...UIObservableLabel.DefaultSymbolStyle }))];\n    }\n\n    private ShrinkSymbolStyles(): void {\n        this.symbolsStyle.splice(this.text.length, this.symbolsStyle.length - this.text.length);\n    }\n\n    private ResizeSymbolStyles(): void {\n        if (this.text.length > this.symbolsStyle.length) {\n            this.ExtendSymbolStyles();\n        } else if (this.text.length < this.symbolsStyle.length) {\n            this.ShrinkSymbolStyles();\n        }\n    }\n}\n","type Callable = (...args: any[]) => any;\n\nclass CatchBlock<TTry extends Callable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    CatchFn<TCatch extends Callable>(fn: TCatch, ...args: Parameters<TCatch>): ReturnType<TTry> | ReturnType<TCatch> {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return fn(...args);\n        }\n    }\n\n    CatchValue<T>(value: T): ReturnType<TTry> | T {\n        try {\n            return this.fn(...this.args);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n\nexport class ExceptionTrap {\n    static Try<T extends Callable>(fn: T, ...args: Parameters<T>) {\n        return new CatchBlock(fn, args);\n    }\n}\n\ntype AsyncCallable = (...args: any[]) => Promise<any>;\n\nclass AsyncCatchBlock<TTry extends AsyncCallable> {\n    constructor(private fn: TTry, private args: Parameters<TTry>) { }\n\n    async CatchFn<TCatch extends AsyncCallable>(fn: TCatch, ...args: Parameters<TCatch>): Promise<ReturnType<TTry> | ReturnType<TCatch>> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await fn(...args);\n        }\n    }\n\n    async CatchValue<T>(value: T): Promise<ReturnType<TTry> | T> {\n        try {\n            return await this.fn(...this.args);\n        } catch (e) {\n            return await value;\n        }\n    }\n}\n\nexport class AsyncExceptionTrap {\n    static Try<T extends AsyncCallable>(fn: T, ...args: Parameters<T>) {\n        return new AsyncCatchBlock(fn, args);\n    }\n}\n","import { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\n\ninterface AtlasFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface AtlasOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: AtlasFontOptions\n}\n\ninterface UV {\n    A: Vec2;\n    B: Vec2;\n}\n\nexport class FontAtlas {\n    constructor(\n        private readonly startSymbolCode: number,\n        public readonly Columns: number,\n        public readonly Rows: number,\n        public readonly GlyphCount: number,\n        public readonly Image: ImageData) { }\n\n    LookupUV(symbol: string): UV {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const symbolCode = symbol.charCodeAt(0);\n        const glyphIdx = symbolCode - this.startSymbolCode;\n\n        if (glyphIdx < 0 || glyphIdx >= this.GlyphCount) {\n            throw new Error(\"The font atlas doesn't contain glyph for given symbol\");\n        }\n\n        const column = glyphIdx % this.Columns;\n        const row = Math.floor(glyphIdx / this.Columns);\n\n        const glyphWidth = 1 / this.Columns;\n        const glyphHeight = 1 / this.Rows;\n\n        const leftTop: Vec2 = {\n            x: glyphWidth * column,\n            y: glyphHeight * row\n        };\n\n        return {\n            A: leftTop,\n            B: { x: leftTop.x + glyphWidth, y: leftTop.y + glyphHeight }\n        };\n    }\n}\n\nclass FontAtlasBuilderImpl {\n    private options!: AtlasOptions;\n    private context!: CanvasRenderingContext2D;\n\n    Build(options: AtlasOptions): FontAtlas {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n        const glyphCount = endCode - startCode + 1;\n        const columnCount = Math.ceil(Math.sqrt(glyphCount));\n        const rowCount = Math.ceil(glyphCount / columnCount);\n        const glyphCellSize = this.GlyphCellSize();\n\n        const canvas = this.SetupCanvas(columnCount * glyphCellSize, rowCount * glyphCellSize);\n        this.FillCanvasWithGlyphs(glyphCount, columnCount);\n\n        return new FontAtlas(\n            startCode,\n            columnCount,\n            rowCount,\n            glyphCount,\n            this.context.getImageData(0, 0, canvas.width, canvas.height)\n        );\n    }\n\n    private SetupCanvas(width: number, height: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n\n        return canvas;\n    }\n\n    private FillCanvasWithGlyphs(glyphCount: number, columnCount: number): void {\n        for (let n = 0; n < glyphCount; ++n) {\n            const col = n % columnCount;\n            const row = Math.floor(n / columnCount);\n\n            const glyphCellSize = this.GlyphCellSize();\n            const halfGlyphCellSize = glyphCellSize / 2;\n            const cellCenter: Vec2 = { x: col * glyphCellSize + halfGlyphCellSize, y: row * glyphCellSize + halfGlyphCellSize };\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n\n            const drawPosition = this.CenteredToBaseLine(cellCenter, symbol);\n\n            this.context.fillText(symbol, drawPosition.x, drawPosition.y);\n        }\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private CenteredToBaseLine(pos: Vec2, symbol: string): Vec2 {\n        const metrics = this.context.measureText(symbol);\n\n        const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n        return {\n            x: pos.x - metrics.width / 2,\n            y: pos.y - metrics.actualBoundingBoxDescent + height / 2\n        };\n    }\n}\n\nexport class FontAtlasBuilder {\n    static Build(options: AtlasOptions): FontAtlas {\n        return new FontAtlasBuilderImpl().Build(options);\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { NotNull } from \"../NotNull\";\nimport { Vec2 } from \"../Primitives\";\nimport { UV } from \"../renderer/TextureAtlas\";\n\nimport { FontAtlas } from \"./FontAtlasBuilder\";\n\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\ninterface GlyphMeshFontOptions {\n    Name: string;\n    Size: number;\n}\n\ninterface GlyphMeshOptions {\n    ASCIIRange: { Start: string, End: string },\n    Font: GlyphMeshFontOptions\n}\n\nexport interface GlyphMeshBlueprint {\n    uv: UV; // exact glyph bound\n    width: number;\n    height: number;\n    baselineOffset: Vec2;\n}\n\ninterface AtlasCellDescriptor {\n    uv: UV;\n    sideLength: number;\n}\n\ninterface GlyphBoundary {\n    width: number;\n    height: number;\n}\n\nexport class FontGlyphCollection {\n    constructor(\n        private library: Map<string, GlyphMeshBlueprint>,\n        public readonly LineHeight: number) { }\n\n    Lookup(symbol: string): GlyphMeshBlueprint {\n        if (symbol.length === 0) {\n            throw new Error(\"Symbol can't be empty string\");\n        }\n\n        const blueprint = this.library.get(symbol);\n\n        if (blueprint === undefined) {\n            throw new Error(`Failed to find glyph '${symbol}'`);\n        }\n\n        return blueprint;\n    }\n}\n\n@injectable()\nclass FontGlyphCollectionBuilderImpl {\n    private options!: GlyphMeshOptions;\n    private context!: CanvasRenderingContext2D;\n\n    private lib = new Map<string, GlyphMeshBlueprint>();\n\n    constructor(@inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas) { }\n\n    Build(options: GlyphMeshOptions): FontGlyphCollection {\n        this.options = options;\n\n        const startCode = options.ASCIIRange.Start.charCodeAt(0);\n        const endCode = options.ASCIIRange.End.charCodeAt(0);\n\n        if (startCode > endCode) {\n            throw new Error('options.ASCIIRange.Start symbol must precede options.ASCIIRange.End');\n        }\n\n\n        const sideLength = this.GlyphCellSize();\n        this.SetupCanvas(sideLength, sideLength);\n\n        this.BuildBlueprints(endCode - startCode + 1);\n\n        return new FontGlyphCollection(this.lib, options.Font.Size);\n    }\n\n    private SetupCanvas(width: number, height: number): void {\n        const canvas = document.createElement('canvas');\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const context = canvas.getContext('2d') ?? NotNull('Failed to get context');\n        context.font = `${this.options.Font.Size}px ${this.options.Font.Name}`;\n        context.fillStyle = '#000';\n\n        this.context = context;\n    }\n\n    private GlyphCellSize(): number {\n        return Math.ceil(this.options.Font.Size / 10) * 10;\n    }\n\n    private BuildBlueprints(glyphCount: number) {\n        for (let n = 0; n < glyphCount; ++n) {\n            const symbol = String.fromCharCode(this.options.ASCIIRange.Start.charCodeAt(0) + n);\n            const atlasUV = this.fontAtlas.LookupUV(symbol);\n            const metrics = this.context.measureText(symbol);\n\n            const width = metrics.width;\n            const extraHeight = this.options.Font.Size / 6.4; // FIXME Added extra height because whem lineHeight has value <= 32 font texture doesnt capture whole glyph\n            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent + extraHeight;\n\n            const uv = this.AtlasCellToGlyphUV(\n                { uv: atlasUV, sideLength: this.GlyphCellSize() },\n                { width, height });\n\n            const baselineOffset = {\n                x: 0,\n                y: metrics.fontBoundingBoxDescent - metrics.actualBoundingBoxDescent\n            };\n\n            this.lib.set(symbol, { uv, width, height, baselineOffset });\n        }\n    }\n\n    private AtlasCellToGlyphUV(cell: AtlasCellDescriptor, glyph: GlyphBoundary): UV {\n        const relA: Vec2 = {\n            x: (cell.sideLength - glyph.width) / 2,\n            y: (cell.sideLength - glyph.height) / 2\n        };\n\n        const relB: Vec2 = { x: relA.x + glyph.width, y: relA.y + glyph.height };\n\n        const uvWidth = cell.uv.B.x - cell.uv.A.x;\n        const uvHeight = cell.uv.B.y - cell.uv.A.y;\n\n        return {\n            A: {\n                x: cell.uv.A.x + relA.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relA.y / cell.sideLength * uvHeight\n            },\n            B: {\n                x: cell.uv.A.x + relB.x / cell.sideLength * uvWidth,\n                y: cell.uv.A.y + relB.y / cell.sideLength * uvHeight\n            }\n        };\n    }\n}\n\nInversify.bind(FontGlyphCollectionBuilderImpl).toSelf().inRequestScope();\n\nexport type FontGlyphCollectionFactory = (options: GlyphMeshOptions) => FontGlyphCollection;\n\nInversify\n    .bind<interfaces.Factory<FontGlyphCollection>>(InjectionToken.FontGlyphCollectionFactory)\n    .toFactory<FontGlyphCollection, [GlyphMeshOptions]>(ctx => (options: GlyphMeshOptions) => ctx.container.get(FontGlyphCollectionBuilderImpl).Build(options));\n","type Callable = (...args: any[]) => any;\n\ntype MethodsOnly<T> = Pick<T, { [K in keyof T]: T[K] extends Callable ? K : never }[keyof T]>;\n\nexport function SelfBind<TInstance, TMethod extends keyof MethodsOnly<TInstance>>(instance: TInstance, method: TMethod): TInstance[TMethod] {\n    return (instance[method] as any).bind(instance);\n}\n","import { inject, injectable } from 'inversify';\n\nimport { UIObservablePositioningGroup } from '../UIObservablePositioningGroup';\n\nimport { UILabel } from './UILabel';\nimport FUILabel from './UILabel.frag';\nimport VUILabel from './UILabel.vert';\nimport { UIObservableLabel } from './UIObservableLabel';\n\nimport { AppSettings } from '@/app/AppSettings';\nimport { InjectionToken, UILabelRendererTargetName } from '@/app/InjectionToken';\nimport { Inversify } from '@/Inversify';\nimport { ArrayHelper } from '@/lib/ArrayHelper';\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { ExceptionTrap } from '@/lib/ExceptionTrap';\nimport { FontGlyphCollection, FontGlyphCollectionFactory, GlyphMeshBlueprint } from '@/lib/font/FontGlyphCollection';\nimport { MemoryPoolTracker } from '@/lib/MemoryPoolTracker';\nimport { Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\nimport { SelfBind } from '@/lib/SelfBind';\n\n\nenum UILabelComponent { X, Y, Z, R, G, B, Ux, Uy };\n\ntype Offset = number;\n\ninterface SplitedLine {\n    startIdx: number;\n    text: string;\n}\n\n/**\n * Note: In PrimitivesRenderer::PrimitiveAttributes method the index parameter means an individual symbol location but not a whole label component.\n *       It's because a label has dynamic attribute count that depends on text length.\n */\n@injectable()\nexport class UILabelRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private labels = new Map<Offset, UIObservableLabel>();\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.FontAtlasTexture) private fontTexture: WebGLTexture,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UILabelComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUILabel, vertex: VUILabel },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 3 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 6 * floatSize\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UILabelComponent) * this.IndicesPerPrimitive;\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UILabelRenderer) {\n                const initialCapacity = 256;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                const emptyAttrs = new Array(this.renderer.AttributesPerComponent).fill(0);\n\n                this.renderer.UpdateComponentAttributes(emptyAttrs, index * this.renderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const labelAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        labelAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(labelAttrs);\n\n                inUseIndices.forEach((oldOffset, offset) => {\n                    const label = this.renderer.labels.get(oldOffset);\n\n                    if (label !== undefined) {\n                        this.renderer.labels.delete(oldOffset);\n                        this.renderer.labels.set(offset, label);\n                        label.ReplaceOffset(oldOffset, offset);\n                    }\n                });\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n            }\n        })(this);\n    }\n\n    get Labels(): readonly UILabel[] {\n        return [...new Set([...this.labels.values()]).values()];\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Create(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel {\n        const label = new UIObservableLabel(\n            position,\n            text,\n            lineHeight,\n            zIndex,\n            {\n                Allocate: (component: UIObservableLabel) => this.AllocateGlyph(component),\n                Free: (idx: number) => this.GlyphFree(idx)\n            },\n            parent);\n\n        if (parent !== null) {\n            parent.AppendChild(label);\n        }\n\n        label.Observable.Attach((component: UIObservableLabel) => this.UpdateAttributes(component));\n\n        this.UpdateAttributes(label);\n\n        return label;\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontTexture);\n\n        super.Draw();\n    }\n\n    private AllocateGlyph(component: UIObservableLabel): number {\n\n        const offset = this.vertexAttributesTracker.Allocate();\n\n        this.labels.set(offset, component);\n\n        return offset;\n    }\n\n    private GlyphFree(idx: number): void {\n        this.labels.delete(idx);\n        this.vertexAttributesTracker.Free(idx);\n    }\n\n    private UpdateAttributes(component: UIObservableLabel): void {\n        const fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: component.LineHeight } });\n\n        let width = 0;\n        const lines = UILabelRenderer.SplitString(component.Text);\n\n        if (lines.length === 0) {\n            component.UpdateTextDimension({ width: 0, height: 0 });\n            return;\n        }\n\n        const minBaseOffset = UILabelRenderer.MinBaseOffset(lines[0].text, component, fontGlyphCollection);\n        const startBaseOffset = this.BaseStartOffset(component);\n\n        const yStart = component.AbsolutePosition.y + startBaseOffset - minBaseOffset;\n\n        let { x, y } = {\n            x: component.AbsolutePosition.x,\n            y: yStart\n        };\n\n        for (const line of lines) {\n            if (line.text.length === 0) {\n                x = component.AbsolutePosition.x;\n                y -= component.LineHeight * component.Scale;\n                continue;\n            }\n\n            for (let n = 0; n < line.text.length; ++n) {\n                const symbol = line.text[n];\n                const style = component.Style[line.startIdx + n];\n                const offset = component.Offsets[line.startIdx + n];\n\n                if (offset === UIObservableLabel.NonPrintableOffset) {\n                    continue;\n                }\n\n                const glyphBlueprint = UILabelRenderer.LookupGlyph(symbol, fontGlyphCollection);\n\n                const attributes = PrimitiveBuilder.AABBRectangle(\n                    { x, y: y + glyphBlueprint.baselineOffset.y * component.Scale },\n                    {\n                        width: glyphBlueprint.width * component.Scale,\n                        height: glyphBlueprint.height * component.Scale\n                    },\n                    [\n                        [this.settings.ZFar - component.ZIndex - this.zFarIncluded],\n                        style.color,\n                        {\n                            LeftBottom: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.B.y],\n                            LeftTop: [glyphBlueprint.uv.A.x, glyphBlueprint.uv.A.y],\n                            RightTop: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.A.y],\n                            RightBottom: [glyphBlueprint.uv.B.x, glyphBlueprint.uv.B.y]\n                        }\n                    ]);\n\n                this.UpdateComponentAttributes(attributes, offset * this.AttributesPerComponent);\n\n                x += glyphBlueprint.width * component.Scale;\n\n                width = Math.max(width, x - component.AbsolutePosition.x);\n            }\n\n            x = component.AbsolutePosition.x;\n            y -= component.LineHeight * component.Scale;\n        }\n\n        component.UpdateTextDimension({ width, height: yStart - y });\n    }\n\n    private static MinBaseOffset(line: string, component: UIObservableLabel, fontGlyphCollection: FontGlyphCollection): number {\n        if (line.length === 0) {\n            return 0;\n        }\n\n        const comp = (a: string, b: string) => UILabelRenderer.LookupGlyph(a, fontGlyphCollection).baselineOffset.y < UILabelRenderer.LookupGlyph(b, fontGlyphCollection).baselineOffset.y;\n        const maxBaselineOffsetSymbol = ArrayHelper.Min([...line], comp);\n\n        return UILabelRenderer.LookupGlyph(maxBaselineOffsetSymbol, fontGlyphCollection).baselineOffset.y * component.Scale;\n    }\n\n    private static LookupGlyph(symbol: string, fontGlyphCollection: FontGlyphCollection): GlyphMeshBlueprint {\n        return ExceptionTrap\n            .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n            .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n    }\n\n    private static SplitString(str: string): SplitedLine[] {\n        const lines: SplitedLine[] = [];\n\n        if (str.length === 0) {\n            return [];\n        }\n\n        let lineStart = 0;\n        for (let n = 0; n < str.length; ++n) {\n            const symbol = str[n];\n\n            if (symbol === '\\n') {\n                lines.push({ text: str.slice(lineStart, n), startIdx: lineStart });\n                lineStart = n + 1;\n            }\n        }\n\n        if (lineStart !== str.length) {\n            lines.push({ text: str.slice(lineStart, str.length), startIdx: lineStart });\n        }\n\n        return lines;\n    }\n\n    private BaseStartOffset(component: UIObservableLabel): number {\n        return [...component.Text.trimEnd()]\n            .reduce((lineBreaks, symbol) => lineBreaks + (symbol === '\\n' ? 1 : 0), 0) * component.LineHeight * component.Scale;\n    }\n\n}\n\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetIsDefault();\nInversify.bind(UILabelRenderer).toSelf().inSingletonScope().whenTargetNamed(UILabelRendererTargetName.Perspective);\nInversify.bind(UILabelRenderer).toSelf().inTransientScope().whenTargetNamed(UILabelRendererTargetName.Unique);\n","import { vec2 } from \"gl-matrix\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UIIcon } from \"../UIIcon\";\nimport { UIButtonStyle, UIIconButton } from \"../UIIconButton/UIIconButton\";\nimport { UILabel } from \"../UILabel/UILabel\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator } from \"../UIRenderer\";\n\nimport { UITextList } from \"./UITextList\";\n\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Observable, ObservableController, ObserverDetacher } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface ScrollControls {\n    scrollTopButton: UIIconButton;\n    scrollBottomButton: UIIconButton;\n}\n\nexport type UIObservableTextListDeleter = () => void;\n\nexport class UIObservableTextList implements UITextList {\n    public visible = true;\n\n    private scale = 1;\n\n    private scroll = 0;\n\n    private label: UILabel;\n\n    private scrollControls: ScrollControls | null = null;\n\n    private observable = new ObservableController<UIObservableTextList>();\n\n    private readonly scrollButtonDimension: Dimension = { width: 10, height: 20 };\n\n    private margin = 5;\n\n    private readonly scrollButtonStyle: UIButtonStyle = {\n        fillColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862],\n        outlineColor: [0.9254901960784314, 0.9411764705882353, 0.9450980392156862]\n    };\n\n    private readonly scrollButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n    private parentDetacher: ObserverDetacher | null = null;\n\n    constructor(\n        private position: Vec2,\n        private dimension: Dimension,\n        private zIndex: number,\n        text: string,\n        lineHeight: number,\n        private borderWidth: number,\n        public Offset: number,\n        private labelRenderer: UILabelRenderer,\n        private uiRenderer: UICreator,\n        private deleter: UIObservableTextListDeleter,\n        private parent: UIObservablePositioningGroup | null\n    ) {\n        this.label = this.labelRenderer.Create(\n            {\n                x: position.x + this.BorderWidth,\n                y: position.y\n            },\n            zIndex,\n            text,\n            lineHeight,\n            parent);\n\n        this.parentDetacher = parent?.Observable.Attach(() => this.observable.Notify(this)) ?? null;\n\n        this.UpdateScrollControlsPresence();\n    }\n\n    get Position(): Vec2 {\n        return this.position;\n    }\n\n    set Position(position: Vec2) {\n        this.position = position;\n\n        this.observable.Notify(this);\n    }\n\n    get Dimension(): Dimension {\n        return {\n            width: this.dimension.width * this.Scale,\n            height: this.dimension.height * this.Scale\n        };\n    }\n\n    set Dimension(dimension: Dimension) {\n        this.dimension = dimension;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get AbsolutePosition(): Vec2 {\n        if (this.parent) {\n            const parentPosition = [this.parent.AbsolutePosition.x, this.parent.AbsolutePosition.y] as const;\n            const absolutePosition = vec2.add(vec2.create(), parentPosition, [this.Position.x * this.Scale, this.Position.y * this.Scale]);\n\n            return { x: absolutePosition[0], y: absolutePosition[1] };\n        } else {\n            return this.Position;\n        }\n    }\n\n    get Text(): string {\n        return this.label.Text;\n    }\n\n    set Text(text: string) {\n        this.label.Text = text;\n\n        this.scroll = 0;\n        this.label.Position = {\n            x: this.position.x + this.BorderWidth,\n            y: this.position.y\n        }\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get ZIndex(): number {\n        return this.zIndex;\n    }\n\n    set ZIndex(zIndex: number) {\n        this.zIndex = zIndex;\n\n        this.label.ZIndex = zIndex;\n\n        this.observable.Notify(this);\n    }\n\n    get LineHeight(): number {\n        return this.label.LineHeight;\n    }\n\n    set LineHeight(lineHeight: number) {\n        this.label.LineHeight = lineHeight;\n\n        this.observable.Notify(this);\n        this.UpdateScrollControlsPresence();\n    }\n\n    get BorderWidth(): number {\n        return this.borderWidth * this.Scale;\n    }\n\n    set BorderWidth(width: number) {\n        this.borderWidth = width;\n\n        this.observable.Notify(this);\n    }\n\n    get Visible(): boolean {\n        return this.visible;\n    }\n\n    set Visible(value: boolean) {\n        this.visible = value;\n\n        this.UpdateScrollControlsPresence();\n\n        this.observable.Notify(this);\n    }\n\n    get Scale(): number {\n        return this.parent === null ? this.scale : this.scale * this.parent.Scale;\n    }\n\n    set Scale(scale: number) {\n        this.scale = scale;\n\n        if (this.parent === null) {\n            this.label.Scale = scale;\n        }\n\n        this.UpdateScrollControlsPresence();\n\n        if (this.scrollControls !== null) {\n            this.scrollControls.scrollTopButton.Scale = scale;\n            this.scrollControls.scrollBottomButton.Scale = scale;\n        }\n\n\n        this.observable.Notify(this);\n    }\n\n    get Observable(): Observable<UIObservableTextList> {\n        return this.observable;\n    }\n\n    private get IsContentOverflow(): boolean {\n        return this.label.Dimension.height > this.Dimension.height;\n    }\n\n    ScrollToTop(): void {\n        if (this.visible && this.IsContentOverflow) {\n            this.scroll = 0;\n            this.ScrollAligned(this.MinScroll);\n        }\n    }\n\n    Destroy(): void {\n        this.parent?.RemoveChild(this);\n\n        if (this.parentDetacher !== null) {\n            this.parentDetacher();\n        }\n\n        this.deleter();\n    }\n\n    private UpdateScrollControlsPresence(): void {\n        if (this.visible && this.IsContentOverflow) {\n            if (this.scrollControls === null) {\n                this.scrollControls = {\n                    scrollTopButton: this.CreateTopScrollButton(),\n                    scrollBottomButton: this.CreateBottomScrollButton()\n                };\n\n                if (this.parent === null) {\n                    this.scrollControls.scrollBottomButton.Scale = this.Scale;\n                    this.scrollControls.scrollTopButton.Scale = this.Scale;\n                }\n\n                this.ScrollAligned(0);\n            }\n\n            this.scrollControls.scrollBottomButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            };\n\n            this.scrollControls.scrollTopButton.Position = {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            };\n        } else {\n            if (this.scrollControls !== null) {\n                this.scrollControls.scrollTopButton.Destroy();\n                this.scrollControls.scrollBottomButton.Destroy();\n                this.scrollControls = null;\n            }\n        }\n    }\n\n    private get ScrollButtonX(): number {\n        return this.Position.x + this.dimension.width - this.borderWidth - this.scrollButtonDimension.width - this.margin;\n    }\n\n    private get ScrollTopButtonY(): number {\n        return this.Position.y + this.dimension.height - this.scrollButtonDimension.height - this.borderWidth - this.margin;\n    }\n\n    private get ScrollBottomButtonY(): number {\n        return this.Position.y + this.BorderWidth + this.margin;\n    }\n\n    private CreateTopScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollTopButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowUp },\n            (_component: UIIconButton) => this.ScrollAligned(-this.LineHeight),\n            this.parent\n        );\n    }\n\n    private CreateBottomScrollButton(): UIIconButton {\n        return this.uiRenderer.CreateButton(\n            {\n                x: this.ScrollButtonX,\n                y: this.ScrollBottomButtonY\n            },\n            this.scrollButtonDimension,\n            1,\n            this.scrollButtonStyle,\n            { color: this.scrollButtonIconColor, icon: UIIcon.ArrowDown },\n            (_component: UIIconButton) => this.ScrollAligned(this.LineHeight),\n            this.parent\n        );\n    }\n\n    get MinScroll(): number {\n        return this.Position.y - this.label.Dimension.height / this.label.Scale + this.dimension.height;\n    }\n\n    get MaxScroll(): number {\n        return this.Position.y;\n    }\n\n    private ScrollAligned(offset: number): void {\n        this.scroll += offset;\n\n        this.scroll = MathUtil.Clamp(this.scroll, this.MinScroll, this.MaxScroll);\n\n        this.UpdateScrollButtonDisability();\n\n        this.label.Position = { ...this.label.Position, y: this.scroll };\n    }\n\n    private UpdateScrollButtonDisability(): void {\n        if (this.scroll === this.MinScroll) {\n            this.scrollControls!.scrollTopButton.Disable = true;\n        } else if (this.scrollControls!.scrollTopButton.Disable) {\n            this.scrollControls!.scrollTopButton.Disable = false;\n        }\n\n        if (this.scroll === this.MaxScroll) {\n            this.scrollControls!.scrollBottomButton.Disable = true;\n        } else if (this.scrollControls!.scrollBottomButton.Disable) {\n            this.scrollControls!.scrollBottomButton.Disable = false;\n        }\n    }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{\\n      out_color = vec4(0.17254901960784313, 0.24313725490196078, 0.3137254901960784, 1);\\n}\\n\"","import { inject, injectable, interfaces, named } from \"inversify\";\n\nimport { Dimension } from \"../UIComponent\";\nimport { UILabelRenderer } from \"../UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"../UIObservablePositioningGroup\";\nimport { UICreator, UIRenderer } from \"../UIRenderer\";\n\nimport { UIObservableTextList, UIObservableTextListDeleter } from \"./UIObservableTextList\";\nimport { UITextList } from \"./UITextList\";\nimport FTextListBorder from './UITextListBorder.frag'\nimport VTextListBorder from './UITextListBorder.vert'\nimport FUITextListStencil from './UITextListStencil.frag';\nimport VUITextListStencil from './UITextListStencil.vert';\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { InjectionToken, UILabelRendererTargetName } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { MemoryPoolTracker } from \"@/lib/MemoryPoolTracker\";\nimport { Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\n\nenum UITextListBorderComponent { X, Y, Z };\n\nenum UITextListStencilComponent { X, Y };\n\nclass UITextListBorderRenderer extends PrimitivesRenderer {\n    public readonly IndicesPerPrimitive;\n\n    public readonly AttributesPerComponent;\n\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListBorderComponent);\n        const indicesPerPrimitive = 24;\n\n        super(gl,\n            { fragment: FTextListBorder, vertex: VTextListBorder },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListBorderComponent) * this.IndicesPerPrimitive;\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Attributes(): Float32Array {\n        return this.attributes;\n    }\n}\n\n@injectable()\nexport class UITextListRenderer extends PrimitivesRenderer {\n    private readonly IndicesPerPrimitive;\n\n    private readonly AttributesPerComponent;\n\n    private readonly zFarIncluded = 0.1;\n\n    private readonly borderWidth = 2;\n\n    private borderRenderer: UITextListBorderRenderer;\n\n    private vertexAttributesTracker: MemoryPoolTracker;\n\n    private uiRenderer!: UICreator;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Unique) private labelRenderer: UILabelRenderer) {\n\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const stride = floatSize * EnumSize(UITextListStencilComponent);\n        const indicesPerPrimitive = 6;\n\n        super(gl,\n            { fragment: FUITextListStencil, vertex: VUITextListStencil },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride,\n                offset: 0\n            }],\n            { indicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n\n        this.IndicesPerPrimitive = indicesPerPrimitive;\n        this.AttributesPerComponent = EnumSize(UITextListStencilComponent) * this.IndicesPerPrimitive;\n\n        this.borderRenderer = new UITextListBorderRenderer(this.gl);\n\n        this.vertexAttributesTracker = new (class extends MemoryPoolTracker {\n            constructor(private renderer: UITextListRenderer) {\n                const initialCapacity = 2;\n                super(initialCapacity);\n\n                renderer.UploadAttributes(Array.from({ length: renderer.AttributesPerComponent * initialCapacity }, () => 0));\n                this.renderer.borderRenderer.UploadAttributes(Array.from({ length: renderer.borderRenderer.AttributesPerComponent * initialCapacity }, () => 0));\n            }\n\n            Free(index: number): void {\n                this.renderer.UpdateComponentAttributes(\n                    new Array(this.renderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.AttributesPerComponent);\n\n                this.renderer.borderRenderer.UpdateComponentAttributes(\n                    new Array(this.renderer.borderRenderer.AttributesPerComponent).fill(0),\n                    index * this.renderer.borderRenderer.AttributesPerComponent);\n\n                super.Free(index);\n            }\n\n            OnShrink(inUseIndices: number[]): void {\n                const scencilRectAttrs = new Array(this.renderer.AttributesPerComponent * inUseIndices.length).fill(0);\n                const borderAttrs = new Array(this.renderer.borderRenderer.AttributesPerComponent * inUseIndices.length).fill(0);\n\n                for (let n = 0; n < inUseIndices.length; ++n) {\n                    const offset = inUseIndices[n];\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.AttributesPerComponent; ++attribOffset) {\n                        scencilRectAttrs[n * this.renderer.AttributesPerComponent + attribOffset] = this.renderer.attributes[offset * this.renderer.AttributesPerComponent + attribOffset];\n                    }\n\n                    for (let attribOffset = 0; attribOffset < this.renderer.borderRenderer.AttributesPerComponent; ++attribOffset) {\n                        borderAttrs[n * this.renderer.borderRenderer.AttributesPerComponent + attribOffset] = this.renderer.borderRenderer.Attributes[offset * this.renderer.borderRenderer.AttributesPerComponent + attribOffset];\n                    }\n                }\n\n                this.renderer.UploadAttributes(scencilRectAttrs);\n                this.renderer.borderRenderer.UploadAttributes(borderAttrs);\n            }\n\n            OnExtend(extendedCapacity: number): void {\n                const extendedLabelAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.attributes.length ? this.renderer.attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedLabelAttrs);\n\n\n                const extendedBorderAttrs = Array.from(\n                    { length: extendedCapacity * this.renderer.borderRenderer.AttributesPerComponent },\n                    (_, n) => n < this.renderer.borderRenderer.Attributes.length ? this.renderer.borderRenderer.Attributes[n] : 0);\n\n                this.renderer.UploadAttributes(extendedBorderAttrs);\n            }\n        })(this);\n    }\n\n    Create(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        deleter: UIObservableTextListDeleter,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n\n        const textList = new UIObservableTextList(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            this.borderWidth,\n            this.vertexAttributesTracker.Allocate(),\n            this.labelRenderer,\n            this.UIRenderer,\n            deleter,\n            parent);\n\n\n        if (parent !== null) {\n            parent.AppendChild(textList);\n        }\n\n        textList.Observable.Attach((component: UIObservableTextList) => this.UpdateAttributes(component))\n\n        this.UpdateAttributes(textList);\n\n        return textList;\n    }\n\n    Draw(): void {\n        this.gl.enable(this.gl.STENCIL_TEST);\n\n        this.gl.stencilFunc(\n            this.gl.ALWAYS,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.REPLACE,// Rendering occurs behind the scene. See UITextListStencil.vert\n            this.gl.REPLACE\n        );\n\n        super.Draw();\n\n        this.gl.stencilFunc(\n            this.gl.EQUAL,\n            1,\n            0xFF\n        );\n\n        this.gl.stencilOp(\n            this.gl.KEEP,\n            this.gl.KEEP,\n            this.gl.KEEP\n        );\n\n        this.labelRenderer.Draw();\n\n        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n        this.gl.disable(this.gl.STENCIL_TEST);\n\n        this.borderRenderer.Draw();\n    }\n\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n        this.labelRenderer.ViewProjection = mat;\n        this.borderRenderer.ViewProjection = mat;\n    }\n\n    get UIRenderer(): UICreator {\n        return this.uiRenderer;\n    }\n\n    set UIRenderer(renderer: UICreator) {\n        this.uiRenderer = renderer;\n    }\n\n    Dispose(): void {\n        this.borderRenderer.Dispose();\n\n        super.Dispose();\n    }\n\n    private UpdateAttributes(component: UIObservableTextList): void {\n        this.UpdateStencilAttributes(component);\n        this.UpdateBorderAttributes(component);\n    }\n\n    private UpdateStencilAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBRectangle(\n                {\n                    x: component.AbsolutePosition.x + component.BorderWidth,\n                    y: component.AbsolutePosition.y + component.BorderWidth\n                },\n                {\n                    width: component.Dimension.width - 2 * component.BorderWidth,\n                    height: component.Dimension.height - 2 * component.BorderWidth\n                },\n                []);\n        } else {\n            attrs = new Array(this.AttributesPerComponent).fill(0);\n        }\n\n        this.UpdateComponentAttributes(attrs, component.Offset * this.AttributesPerComponent);\n    }\n\n    private UpdateBorderAttributes(component: UIObservableTextList): void {\n        let attrs: number[];\n\n        if (component.Visible) {\n            attrs = PrimitiveBuilder.AABBFrame(\n                component.AbsolutePosition,\n                component.Dimension,\n                component.BorderWidth,\n                [\n                    [this.settings.ZFar - component.ZIndex - this.zFarIncluded]\n                ]\n            );\n        } else {\n            attrs = new Array(this.borderRenderer.AttributesPerComponent).fill(0);\n        }\n\n        this.borderRenderer.UpdateComponentAttributes(attrs, component.Offset * this.borderRenderer.AttributesPerComponent);\n    }\n}\n\nInversify.bind(UITextListRenderer).toSelf().inTransientScope();\n\nexport type UITextListRendererFactory = (uiRenderer: UIRenderer) => UITextListRenderer;\n\nInversify\n    .bind<interfaces.Factory<UITextListRendererFactory>>(InjectionToken.UITextListRendererFactory)\n    .toFactory<UITextListRenderer, [UIRenderer]>(ctx => (uiRenderer: UIRenderer) => {\n        const instance = ctx.container.get(UITextListRenderer);\n        instance.UIRenderer = uiRenderer;\n\n        return instance;\n    });\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 1.0) ;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n      out_color = vec4(0, 0, 0, 0);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position =  u_viewProject * vec4(a_vertex, 500, 1.0) ;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Intersection } from \"../math/Intersection\";\nimport { Vec2 } from \"../Primitives\";\nimport { Mat4 } from \"../renderer/ShaderProgram\";\n\nimport { InputReceiver } from \"./InputReceiver\";\nimport { Dimension, UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"./UIAlert/UIAlert\";\nimport { UIAlertRenderer } from \"./UIAlert/UIAlertRenderer\";\nimport { UIEditableTextList } from \"./UIEditableTextList/UIEditableTextList\";\nimport { UIEditableTextListRenderer, UIEditableTextListRendererFactory } from \"./UIEditableTextList/UIEditableTextListRenderer\";\nimport { UIButtonStyle, UIIconButton, UIIconStyle } from \"./UIIconButton/UIIconButton\";\nimport { UIIconButtonRenderer } from \"./UIIconButton/UIIconButtonRenderer\";\nimport { TouchCallback } from \"./UIIconButton/UIObservableIconButton\";\nimport { UILabel } from \"./UILabel/UILabel\";\nimport { UILabelRenderer } from \"./UILabel/UILabelRenderer\";\nimport { UIObservablePositioningGroup } from \"./UIObservablePositioningGroup\";\nimport { UITextList } from \"./UITextList/UITextList\";\nimport { UITextListRenderer, UITextListRendererFactory } from \"./UITextList/UITextListRenderer\";\n\nimport { MouseSelectEvent } from \"@/app/AppEventTransformer\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\nexport interface UICreator {\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null): UIIconButton;\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UILabel;\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null): UIAlert;\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UITextList;\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null): UIEditableTextList;\n}\n\ninterface UIEditableTextListDescriptor {\n    renderer: UIEditableTextListRenderer;\n    editableTextList: UIEditableTextList;\n}\n\n@injectable()\nexport class UIRenderer implements UICreator {\n    private viewProjection: Mat4 | Float32Array | null = null;\n\n    private uiTextListRenderers: UITextListRenderer[] = [];\n\n    private uiEditableTextLists: UIEditableTextListDescriptor[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIIconButtonRenderer) private iconButtonRenderer: UIIconButtonRenderer,\n        @inject(UIAlertRenderer) private alertRenderer: UIAlertRenderer,\n        @inject(UILabelRenderer) private labelsRenderer: UILabelRenderer,\n        @inject(InjectionToken.UITextListRendererFactory) private uiTextListRendererFactory: UITextListRendererFactory,\n        @inject(InjectionToken.UIEditableTextListRendererFactory) private uiEditableTextListRendererFactory: UIEditableTextListRendererFactory) {\n        this.alertRenderer.UIRenderer = this;\n    }\n\n    CreateButton(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        style: UIButtonStyle,\n        iconStyle: UIIconStyle,\n        touchCallback: TouchCallback,\n        parent: UIObservablePositioningGroup | null = null): UIIconButton {\n        return this.iconButtonRenderer.Create(position, dimension, zIndex, style, iconStyle, touchCallback, parent);\n    }\n\n    CreateLabel(position: Vec2,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UILabel {\n        return this.labelsRenderer.Create(position, zIndex, text, lineHeight, parent);\n    }\n\n    CreateAlert(position: Vec2,\n        zIndex: number,\n        icon: UIAlertIconStyle,\n        text: UIAlertText,\n        style: UIAlertStyle,\n        parent: UIObservablePositioningGroup | null = null): UIAlert {\n        return this.alertRenderer.Create(position, zIndex, icon, text, style, parent);\n    }\n\n    CreateTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UITextList {\n        const renderer = this.uiTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n        this.uiTextListRenderers.push(renderer);\n\n        return renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableTextListDeleter(renderer),\n            parent);\n    }\n\n    CreateEditableTextList(position: Vec2,\n        dimension: Dimension,\n        zIndex: number,\n        text: string,\n        lineHeight: number,\n        parent: UIObservablePositioningGroup | null = null): UIEditableTextList {\n        const renderer = this.uiEditableTextListRendererFactory(this);\n\n        if (this.viewProjection !== null) {\n            renderer.ViewProjection = this.viewProjection;\n        }\n\n\n        const descriptor: UIEditableTextListDescriptor = { renderer } as UIEditableTextListDescriptor;\n\n        const editableTextList = renderer.Create(\n            position,\n            dimension,\n            zIndex,\n            text,\n            lineHeight,\n            () => this.UIObservableEditableTextListDeleter(descriptor),\n            parent);\n\n        descriptor.editableTextList = editableTextList;\n\n        this.uiEditableTextLists.push(descriptor);\n\n        return editableTextList;\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        const x = e.offsetX;\n        const y = this.gl.canvas.height - e.offsetY;\n\n        const focusedEditableTextList = this.TouchEditableTextList(x, y);\n\n        const touchResult = this.TouchAlerts(x, y) ||\n            this.TouchButtons(x, y) ||\n            this.TouchLabels(x, y);\n\n        return focusedEditableTextList ?? touchResult;\n    }\n\n    private TouchButtons(x: number, y: number): boolean {\n        const intersected = this.iconButtonRenderer.IconButtons\n            .filter(btn => Intersection.AABBRectanglePoint(\n                { x: btn.AbsolutePosition.x, y: btn.AbsolutePosition.y, width: btn.Dimension.width, height: btn.Dimension.height },\n                { x, y }));\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        ArrayHelper\n            .Max(intersected, (a: UIIconButton, b: UIIconButton) => a.ZIndex < b.ZIndex)\n            .Touch();\n\n        return true;\n    }\n\n    private TouchLabels(x: number, y: number): boolean {\n        const intersected = this.labelsRenderer.Labels\n            .filter(label => Intersection.AABBRectanglePoint(\n                { x: label.AbsolutePosition.x, y: label.AbsolutePosition.y, width: label.Dimension.width, height: label.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchAlerts(x: number, y: number): boolean {\n        const intersected = this.alertRenderer.Alerts\n            .filter(alert => Intersection.AABBRectanglePoint(\n                { x: alert.AbsolutePosition.x, y: alert.AbsolutePosition.y, width: alert.Dimension.width, height: alert.Dimension.height },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private TouchEditableTextList(x: number, y: number): UIEditableTextList | null {\n        const intersected = this.uiEditableTextLists\n            .filter(desc => desc.editableTextList.Visible && Intersection.AABBRectanglePoint(\n                {\n                    x: desc.editableTextList.AbsolutePosition.x,\n                    y: desc.editableTextList.AbsolutePosition.y,\n                    width: desc.editableTextList.Dimension.width,\n                    height: desc.editableTextList.Dimension.height\n                },\n                { x, y }));\n\n\n        if (intersected.length === 0) {\n            return null;\n        }\n\n        return ArrayHelper\n            .Max(\n                intersected,\n                (a: UIEditableTextListDescriptor, b: UIEditableTextListDescriptor) => a.editableTextList.ZIndex < b.editableTextList.ZIndex)\n            .editableTextList;\n    }\n\n    private UIObservableTextListDeleter(renderer: UITextListRenderer): void {\n        this.uiTextListRenderers.splice(this.uiTextListRenderers.findIndex(x => x === renderer), 1);\n    }\n\n    private UIObservableEditableTextListDeleter(descriptor: UIEditableTextListDescriptor): void {\n        this.uiEditableTextLists.splice(this.uiEditableTextLists.findIndex(x => x === descriptor), 1);\n    }\n\n    Draw(): void {\n        this.alertRenderer.Draw();\n        this.iconButtonRenderer.Draw();\n        this.labelsRenderer.Draw();\n        this.uiTextListRenderers.forEach(x => x.Draw());\n        this.uiEditableTextLists.forEach(x => x.renderer.Draw());\n    }\n\n    set ViewProjection(projection: Mat4 | Float32Array) {\n        this.viewProjection = projection;\n\n        this.iconButtonRenderer.ViewProjection = projection;\n        this.labelsRenderer.ViewProjection = projection;\n        this.alertRenderer.ViewProjection = projection;\n        this.uiTextListRenderers.forEach(x => x.ViewProjection = projection);\n        this.uiEditableTextLists.forEach(x => x.renderer.ViewProjection = projection);\n    }\n}\n\nInversify.bind(UIRenderer).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebugControlsLayout } from \"./Layouts/DebugControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { PCDirection } from \"@/lib/befunge/CPU/CPU\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\nexport interface PCDirectionCondition {\n    Direction?: PCDirection;\n}\n\nexport interface HeatmapToggleButtonState {\n    isShown: boolean;\n}\n\n@injectable()\nexport class DebugControls {\n    private static readonly DefaultButtonFillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n    private static readonly DefaultButtonOutlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n    private static readonly ToggleButtonOutlineColor: Rgb = [0, 0, 0];\n    private static readonly DefaultButtonIconColor: Rgb = [0.40784313725490196, 0.6235294117647059, 0.2196078431372549];\n    private static readonly DebugModeButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n    private static readonly BreakpointButtonIconColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private static readonly ProfilerButtonIconColor: Rgb = [0.11764705882352941, 0.5647058823529412, 1];\n\n    private group: UIObservablePositioningGroup;\n\n    private executeButton: UIIconButton;\n\n    private debugButton: UIIconButton;\n    private debugMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private breakpointMenuButton: UIIconButton;\n    private isBreakpointMenuOpen = false;\n    private breakpointMenuGroup: UIObservablePositioningGroup | null = null;\n\n    private heatmapButton: UIIconButton;\n\n    private readonly executeObservable = new ObservableController<void>();\n\n    private readonly debugObservable = new ObservableController<boolean>();\n\n    private readonly cellBreakpointObservable = new ObservableController<PCDirectionCondition>();\n    private readonly cellBreakpointDeleteObservable = new ObservableController<void>();\n\n    private isHeatmapShown = false;\n    private readonly heatmapObservable = new ObservableController<HeatmapToggleButtonState>();\n\n    private debugMode = false;\n\n    public DeactivateButton = false;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(DebugControlsLayout) private layout: DebugControlsLayout) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 60 },\n            { vertical: VerticalAnchor.Top, horizontal: HorizontalAnchor.Middle });\n\n        const margin = 10;\n        const buttonSideLength = 50;\n\n        this.executeButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Play, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.executeObservable.Notify(),\n            this.group\n        );\n\n        this.debugButton = this.uiRenderer.CreateButton(\n            { x: buttonSideLength + margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.PlayDebug, color: DebugControls.DefaultButtonIconColor },\n            _sender => this.debugObservable.Notify(true),\n            this.group\n        );\n\n        this.breakpointMenuButton = this.uiRenderer.CreateButton(\n            { x: 2 * buttonSideLength + 2 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor },\n            _sender => this.ToggleBreakpointMenuButton(),\n            this.group\n        );\n\n        this.heatmapButton = this.uiRenderer.CreateButton(\n            { x: 3 * buttonSideLength + 3 * margin, y: 0 },\n            { width: buttonSideLength, height: buttonSideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.Heatmap, color: DebugControls.ProfilerButtonIconColor },\n            sender => this.ToggleHeatmap(sender),\n            this.group\n        );\n\n        this.layout.DebugGroup = this.group;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n        this.breakpointMenuGroup?.Resize();\n        this.debugMenuGroup?.Resize();\n    }\n\n    get DebugMode(): boolean {\n        return this.debugMode;\n    }\n\n    set DebugMode(mode: boolean) {\n        if (mode !== this.debugMode) {\n            this.debugButton.Icon = {\n                icon: UIIcon.PlayDebug,\n                color: mode ? DebugControls.DebugModeButtonIconColor : DebugControls.DefaultButtonIconColor\n            };\n\n            const margin = 10;\n            const sideLength = 50;\n\n            if (mode) {\n                this.debugMenuGroup = new UIObservablePositioningGroup(\n                    {\n                        x: this.debugButton.AbsolutePosition.x / this.group.Scale,\n                        y: this.group.Position.y + margin + sideLength\n                    },\n                    { vertical: VerticalAnchor.Top });\n\n                const stopDebuggingButton = this.uiRenderer.CreateButton(\n                    { x: 0, y: 0 },\n                    { width: sideLength, height: sideLength },\n                    1,\n                    { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                    { icon: UIIcon.Stop, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                    _sender => this.debugObservable.Notify(false),\n                    this.debugMenuGroup);\n            } else {\n                this.debugMenuGroup?.Destroy();\n                this.debugMenuGroup = null;\n            }\n\n            this.executeButton.Disable = mode;\n            this.heatmapButton.Disable = mode;\n        }\n\n        this.debugMode = mode;\n    }\n\n    get IsHeatmapShown(): boolean {\n        return this.isHeatmapShown;\n    }\n\n    get Execute(): Observable<void> {\n        return this.executeObservable;\n    }\n\n    get Debug(): Observable<boolean> {\n        return this.debugObservable;\n    }\n\n    get CellBreakopint(): Observable<PCDirectionCondition> {\n        return this.cellBreakpointObservable;\n    }\n\n    get CellBreakpointDelete(): Observable<void> {\n        return this.cellBreakpointDeleteObservable;\n    }\n\n    get Heatmap(): Observable<HeatmapToggleButtonState> {\n        return this.heatmapObservable;\n    }\n\n    private ToggleBreakpointMenuButton(): void {\n        if (this.isBreakpointMenuOpen) {\n            this.CloseCellBreakpointDirectionMenu();\n        } else {\n            this.ShowCellBreakpointDirectionMenu();\n        }\n    }\n\n    private ShowCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = true;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: [0.4588235294117647, 0.4588235294117647, 0.4588235294117647] };\n\n        const margin = 10;\n        const sideLength = 50;\n        const totalButtons = 5 + +this.DeactivateButton;\n        this.breakpointMenuGroup = new UIObservablePositioningGroup(\n            {\n                x: this.breakpointMenuButton.AbsolutePosition.x / this.breakpointMenuButton.Scale,\n                y: this.group.Position.y + totalButtons * margin + totalButtons * sideLength\n            },\n            { vertical: VerticalAnchor.Top });\n\n        const breakpointAnyDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 0 },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinAll, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({}),\n            this.breakpointMenuGroup);\n\n        const breakpointLeftDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: margin + sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinLeft, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Left }),\n            this.breakpointMenuGroup);\n\n        const breakpointUpDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 2 * margin + 2 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinUp, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Up }),\n            this.breakpointMenuGroup);\n\n        const breakpointRightDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 3 * margin + 3 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinRight, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Right }),\n            this.breakpointMenuGroup);\n\n        const breakpointDownDirectionButton = this.uiRenderer.CreateButton(\n            { x: 0, y: 4 * margin + 4 * sideLength },\n            { width: sideLength, height: sideLength },\n            1,\n            { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n            { icon: UIIcon.ArrowThinDown, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n            _sender => this.NotifyWithPCLocationCondition({ Direction: PCDirection.Down }),\n            this.breakpointMenuGroup);\n\n        if (this.DeactivateButton) {\n            const breakpointDeactivateButton = this.uiRenderer.CreateButton(\n                { x: 0, y: 5 * margin + 5 * sideLength },\n                { width: sideLength, height: sideLength },\n                1,\n                { fillColor: DebugControls.DefaultButtonFillColor, outlineColor: DebugControls.DefaultButtonOutlineColor },\n                { icon: UIIcon.Delete, color: [0.8980392156862745, 0.2235294117647059, 0.20784313725490197] },\n                _sender => this.NotifyWithCellBreakpointDeactivation(),\n                this.breakpointMenuGroup);\n        }\n    }\n\n    private NotifyWithPCLocationCondition(direction: PCDirectionCondition): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointObservable.Notify(direction);\n    }\n\n    private NotifyWithCellBreakpointDeactivation(): void {\n        this.CloseCellBreakpointDirectionMenu();\n\n        this.cellBreakpointDeleteObservable.Notify();\n    }\n\n    private CloseCellBreakpointDirectionMenu(): void {\n        this.isBreakpointMenuOpen = false;\n\n        this.breakpointMenuButton.Icon = { icon: UIIcon.Breakpoint, color: DebugControls.BreakpointButtonIconColor };\n\n        this.breakpointMenuGroup?.Destroy();\n        this.breakpointMenuGroup = null;\n    }\n\n    private ToggleHeatmap(component: UIIconButton): void {\n        this.isHeatmapShown = !this.isHeatmapShown;\n\n        const feedback: HeatmapToggleButtonState = { isShown: this.isHeatmapShown };\n        this.heatmapObservable.Notify(feedback);\n\n        if (feedback.isShown === this.isHeatmapShown) {\n\n            const outlineColor = this.isHeatmapShown ?\n                DebugControls.ToggleButtonOutlineColor :\n                DebugControls.DefaultButtonOutlineColor;\n\n            component.Style = { ...component.Style, outlineColor };\n\n            if (this.isHeatmapShown) {\n                this.CloseCellBreakpointDirectionMenu();\n            }\n\n            this.executeButton.Disable = this.isHeatmapShown;\n            this.debugButton.Disable = this.isHeatmapShown;\n            this.breakpointMenuButton.Disable = this.isHeatmapShown;\n        }\n\n        this.isHeatmapShown = feedback.isShown;\n    }\n}\n\nInversify.bind(DebugControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Dimension } from \"@/lib/UI/UIComponent\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class EditControls {\n    private group: UIObservablePositioningGroup;\n\n    private selectButton: UIIconButton;\n    private cutButton: UIIconButton;\n    private copyButton: UIIconButton;\n    private pasteButton: UIIconButton;\n    private deleteButton: UIIconButton;\n\n    private selectObservable = new ObservableController<void>();\n    private cutObservable = new ObservableController<void>();\n    private copyObservable = new ObservableController<void>();\n    private pasteObservable = new ObservableController<void>();\n    private deleteObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 9 * margin + 6 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.selectButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Select, color: buttonIconColor },\n            _sender => this.selectObservable.Notify(),\n            this.group\n        );\n\n        this.cutButton = this.uiRenderer.CreateButton({ x: margin + btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Cut, color: buttonIconColor },\n            _sender => this.cutObservable.Notify(),\n            this.group\n        );\n\n        this.copyButton = this.uiRenderer.CreateButton({ x: 2 * margin + 2 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Copy, color: buttonIconColor },\n            _sender => this.copyObservable.Notify(),\n            this.group\n        );\n\n        this.pasteButton = this.uiRenderer.CreateButton({ x: 3 * margin + 3 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Paste, color: buttonIconColor },\n            _sender => this.pasteObservable.Notify(),\n            this.group\n        );\n\n        this.deleteButton = this.uiRenderer.CreateButton({ x: 4 * margin + 4 * btnSideLength, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.EditDelete, color: buttonIconColor },\n            _sender => this.deleteObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get Disable(): boolean {\n        return this.selectButton.Disable;\n    }\n\n    set Disable(value: boolean) {\n        this.selectButton.Disable = value;\n        this.cutButton.Disable = value;\n        this.copyButton.Disable = value;\n        this.pasteButton.Disable = value;\n        this.deleteButton.Disable = value;\n    }\n\n    get SelectObservable(): Observable<void> {\n        return this.selectObservable;\n    }\n\n    get CutObservable(): Observable<void> {\n        return this.cutObservable;\n    }\n\n    get CopyObservable(): Observable<void> {\n        return this.copyObservable;\n    }\n\n    get PasteObservable(): Observable<void> {\n        return this.pasteObservable;\n    }\n\n    get DeleteObservable(): Observable<void> {\n        return this.deleteObservable;\n    }\n\n    get Position(): Vec2 {\n        return this.group.AbsolutePosition;\n    }\n\n    get Dimension(): Dimension {\n        return this.group.Dimension;\n    }\n}\n\nInversify.bind(EditControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { EditionDirection } from \"../CodeEditor/CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\ninterface EditDirection {\n    group: UIObservablePositioningGroup;\n    left: UIIconButton;\n    up: UIIconButton;\n    right: UIIconButton;\n    down: UIIconButton;\n}\n\nexport interface EditDirectionControlsBoundaries {\n    lb: Vec2;\n    rt: Vec2;\n}\n\n@injectable()\nexport class EditDirectionControls {\n    private static CurrentDirectionInactiveIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n    private static CurrentDirrectionActiveIconColor: Rgb = [0.1607843137254902, 0.5019607843137255, 0.7254901960784313];\n\n    private group: UIObservablePositioningGroup;\n    private editDirectionControls!: EditDirection;\n    private currentDirectionControl!: UIIconButton;\n\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    constructor(@inject(UIRenderer) private uiRenderer: UIRenderer) {\n        const buttonMargin = 5;\n        const [buttonWidth, btnHeight] = [37.5, 25];\n\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 2 * buttonWidth + 3 * buttonMargin + btnHeight + 50\n            },\n            { vertical: VerticalAnchor.Top });\n\n        this.editDirectionControls = {\n            group: this.group,\n            left: this.uiRenderer.CreateButton(\n                { x: 0, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowLeft, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Left),\n                this.group),\n            up: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: buttonWidth + 2 * buttonMargin + btnHeight },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowUp, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Up),\n                this.group),\n            right: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin, y: buttonWidth + buttonMargin },\n                { width: buttonWidth, height: btnHeight },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowRight, color: EditDirectionControls.CurrentDirrectionActiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Right),\n                this.group),\n            down: this.uiRenderer.CreateButton(\n                { x: buttonWidth + buttonMargin / 2 - btnHeight / 2, y: 0 },\n                { width: btnHeight, height: buttonWidth },\n                1,\n                { fillColor, outlineColor },\n                { icon: UIIcon.ArrowDown, color: EditDirectionControls.CurrentDirectionInactiveIconColor },\n                sender => this.UpdateEditDirection(sender, EditionDirection.Down),\n                this.group)\n        };\n\n        this.currentDirectionControl = this.editDirectionControls.right;\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    ForceEditDirection(direction: EditionDirection): void {\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        const control = direction === EditionDirection.Left ? this.editDirectionControls.left :\n            direction === EditionDirection.Up ? this.editDirectionControls.up :\n                direction === EditionDirection.Right ? this.editDirectionControls.right :\n                    this.editDirectionControls.down;\n\n        control.Icon = {\n            ...control.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = control;\n    }\n\n    private UpdateEditDirection(sender: UIIconButton, direction: EditionDirection): void {\n        if (sender === this.currentDirectionControl) {\n            return;\n        }\n\n        this.currentDirectionControl.Icon = {\n            ...this.currentDirectionControl.Icon,\n            color: EditDirectionControls.CurrentDirectionInactiveIconColor\n        };\n\n        sender.Icon = {\n            ...sender.Icon,\n            color: EditDirectionControls.CurrentDirrectionActiveIconColor\n        };\n\n        this.currentDirectionControl = sender;\n        this.editDirectionObservable.Notify(direction)\n    }\n\n    get Boundaries(): EditDirectionControlsBoundaries {\n        const dimension = this.group.Dimension;\n\n        return {\n            lb: this.group.AbsolutePosition,\n            rt: {\n                x: this.group.AbsolutePosition.x + dimension.width,\n                y: this.group.AbsolutePosition.y + dimension.height\n            }\n        };\n    }\n}\n\nInversify.bind(EditDirectionControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class FileControls {\n    private group: UIObservablePositioningGroup;\n\n    private openButton: UIIconButton;\n    private saveButton: UIIconButton;\n    private shareButton: UIIconButton;\n    private settingsButton: UIIconButton;\n\n    private openFromDiskObservable = new ObservableController<void>();\n    private saveToDiskObservable = new ObservableController<void>();\n    private shareObservable = new ObservableController<void>();\n    private openSettingsObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const openButtonIconColor: Rgb = [0.9411764705882353, 0.6392156862745098, 0.0392156862745098];\n        const saveButtonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n        const settingsButtonIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: margin, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.openButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Open, color: openButtonIconColor },\n            _sender => this.openFromDiskObservable.Notify(),\n            this.group\n        );\n\n        this.saveButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Save, color: saveButtonIconColor },\n            _sender => this.saveToDiskObservable.Notify(),\n            this.group\n        );\n        this.saveButton.Disable = true;\n\n        this.shareButton = this.uiRenderer.CreateButton({ x: 2 * btnSideLength + 2 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Share, color: saveButtonIconColor },\n            _sender => this.shareObservable.Notify(),\n            this.group\n        );\n        this.shareButton.Disable = true;\n\n        this.settingsButton = this.uiRenderer.CreateButton({ x: 3 * btnSideLength + 3 * margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Settings, color: settingsButtonIconColor },\n            _sender => this.openSettingsObservable.Notify(),\n            this.group\n        );\n\n        this.layout.Watch(this.group);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get ShareDisabled(): boolean {\n        return this.shareButton.Disable;\n    }\n\n    set ShareDisabled(value: boolean) {\n        this.saveButton.Disable = value;\n        this.shareButton.Disable = value;\n    }\n\n    get OpenFromDiskDisabled(): boolean {\n        return this.openButton.Disable;\n    }\n\n    set OpenFromDiskDisabled(value: boolean) {\n        this.openButton.Disable = value;\n    }\n\n    get OpenFromDiskObservable(): Observable<void> {\n        return this.openFromDiskObservable;\n    }\n\n    get SaveToDiskObservable(): Observable<void> {\n        return this.saveToDiskObservable;\n    }\n\n    get ShareObservable(): Observable<void> {\n        return this.shareObservable;\n    }\n\n    get OpenSettingsObservable(): Observable<void> {\n        return this.openSettingsObservable;\n    }\n}\n\nInversify.bind(FileControls).toSelf().inSingletonScope();","import { injectable } from \"inversify\";\n\nimport { Command } from \"./Commands/Command\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\n\n@injectable()\nexport class AppHistory {\n    private history: Command[] = [];\n\n    private cursor = -1;\n\n    private updateObservable = new ObservableController<void>();\n\n    Push(command: Command): void {\n        if (this.CanRedo) {\n            this.history.splice(this.cursor + 1);\n        }\n\n        this.history.push(command);\n        this.cursor = this.history.length - 1;\n\n        this.updateObservable.Notify();\n    }\n\n    Undo(): void {\n        if (!this.CanUndo) {\n            return;\n        }\n\n        this.history[this.cursor--].Undo();\n\n        this.updateObservable.Notify();\n    }\n\n    Redo(): void {\n        if (!this.CanRedo) {\n            return;\n        }\n\n        this.history[++this.cursor].Apply();\n\n        this.updateObservable.Notify();\n    }\n\n    Reset(): void {\n        this.history.length = 0;\n        this.cursor = -1;\n\n        this.updateObservable.Notify();\n    }\n\n    get CanUndo(): boolean {\n        return this.cursor >= 0;\n    }\n\n    get CanRedo(): boolean {\n        return this.cursor < this.history.length - 1;\n    }\n\n    get UpdateObservable(): Observable<void> {\n        return this.updateObservable;\n    }\n}\n\nInversify.bind(AppHistory).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\n\nimport { HeadlineControlsLayout } from \"./Layouts/HeadlineControlsLayout\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class HistoryControls {\n    private group: UIObservablePositioningGroup;\n\n    private undoButton: UIIconButton;\n    private redoButton: UIIconButton;\n\n    private undoObservable = new ObservableController<void>();\n\n    private redoObservable = new ObservableController<void>();\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(HeadlineControlsLayout) private layout: HeadlineControlsLayout) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const buttonIconColor: Rgb = [0.08235294117647059, 0.396078431372549, 0.7529411764705882];\n\n        const margin = 10;\n        const btnSideLength = 30;\n\n        this.group = new UIObservablePositioningGroup(\n            { x: 6 * margin + 4 * btnSideLength, y: margin + btnSideLength },\n            { vertical: VerticalAnchor.Top });\n\n        this.undoButton = this.uiRenderer.CreateButton({ x: 0, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Undo, color: buttonIconColor },\n            _sender => this.undoObservable.Notify(),\n            this.group\n        );\n        this.undoButton.Disable = true;\n\n        this.redoButton = this.uiRenderer.CreateButton({ x: btnSideLength + margin, y: 0 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Redo, color: buttonIconColor },\n            _sender => this.redoObservable.Notify(),\n            this.group\n        );\n        this.redoButton.Disable = true;\n\n        this.history.UpdateObservable.Attach(() => this.UpdateButtonsAvailability());\n\n        this.layout.Watch(this.group)\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    get CanUndo(): boolean {\n        return this.undoButton.Disable;\n    }\n\n    set CanUndo(value: boolean) {\n        if (this.undoButton.Disable !== value) {\n            this.undoButton.Disable = value;\n        }\n    }\n\n    get CanRedo(): boolean {\n        return this.redoButton.Disable;\n    }\n\n    set CanRedo(value: boolean) {\n        if (this.redoButton.Disable !== value) {\n            this.redoButton.Disable = value;\n        }\n    }\n\n    get UndoObservable(): Observable<void> {\n        return this.undoObservable;\n    }\n\n    get RedoObservable(): Observable<void> {\n        return this.redoObservable;\n    }\n\n    Lock(): void {\n        this.undoButton.Disable = true;\n        this.redoButton.Disable = true;\n    }\n\n    Unlock(): void {\n        this.UpdateButtonsAvailability();\n    }\n\n    private UpdateButtonsAvailability(): void {\n        this.undoButton.Disable = !this.history.CanUndo;\n        this.redoButton.Disable = !this.history.CanRedo;\n    }\n}\n\nInversify.bind(HistoryControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { FontGlyphCollection, FontGlyphCollectionFactory } from \"@/lib/font/FontGlyphCollection\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { SelfBind } from \"@/lib/SelfBind\";\nimport { UIEditableTextList } from \"@/lib/UI/UIEditableTextList/UIEditableTextList\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { UIIconButton } from \"@/lib/UI/UIIconButton/UIIconButton\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class IOControls {\n    private group!: UIObservablePositioningGroup;\n\n    private outputTextList: UITextList;\n    private inputEditableTextList: UIEditableTextList;\n\n    private inputButton: UIIconButton;\n    private outputButton: UIIconButton;\n\n    private fontGlyphCollection: FontGlyphCollection | null = null;\n\n    private readonly maxPanelWidth = 800;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(InjectionToken.FontGlyphCollectionFactory) private fontGlyphCollectionFactory: FontGlyphCollectionFactory) {\n        const fillColor: Rgb = [0.9254901960784314, 0.9411764705882353, 0.9450980392156862];\n        const outlineColor: Rgb = [0.4980392156862745, 0.5490196078431373, 0.5529411764705883];\n        const btnIconColor: Rgb = [0.17254901960784313, 0.24313725490196078, 0.3137254901960784];\n\n        const margin = 10;\n        const btnSideLength = 25;\n        const textListHeight = 100;\n\n        this.group = new UIObservablePositioningGroup({ x: 145, y: 10 }, { vertical: VerticalAnchor.Bottom });\n        this.inputButton = this.uiRenderer.CreateButton(\n            { x: 0, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Input, color: btnIconColor },\n            _sender => this.SwitchTab(true),\n            this.group);\n\n\n        this.outputButton = this.uiRenderer.CreateButton(\n            { x: btnSideLength + margin, y: textListHeight + margin / 2 },\n            { width: btnSideLength, height: btnSideLength },\n            1,\n            { fillColor, outlineColor },\n            { icon: UIIcon.Output, color: btnIconColor },\n            _sender => this.SwitchTab(false),\n            this.group);\n        this.outputButton.Disable = true;\n\n        this.outputTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n\n        this.inputEditableTextList = this.uiRenderer.CreateEditableTextList(\n            { x: 0, y: 0 },\n            { width: this.maxPanelWidth, height: textListHeight },\n            1,\n            '',\n            32,\n            this.group);\n        this.inputEditableTextList.Visible = false;\n    }\n\n    private SwitchTab(inputTab: boolean): void {\n        this.inputButton.Disable = inputTab;\n        this.outputButton.Disable = !inputTab;\n\n        this.inputEditableTextList.Visible = inputTab;\n        this.outputTextList.Visible = !inputTab;\n\n        if (this.outputTextList.Visible) {\n            this.outputTextList.ScrollToTop();\n        }\n    }\n\n    get Output(): string {\n        return this.outputTextList.Text;\n    }\n\n    set Output(text: string) {\n        this.outputTextList.Text = this.NewLineFormatter(text);\n\n        this.outputTextList.ScrollToTop();\n    }\n\n    get Input(): string {\n        return this.inputEditableTextList.Text;\n    }\n\n    Resize(): void {\n        this.inputEditableTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.outputTextList.Dimension = {\n            width: this.PanelWidth,\n            height: this.inputEditableTextList.Dimension.height / this.inputEditableTextList.Scale\n        };\n\n        this.group.Resize();\n    }\n\n\n    get PanelWidth(): number {\n        const widthToFit = this.settings.ViewDimension.Width - this.group.AbsolutePosition.x;\n        return Math.min(this.maxPanelWidth, widthToFit) / this.group.Scale;\n    }\n\n    private NewLineFormatter(str: string): string {\n        const fontGlyphCollection = this.RetrieveFontGlyphCollection();\n\n        const strArr = [...str];\n        const padding = 20 * this.group.Scale;\n\n        for (let n = 0, width = padding; n < strArr.length; ++n) {\n            const symbol = strArr[n];\n\n            if (symbol === '\\n') {\n                width = padding;\n                continue;\n            }\n\n            const glyph = ExceptionTrap\n                .Try(SelfBind(fontGlyphCollection, 'Lookup'), symbol)\n                .CatchFn(SelfBind(fontGlyphCollection, 'Lookup'), '?');\n            if (width + glyph.width > this.outputTextList.Dimension.width) {\n                width = padding;\n                strArr.splice(n, 0, '\\n');\n            } else {\n                width += glyph.width;\n            }\n        }\n\n        return strArr.join('');\n    }\n\n    private RetrieveFontGlyphCollection(): FontGlyphCollection {\n        if (this.fontGlyphCollection !== null && this.fontGlyphCollection.LineHeight === this.outputTextList.LineHeight * this.outputTextList.Scale) {\n            return this.fontGlyphCollection;\n        }\n\n        this.fontGlyphCollection = this.fontGlyphCollectionFactory({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: this.outputTextList.LineHeight * this.outputTextList.Scale } });\n\n        return this.fontGlyphCollection;\n    }\n}\n\nInversify.bind(IOControls).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb } from \"@/lib/Primitives\";\nimport { UIAlert, UIAlertIconStyle, UIAlertStyle, UIAlertText } from \"@/lib/UI/UIAlert/UIAlert\";\nimport { UIIcon } from \"@/lib/UI/UIIcon\";\nimport { HorizontalAnchor, UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class SnackbarControls {\n    private group: UIObservablePositioningGroup;\n\n    private snackbar: UIAlert | null = null;\n\n    private contentColor: Rgb = [0.9, 0.9, 0.9];\n\n    private lineHeight = 24;\n\n    private showTime = 5000;\n\n    private hideTimer = -1;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            { x: 0, y: 0 },\n            { vertical: VerticalAnchor.Bottom, horizontal: HorizontalAnchor.Middle });\n    }\n\n    Show(icon: UIAlertIconStyle, text: UIAlertText, style: UIAlertStyle): void {\n        if (this.snackbar !== null) {\n            this.Hide();\n        }\n\n        this.snackbar = this.uiRenderer.CreateAlert(\n            { x: 0, y: 0 },\n            1,\n            icon,\n            text,\n            style,\n            this.group);\n\n        this.LimitToViewportWidth();\n\n        this.hideTimer = setTimeout(() => this.Hide(), this.showTime);\n    }\n\n    private LimitToViewportWidth(): void {\n        const alertWidth = this.group.Dimension.width;\n        if (alertWidth > this.settings.ViewDimension.Width) {\n            const targetScale = this.settings.ViewDimension.Width / alertWidth;\n            this.group.Scale = targetScale;\n        }\n    }\n\n    ShowError(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.83, 0.18, 0.18] }\n        );\n    }\n\n    ShowWarning(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationTriangle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.93, 0.42, 0.01] }\n        );\n    }\n\n    ShowInformation(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.1, 0.53, 0.82] }\n        );\n    }\n\n    ShowSuccess(msg: string): void {\n        this.Show(\n            { icon: UIIcon.ExclamationCircle, color: this.contentColor },\n            { text: msg, lineHeight: this.lineHeight, color: this.contentColor },\n            { fillColor: [0.18, 0.49, 0.2] }\n        );\n    }\n\n    Hide(): void {\n        this.snackbar?.Destroy();\n        this.snackbar = null;\n        clearTimeout(this.hideTimer);\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n}\n\nInversify.bind(SnackbarControls).toSelf().inSingletonScope();\n","export function EscapeString(str: string): string {\n    return [...str].map(x => Replacer(x)).join();\n}\n\nfunction Replacer(symbol: string): string {\n    if (symbol === '\\n') {\n        return '\\\\n';\n    } else if (symbol === '\\r') {\n        return '\\\\r';\n    } else {\n        return symbol;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { EscapeString } from \"@/lib/font/EscapeString\";\nimport { UIObservablePositioningGroup, VerticalAnchor } from \"@/lib/UI/UIObservablePositioningGroup\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\nimport { UITextList } from \"@/lib/UI/UITextList/UITextList\";\n\n@injectable()\nexport class StackControls {\n    private group: UIObservablePositioningGroup;\n\n    private stackTextList: UITextList;\n\n    constructor(\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(AppSettings) private settings: AppSettings) {\n        this.group = new UIObservablePositioningGroup(\n            {\n                x: 10,\n                y: 480\n            },\n            { vertical: VerticalAnchor.Top }\n        );\n\n        this.stackTextList = this.uiRenderer.CreateTextList(\n            { x: 0, y: 0 },\n            { width: 130, height: 300 },\n            1,\n            '',\n            32,\n            this.group\n        );\n    }\n\n    ScrollToTop(): void {\n        this.stackTextList.ScrollToTop();\n    }\n\n    Resize(): void {\n        this.group.Resize();\n    }\n\n    set Stack(stack: number[]) {\n        this.stackTextList.Text = [...stack]\n            .reverse()\n            .map(x => `${x} (${EscapeString(String.fromCharCode(x))})`)\n            .join('\\n')\n    }\n}\n\nInversify.bind(StackControls).toSelf().inSingletonScope();\n","import { mat4 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { AppSettings } from \"../AppSettings\";\nimport { InjectionToken } from \"../InjectionToken\";\n\nimport { DebugControls } from \"./DebugControls\";\nimport { EditControls } from \"./EditControls\";\nimport { EditDirectionControls } from \"./EditDirectionControls\";\nimport { FileControls } from \"./FileControls\";\nimport { HistoryControls } from \"./HistoryControls\";\nimport { IOControls } from \"./IOControls\";\nimport { SnackbarControls } from \"./SnackbarControls\";\nimport { StackControls } from \"./StackControls\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\nimport { UIRenderer } from \"@/lib/UI/UIRenderer\";\n\n@injectable()\nexport class OverlayService {\n    private settings: AppSettings;\n\n    private stickyProjection!: mat4;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(UIRenderer) private uiRenderer: UIRenderer,\n        @inject(SnackbarControls) private snackbarControls: SnackbarControls,\n        @inject(FileControls) private fileControls: FileControls,\n        @inject(HistoryControls) private historyControls: HistoryControls,\n        @inject(EditControls) private editControls: EditControls,\n        @inject(EditDirectionControls) private editDirectionControls: EditDirectionControls,\n        @inject(DebugControls) private debugControls: DebugControls,\n        @inject(StackControls) private stackControls: StackControls,\n        @inject(IOControls) private ioControls: IOControls) {\n        this.settings = Inversify.get(AppSettings);\n\n        this.BuildStickyProjection();\n    }\n\n    get EditDirectionControls(): EditDirectionControls {\n        return this.editDirectionControls;\n    }\n\n    get DebugControls(): DebugControls {\n        return this.debugControls;\n    }\n\n    get IOControls(): IOControls {\n        return this.ioControls;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.snackbarControls;\n    }\n\n    get FileControls(): FileControls {\n        return this.fileControls;\n    }\n\n    get HistoryControls(): HistoryControls {\n        return this.historyControls;\n    }\n\n    get EditControls(): EditControls {\n        return this.editControls;\n    }\n\n    get StackControls(): StackControls {\n        return this.stackControls;\n    }\n\n    Resize(): void {\n        this.BuildStickyProjection();\n\n        this.uiRenderer.ViewProjection = this.stickyProjection;\n\n        this.editDirectionControls.Resize();\n        this.debugControls.Resize();\n        this.fileControls.Resize();\n        this.snackbarControls.Resize();\n        this.historyControls.Resize();\n        this.editControls.Resize();\n        this.stackControls.Resize();\n        this.ioControls.Resize();\n    }\n\n    Touch(e: MouseSelectEvent): InputReceiver | boolean {\n        return this.uiRenderer.Touch(e);\n    }\n\n    Draw(): void {\n        this.uiRenderer.Draw();\n    }\n\n    private BuildStickyProjection(): void {\n        this.stickyProjection = mat4.ortho(\n            mat4.create(),\n            0, this.gl.canvas.width,\n            0, this.gl.canvas.height,\n            -this.settings.ZNear, -this.settings.ZFar);\n    }\n}\n\nInversify.bind(OverlayService).toSelf().inSingletonScope();\n","import { injectable } from \"inversify\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Memory, Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { PointerArithmetics } from \"@/lib/befunge/memory/PointerArithmetics\";\n\n@injectable()\nexport class SourceCodeMemory implements Memory {\n    private nonEmptyCells = 0;\n\n    private target!: Memory;\n\n    Initialize<T extends new (...args: any[]) => Memory>(ctr: T, ...args: ConstructorParameters<T>): void {\n        this.nonEmptyCells = 0;\n        this.target = new ctr(...args);\n    }\n\n    Read(ptr: Pointer): number {\n        return this.target.Read(ptr);\n    }\n\n    Write(ptr: Pointer, value: number): void {\n        const emptyValue = ' '.charCodeAt(0);\n        const actual = this.target.Read(ptr);\n\n        if (actual !== value) {\n            if (actual === emptyValue) {\n                ++this.nonEmptyCells;\n            } else if (value === emptyValue) {\n                --this.nonEmptyCells;\n            }\n        }\n\n        this.target.Write(ptr, value);\n    }\n\n    Resize(limit: MemoryLimit): void {\n        this.target.Resize(limit);\n    }\n\n    Clone(): Memory {\n        return this.target.Clone();\n    }\n\n    get Empty(): boolean {\n        return this.nonEmptyCells === 0;\n    }\n\n    get PointerArithmetics(): PointerArithmetics {\n        return this.target.PointerArithmetics;\n    }\n\n    get Target(): Memory {\n        return this.target;\n    }\n}\n\nInversify.bind(SourceCodeMemory).toSelf().inSingletonScope();\n","import { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\nexport interface CodeEditorExtension {\n    Draw(): void;\n\n    Unload(): void;\n\n    set ViewProjection(mat: Mat4 | Float32Array);\n};\n\nexport class EmptyExtension implements CodeEditorExtension {\n    Draw(): void { }\n\n    Unload(): void { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) { }\n}\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(v_color, 1);\\n}\\n\"","\nimport { inject, injectable } from 'inversify';\n\nimport { AppSettings } from '../AppSettings';\nimport { InjectionToken } from '../InjectionToken';\n\nimport FGrid from './Grid.frag';\nimport VGrid from './Grid.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { FontAtlas } from '@/lib/font/FontAtlasBuilder';\nimport { Rgb, Rgba, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\n\nenum CodeCellComponent { X, Y, R, G, B, Ux, Uy };\n\nexport interface EditorGridDimension {\n    Columns: number;\n    Rows: number;\n}\n\n@injectable()\nexport class EditorGridRenderer extends PrimitivesRenderer {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(InjectionToken.FontAtlas) private fontAtlas: FontAtlas,\n        @inject(InjectionToken.FontAtlasTexture) private fontAtlasTexture: WebGLTexture) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellComponent);\n\n        super(gl,\n            { fragment: FGrid, vertex: VGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            },\n            {\n                name: 'a_glyph',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize + 3 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.SetupRenderer();\n    }\n\n    ResizeGrid(): void {\n\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let col = 0; col < this.settings.MemoryLimit.Width; ++col) {\n                const cell = this.BuildCell(\n                    { x: col * this.CellSize, y: row * this.CellSize },\n                    [0, 0.592156862745098, 0.6549019607843137],\n                    ' ');\n\n                vertexList.push(...cell);\n            }\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        row = this.settings.MemoryLimit.Height - row - 1;\n\n        const cellAttrs = this.PrimitiveAttributes(row * this.settings.MemoryLimit.Width + column);\n        const symbolUV = this.fontAtlas.LookupUV(symbol);\n\n        const UVOffset = 5;\n        const UVStartOffset = cellAttrs.offset + UVOffset;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 1] = symbolUV.B.y;\n\n        const stride = EnumSize(CodeCellComponent);\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + stride + 1] = symbolUV.A.y;\n\n        // Left top\n        cellAttrs.buffer[UVStartOffset + 2 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 2 * stride + 1] = symbolUV.A.y;\n\n        // Left bottom\n        cellAttrs.buffer[UVStartOffset + 3 * stride] = symbolUV.A.x;\n        cellAttrs.buffer[UVStartOffset + 3 * stride + 1] = symbolUV.B.y;\n\n        // Right bottom\n        cellAttrs.buffer[UVStartOffset + 4 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 4 * stride + 1] = symbolUV.B.y;\n\n        // Right top\n        cellAttrs.buffer[UVStartOffset + 5 * stride] = symbolUV.B.x;\n        cellAttrs.buffer[UVStartOffset + 5 * stride + 1] = symbolUV.A.y;\n\n        const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, floatSize * UVStartOffset, this.attributes, UVStartOffset, 5 * stride + 2);\n    }\n\n    Draw(): void {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.fontAtlasTexture);\n\n        super.Draw();\n    }\n\n    private BuildCell(\n        position: Vec2,\n        color: Rgb | Rgba,\n        symbol: string\n    ): number[] {\n        const uv = this.fontAtlas.LookupUV(symbol);\n\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                color,\n                {\n                    LeftBottom: [uv.A.x, uv.B.y],\n                    LeftTop: [uv.A.x, uv.A.y],\n                    RightTop: [uv.B.x, uv.A.y],\n                    RightBottom: [uv.B.x, uv.B.y]\n                }\n            ]\n        );\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    get Dimension(): EditorGridDimension {\n        return {\n            Columns: this.settings.MemoryLimit.Width,\n            Rows: this.settings.MemoryLimit.Height\n        };\n    }\n\n    private SetupRenderer(): void {\n        this.ResizeGrid();\n    }\n}\n\nInversify.bind(EditorGridRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.01, 1.0);\\n\\n  v_color = a_color;\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nuniform sampler2D u_glyph;\\n\\nvoid main() \\n{\\n      vec4 text_color = texture(u_glyph, v_glyph);\\n \\n      out_color = vec4(v_color - text_color.xyz, text_color.w);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\nin vec3 a_color;\\nin vec2 a_glyph;\\n\\nout vec2 v_glyph;\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n\\n  v_glyph = a_glyph;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport FCellsOutline from './CellsOutline.frag';\nimport VCellsOutline from './CellsOutline.vert';\nimport { EditorGridRenderer } from \"./EditorGridRenderer\";\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { Rgb } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nenum CodeCellOutlineComponent { X, Y, R, G, B };\n\n@injectable()\nexport class EditorGridCellsOutlineRenderer extends PrimitivesRenderer {\n    private readonly outlineWidth = 0.2;\n    private readonly cellOutlineColor: Rgb = [0.5647058823529412, 0.6431372549019608, 0.6823529411764706];\n\n    private gridOutlineWidth = 0.5;\n    private readonly gridOutlineColor: Rgb = [0.20392156862745098, 0.596078431372549, 0.8588235294117647];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) protected gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private gridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(CodeCellOutlineComponent);\n\n        super(\n            gl,\n            { fragment: FCellsOutline, vertex: VCellsOutline },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES }\n        );\n\n        this.SetupRenderer();\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    private SetupRenderer(): void {\n        const vertexList: number[] = [];\n\n        const editorOutline = PrimitiveBuilder.AABBFrame(\n            { x: 0, y: 0 },\n            {\n                width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n            },\n            this.gridOutlineWidth,\n            [this.gridOutlineColor]);\n\n        vertexList.push(...editorOutline);\n\n        for (let row = 1; row < this.gridRenderer.Dimension.Rows; ++row) {\n            const rowAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: 0, y: row * this.gridRenderer.CellSize },\n                {\n                    width: this.gridRenderer.Dimension.Columns * this.gridRenderer.CellSize,\n                    height: this.outlineWidth\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...rowAttrs);\n        }\n\n        for (let col = 1; col < this.gridRenderer.Dimension.Columns; ++col) {\n            const colAttrs = PrimitiveBuilder.AABBRectangle(\n                { x: col * this.gridRenderer.CellSize, y: 0 },\n                {\n                    width: this.outlineWidth,\n                    height: this.gridRenderer.Dimension.Rows * this.gridRenderer.CellSize\n                },\n                [this.cellOutlineColor]);\n\n            vertexList.push(...colAttrs);\n        }\n\n        this.UploadAttributes(vertexList);\n    }\n}\n\nInversify.bind(EditorGridCellsOutlineRenderer).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 v_glyph;\\nin vec3 v_color;\\n\\nout vec4 out_color;\\n\\nvoid main() \\n{ \\n      out_color = vec4(v_color, 1);\\n}\\n\"","import { inject, injectable } from 'inversify';\n\nimport { InjectionToken } from '../InjectionToken';\n\nimport { EditorGridRenderer } from './EditorGridRenderer';\nimport FSelection from './Selection.frag';\nimport VSelection from './Selection.vert';\n\nimport { Inversify } from '@/Inversify';\nimport { EnumSize } from '@/lib/EnumSize';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Rgb, Vec2 } from '@/lib/Primitives';\nimport { PrimitiveBuilder } from '@/lib/renderer/PrimitiveBuilder';\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum SelectionComponent { X, Y, R, G, B };\n\ninterface SelectionBoundaryPoint {\n    x: number;\n    y: number;\n}\n\ninterface Selection {\n    a: SelectionBoundaryPoint;\n    b: SelectionBoundaryPoint;\n}\n\n@injectable()\nexport class SelectionRenderer extends PrimitivesRenderer {\n    private static readonly IndicesPerPrimitive = 24;\n\n    private readonly selected: Selection[] = [];\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) gl: WebGL2RenderingContext,\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n\n        const selectionStride = floatSize * EnumSize(SelectionComponent);\n\n        super(\n            gl,\n            { fragment: FSelection, vertex: VSelection },\n            [\n                {\n                    name: 'a_vertex',\n                    size: 2,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 0\n                },\n                {\n                    name: 'a_color',\n                    size: 3,\n                    type: gl.FLOAT,\n                    normalized: false,\n                    stride: selectionStride,\n                    offset: 2 * floatSize\n                }\n            ],\n            { indicesPerPrimitive: SelectionRenderer.IndicesPerPrimitive, basePrimitiveType: gl.TRIANGLES });\n    }\n\n    Select(x: number, y: number, color: Rgb): void {\n        this.SelectRegion({ x, y }, { x, y }, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        if (this.OutOfGrid(region.min) || this.OutOfGrid(region.max)) {\n            return;\n        }\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx !== -1) {\n            const colorOffset = 2;\n            const attrs = this.PrimitiveAttributes(selectionIdx);\n\n            const floatSize = TypeSizeResolver.Resolve(this.gl.FLOAT);\n            const componentsPerVertex = EnumSize(SelectionComponent);\n\n            for (let n = 0; n < SelectionRenderer.IndicesPerPrimitive; ++n) {\n                const colorStart = attrs.offset + colorOffset + n * componentsPerVertex;\n\n                attrs.buffer[colorStart] = color[0];\n                attrs.buffer[colorStart + 1] = color[1];\n                attrs.buffer[colorStart + 2] = color[2];\n            }\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER,\n                floatSize * (attrs.offset + colorOffset),\n                this.attributes,\n                attrs.offset + colorOffset,\n                (SelectionRenderer.IndicesPerPrimitive - 1) * componentsPerVertex + 3);\n        } else {\n            this.selected.push({ a: region.min, b: region.max });\n\n            const selection = PrimitiveBuilder.AABBFrame(\n                {\n                    x: region.min.x * this.editorGridRenderer.CellSize,\n                    y: region.min.y * this.editorGridRenderer.CellSize\n                },\n                {\n                    width: (region.max.x - region.min.x + 1) * this.editorGridRenderer.CellSize,\n                    height: (region.max.y - region.min.y + 1) * this.editorGridRenderer.CellSize\n                },\n                0.5,\n                [color]);\n\n            this.UploadAttributes([...this.attributes, ...selection]);\n        }\n    }\n\n    private OutOfGrid(p: Vec2): boolean {\n        return p.x < 0 || p.x >= this.editorGridRenderer.Dimension.Columns ||\n            p.y < 0 || p.y >= this.editorGridRenderer.Dimension.Rows;\n    }\n\n    private FlipY(point: Vec2): Vec2 {\n        return {\n            x: point.x,\n            y: this.editorGridRenderer.Dimension.Rows - point.y - 1\n        }\n    }\n\n    Unselect(x: number, y: number): void {\n        this.UnselectRegion({ x, y }, { x, y });\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        const region = MathUtil.Extremum([this.FlipY(p0), this.FlipY(p1)]);\n\n        const selectionIdx = this.selected\n            .findIndex(r => r.a.x === region.min.x && r.a.y === region.min.y && r.b.x === region.max.x && r.b.y === region.max.y);\n\n        if (selectionIdx === -1) {\n            return;\n        }\n\n        const attrs = this.PrimitiveAttributes(selectionIdx);\n\n        const copy = [...this.attributes];\n\n        copy.splice(attrs.offset, EnumSize(SelectionComponent) * SelectionRenderer.IndicesPerPrimitive);\n        this.UploadAttributes(copy);\n\n        this.selected.splice(selectionIdx, 1);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}\n\nInversify.bind(SelectionRenderer).toSelf().inSingletonScope();","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec3 a_color;\\n\\nout vec3 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.02, 1.0);\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable } from \"inversify\";\n\nimport { EditorGridCellsOutlineRenderer } from \"./EditorGridCellsOutlineRenderer\";\nimport { EditorGridDimension, EditorGridRenderer } from \"./EditorGridRenderer\";\nimport { SelectionRenderer } from \"./SelectionRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\n@injectable()\nexport class CodeEditorRenderer {\n    private viewProjection!: Mat4 | Float32Array;\n\n    constructor(\n        @inject(EditorGridRenderer) private editorGridRenderer: EditorGridRenderer,\n        @inject(EditorGridCellsOutlineRenderer) private editorGridCellsOutlineRenderer: EditorGridCellsOutlineRenderer,\n        @inject(SelectionRenderer) private selectionRenderer: SelectionRenderer) { }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.viewProjection = mat;\n\n        this.editorGridRenderer.ViewProjection = mat;\n        this.editorGridCellsOutlineRenderer.ViewProjection = mat;\n        this.selectionRenderer.ViewProjection = mat;\n    }\n\n    get ViewProjection(): Mat4 | Float32Array {\n        return this.viewProjection;\n    }\n\n    Symbol(symbol: string, column: number, row: number): void {\n        this.editorGridRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, color: Rgb): void {\n        this.selectionRenderer.Select(column, row, color);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.selectionRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.selectionRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.selectionRenderer.UnselectRegion(p0, p1);\n    }\n\n    Draw(): void {\n        this.editorGridRenderer.Draw();\n        this.editorGridCellsOutlineRenderer.Draw();\n        this.selectionRenderer.Draw();\n    }\n\n    Clear(): void {\n        for (let row = 0; row < this.Dimension.Rows; ++row) {\n            for (let column = 0; column < this.Dimension.Columns; ++column) {\n                this.Symbol(' ', column, row);\n            }\n        }\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.editorGridRenderer.Dimension;\n    }\n\n    get CellSize(): number {\n        return this.editorGridRenderer.CellSize;\n    }\n}\n\nInversify.bind(CodeEditorRenderer).toSelf().inSingletonScope();\n","import { inject, injectable, named } from \"inversify\";\n\nimport { UILabelRendererTargetName } from \"../InjectionToken\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { UILabel } from \"@/lib/UI/UILabel/UILabel\";\nimport { UILabelRenderer } from \"@/lib/UI/UILabel/UILabelRenderer\";\n\nexport enum TooltipPosition { LeftBottom, LeftTop, RightTop, RightBottom };\n\nexport type TooltipReleaser = () => void;\n\ninterface Tooltip {\n    column: number;\n    row: number;\n    position: TooltipPosition;\n    instance: UILabel\n}\n\n@injectable()\nexport class CodeEditorTooltipService {\n    private readonly tooltips: Tooltip[] = [];\n\n    constructor(\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer) { }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        const tooltipIdx = this.FindIndex(column, row, position);\n\n        if (tooltipIdx !== -1) {\n            if (text === '') {\n                this.ReleaseTooltip(tooltipIdx);\n            } else {\n                this.tooltips[tooltipIdx].instance.Text = text;\n            }\n\n            return this.BuildReleaser(column, row, position);\n        }\n\n        const cellSize = 10;\n        const margin = 0.5;\n\n        const instance = this.perspectiveLabelRenderer.Create(\n            { x: 0, y: 0 },\n            499.7,\n            text,\n            8,\n            null);\n\n        instance.Scale = 0.2;\n\n        let x = 0, y = 0;\n        switch (position) {\n            case TooltipPosition.LeftBottom:\n                x = margin + column * cellSize;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n            case TooltipPosition.LeftTop:\n                x = margin + column * cellSize;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightTop:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize + cellSize - instance.Dimension.height - margin;\n                break;\n            case TooltipPosition.RightBottom:\n                x = column * cellSize + cellSize - instance.Dimension.width - margin;\n                y = margin + (this.codeEditorRenderer.Dimension.Rows - row - 1) * cellSize;\n                break;\n        }\n\n        instance.Position = { x, y };\n\n        this.tooltips.push({ column, row, position, instance });\n\n        return this.BuildReleaser(column, row, position);\n    }\n\n    ReleaseAll(): void {\n        while (this.tooltips.length > 0) {\n            this.ReleaseTooltip(this.tooltips.length - 1);\n        }\n    }\n\n    private FindIndex(column: number, row: number, position: TooltipPosition): number {\n        return this.tooltips.findIndex(x => x.column === column && x.row === row && x.position === position);\n    }\n\n    private BuildReleaser(column: number, row: number, position: TooltipPosition): TooltipReleaser {\n        return () => {\n            const idx = this.FindIndex(column, row, position);\n\n            if (idx !== -1) {\n                this.ReleaseTooltip(idx);\n            }\n        };\n    }\n\n    private ReleaseTooltip(idx: number): void {\n        this.tooltips[idx].instance.Destroy();\n        this.tooltips.splice(idx, 1);\n    }\n}\n\nInversify.bind(CodeEditorTooltipService).toSelf().inSingletonScope();\n","export interface Index2D {\n    column: number;\n    row: number;\n}\n\nexport class Array2D<T> {\n    private data!: T[];\n\n    private constructor(\n        private readonly width: number,\n        private readonly height: number,\n        private provider?: () => T) {\n        if (provider) {\n            this.Initialize();\n        }\n    }\n\n    static WithConstructor<T>(width: number, height: number, constructor: new () => T): Array2D<T> {\n        return new Array2D<T>(width, height, () => new constructor());\n    }\n\n    static WithProvider<T>(width: number, height: number, provider: () => T): Array2D<T> {\n        return new Array2D<T>(width, height, provider);\n    }\n\n    Get(pos: Index2D): T {\n        return this.data[this.CoordsToIndex(pos)];\n    }\n\n    Set(pos: Index2D, value: T): void {\n        this.data[this.CoordsToIndex(pos)] = value;\n    }\n\n    Update(pos: Index2D, updater: (value: T) => T): void {\n        const idx = this.CoordsToIndex(pos);\n\n        this.data[idx] = updater(this.data[idx]);\n    }\n\n    Map<TRet>(fn: (value: T, idx: Index2D, arr: Array2D<T>) => TRet): Array2D<TRet> {\n        const mapped = new Array2D<TRet>(this.width, this.height);\n\n        mapped.data = this.data.map((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n\n        return mapped;\n    }\n\n    ForEach(fn: (value: T, idx: Index2D, arr: Array2D<T>) => void): void {\n        this.data.forEach((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this));\n    }\n\n    Every(fn: (value: T, idx: Index2D, arr: Array2D<T>) => boolean): boolean {\n        return this.data.every((value: T, idx: number) => fn(value, this.IndexToCoord(idx), this))\n    }\n\n    Equals(arr: Array2D<T>): boolean {\n        if (arr.width !== this.width || arr.height !== this.height) {\n            return false;\n        }\n\n        return this.Every((value, index) => value === arr.Get(index));\n    }\n\n    private Initialize(): void {\n        this.data = Array.from({ length: this.width * this.height }, () => this.provider!());\n    }\n\n    private CoordsToIndex(pos: Index2D): number {\n        return pos.row * this.width + pos.column;\n    }\n\n    private IndexToCoord(index: number): Index2D {\n        const row = Math.floor(index / this.width);\n        const column = index - row * this.width;\n\n        return { column, row };\n    }\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppHistory } from \"../History/AppHistory\";\nimport type { EditCellCommandFactory } from \"../History/Commands/EditCellCommand/EditCellCommand\";\nimport { MoveNextAction as CellMoveNextAction } from \"../History/Commands/EditCellCommand/PostActions/MoveNextAction\";\nimport type { EditCellsRegionCommandFactory } from \"../History/Commands/EditCellsRegionCommand/EditCellsRegionCommand\";\nimport { MoveNextAction as RegionMoveNextAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/MoveNextAction\";\nimport { StayLeftTopAction } from \"../History/Commands/EditCellsRegionCommand/PostActions/StayLeftTopAction\";\nimport { AppCommandInjectionToken, EditCellCommandPostAction, EditCellsRegionCommandPostAction } from \"../InjectionToken\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { EditionDirection } from \"./CodeEditorService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\"\n\nexport interface EditableRegion {\n    lt: Vec2;\n    rb: Vec2\n}\n\nexport interface RegionDimension {\n    width: number;\n    height: number;\n}\n\n@injectable()\nexport class EditableTarget {\n    private readonly editableCellStyle: Rgb = [0.21568627450980393, 0.2784313725490196, 0.30980392156862746];\n\n    private editableRegion: EditableRegion = {\n        lt: { x: 0, y: 0 },\n        rb: { x: 0, y: 0 }\n    };\n\n    private editionDirection: EditionDirection = EditionDirection.Right;\n\n    constructor(\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(AppCommandInjectionToken.EditCellCommandFactory) private editCellCommandFactory: EditCellCommandFactory,\n        @inject(EditCellCommandPostAction.MoveNext) private cellMoveNextPostActionFactory: interfaces.AutoFactory<CellMoveNextAction>,\n        @inject(AppCommandInjectionToken.EditCellsRegionFactory) private editCellsRegionCommandFactory: EditCellsRegionCommandFactory,\n        @inject(EditCellsRegionCommandPostAction.MoveNext) private regionMoveNextPostActionFactory: interfaces.AutoFactory<RegionMoveNextAction>,\n        @inject(EditCellsRegionCommandPostAction.StayLeftTop) private regionStayLeftTopPostActionFactory: interfaces.AutoFactory<StayLeftTopAction>,\n        @inject(AppHistory) private history: AppHistory) {\n        if (this.IsSingleCell) {\n            this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n        } else {\n            this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n        }\n    }\n\n    CellInput(symbol: string): void {\n        this.IsSingleCell ? this.CellInputSingle(symbol) : this.CellInputRegion(symbol);\n    }\n\n    private CellInputSingle(symbol: string): void {\n        const command = this.editCellCommandFactory(\n            this.editableRegion.lt,\n            String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt)),\n            symbol,\n            this.editionDirection,\n            this.cellMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (symbol !== String.fromCharCode(this.editorSourceCode.Read(this.editableRegion.lt))) {\n            this.history.Push(command);\n        }\n    }\n\n    private CellInputRegion(symbol: string): void {\n        const dimension = this.RegionDimension;\n\n        const oldValue = Array2D.WithProvider(dimension.width, dimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x: x, y: y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(dimension.width, dimension.height, () => symbol.charCodeAt(0)),\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => String.fromCharCode(x) === symbol)) {\n            this.history.Push(command);\n        }\n    }\n\n    Select(cell: Vec2): void {\n        if (!this.IsLocationValid(cell)) {\n            return;\n        }\n\n        this.Unselect();\n\n        this.editableRegion.lt.x = cell.x;\n        this.editableRegion.lt.y = cell.y;\n        this.editableRegion.rb.x = cell.x;\n        this.editableRegion.rb.y = cell.y;\n\n        this.codeEditorRenderer.Select(this.editableRegion.lt.x, this.editableRegion.lt.y, this.editableCellStyle);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2): void {\n        if (!(this.IsLocationValid(p0) && this.IsLocationValid(p1))) {\n            return;\n        }\n\n        this.Unselect();\n\n        const normalized = MathUtil.Extremum([p0, p1]);\n        const region = { lt: normalized.min, rb: normalized.max };\n\n        this.editableRegion.lt = { ...region.lt };\n        this.editableRegion.rb = { ...region.rb };\n\n        this.codeEditorRenderer.SelectRegion(region.lt, region.rb, this.editableCellStyle);\n    }\n\n    private IsLocationValid(point: Vec2): boolean {\n        return point.x >= 0 && point.y >= 0 && point.x < this.codeEditorRenderer.Dimension.Columns && point.y < this.codeEditorRenderer.Dimension.Rows;\n    }\n\n    private Unselect(): void {\n        this.IsSingleCell ?\n            this.codeEditorRenderer.Unselect(this.editableRegion.lt.x, this.editableRegion.lt.y) :\n            this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    Focus(): void {\n        this.codeEditorRenderer.SelectRegion(this.editableRegion.lt, this.editableRegion.rb, this.editableCellStyle);\n    }\n\n    Blur(): void {\n        this.codeEditorRenderer.UnselectRegion(this.editableRegion.lt, this.editableRegion.rb);\n    }\n\n    ContentString(): string {\n        let sourceCode = '';\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                sourceCode += String.fromCharCode(this.editorSourceCode.Read({ x: x, y: y }));\n            }\n\n            sourceCode += '\\n';\n        }\n\n        return sourceCode.slice(0, -1);\n    }\n\n    InsertSourceCode(sourceCode: string): boolean {\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        let fragmentWidth = 0;\n        const fragmentHeight = linesOfCode.length;\n        for (let y = 0; y < linesOfCode.length; ++y) {\n            const line = linesOfCode[y];\n            if (line.length > fragmentWidth) {\n                fragmentWidth = line.length;\n            }\n        }\n\n        if (!this.IsLocationValid({\n            x: this.editableRegion.lt.x + fragmentWidth - 1,\n            y: this.editableRegion.lt.y + fragmentHeight - 1\n        })) {\n            return false;\n        }\n\n        const newValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 32);\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                newValue.Set({ column, row }, line[column].charCodeAt(0));\n            }\n        }\n\n        const oldValue = Array2D.WithProvider(fragmentWidth, fragmentHeight, () => 0);\n        for (let y = this.editableRegion.lt.y; y < this.editableRegion.lt.y + fragmentHeight; ++y) {\n            for (let x = this.editableRegion.lt.x; x < this.editableRegion.lt.x + fragmentWidth; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            newValue,\n            this.editionDirection,\n            this.regionMoveNextPostActionFactory());\n\n        command.Apply();\n\n        if (!newValue.Equals(oldValue)) {\n            this.history.Push(command);\n        }\n\n        return true;\n    }\n\n    Clear(): void {\n        const oldValue = Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 0);\n        for (let y = this.editableRegion.lt.y; y <= this.editableRegion.rb.y; ++y) {\n            for (let x = this.editableRegion.lt.x; x <= this.editableRegion.rb.x; ++x) {\n                oldValue.Set({ column: x - this.editableRegion.lt.x, row: y - this.editableRegion.lt.y }, this.editorSourceCode.Read({ x, y }));\n            }\n        }\n\n        const command = this.editCellsRegionCommandFactory(\n            this.editableRegion,\n            oldValue,\n            Array2D.WithProvider(this.RegionDimension.width, this.RegionDimension.height, () => 32),\n            this.editionDirection,\n            this.regionStayLeftTopPostActionFactory());\n\n        command.Apply();\n\n        if (!oldValue.Every(x => x === 32)) {\n            this.history.Push(command);\n        }\n    }\n\n    get IsSingleCell(): boolean {\n        return this.editableRegion.lt.x === this.editableRegion.rb.x &&\n            this.editableRegion.lt.y === this.editableRegion.rb.y;\n    }\n\n    get RegionDimension(): RegionDimension {\n        return {\n            width: this.editableRegion.rb.x - this.editableRegion.lt.x + 1,\n            height: this.editableRegion.rb.y - this.editableRegion.lt.y + 1\n        };\n    }\n\n    get Target(): EditableRegion {\n        return this.editableRegion;\n    }\n\n    get EditionDirection(): EditionDirection {\n        return this.editionDirection;\n    }\n\n    set EditionDirection(direction: EditionDirection) {\n        this.editionDirection = direction;\n    }\n}\n\nInversify.bind(EditableTarget).toSelf().inSingletonScope();\n","import { vec2, vec3, vec4, mat4 } from 'gl-matrix';\n\nimport { Intersection, Plane } from '../math/Intersection';\nimport { Vec2 } from '../Primitives';\n\nexport interface WndCoord {\n    x: number;\n    y: number;\n    z: number;\n}\n\nexport interface Viewport {\n    width: number;\n    height: number;\n}\n\nexport class Camera {\n    static Unproject(position: WndCoord, viewProjection: mat4, viewport: Viewport): vec4 {\n        const vec = vec3.fromValues(position.x, position.y, position.z);\n\n        const v = vec4.fromValues(\n            2 * vec[0] / viewport.width - 1,\n            1 - 2 * vec[1] / viewport.height,\n            2 * vec[2] - 1,\n            1\n        );\n\n        const invertViewProj = mat4.invert(mat4.create(), viewProjection);\n\n        const pos = vec4.transformMat4(vec4.create(), v, invertViewProj);\n\n        pos[3] = 1 / pos[3];\n        pos[0] *= pos[3];\n        pos[1] *= pos[3];\n        pos[2] *= pos[3];\n\n        return pos;\n    }\n\n    static UnprojectMovement(movement: Vec2, plane: Plane, viewProjection: mat4, viewport: Viewport): Vec2 {\n        const posNear0 = Camera.Unproject({ x: 0, y: 0, z: 0 }, viewProjection, viewport);\n        const posFar0 = Camera.Unproject({ x: 0, y: 0, z: 1 }, viewProjection, viewport);\n\n        const intersection0 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear0[0], posNear0[1], posNear0[2]], b: [posFar0[0], posFar0[1], posFar0[2]] });\n\n        const posNear1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 0 }, viewProjection, viewport);\n        const posFar1 = Camera.Unproject({ x: movement.x, y: movement.y, z: 1 }, viewProjection, viewport);\n\n        const intersection1 = Intersection.PlaneLine(\n            plane,\n            { a: [posNear1[0], posNear1[1], posNear1[2]], b: [posFar1[0], posFar1[1], posFar1[2]] });\n\n        const delta = vec2.sub(\n            vec2.create(),\n            vec2.fromValues(intersection0[0], intersection0[1]),\n            vec2.fromValues(intersection1[0], intersection1[1]));\n\n        return { x: delta[0], y: delta[1] };\n    }\n}\n","import { vec3 } from \"gl-matrix\";\nimport { inject, injectable } from \"inversify\";\n\nimport { MouseSelectEvent } from \"../AppEventTransformer\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { CodeEditorExtension, EmptyExtension } from \"./CodeEditorExtension\";\nimport { CodeEditorRenderer } from \"./CodeEditorRenderer\";\nimport { CodeEditorTooltipService, TooltipPosition, TooltipReleaser } from \"./CodeEditorTooltipService\";\nimport { EditableTarget } from \"./EditableTarget\";\nimport { EditorGridDimension } from \"./EditorGridRenderer\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { AsyncExceptionTrap } from \"@/lib/ExceptionTrap\";\nimport { Intersection } from \"@/lib/math/Intersection\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\nimport { Camera } from \"@/lib/renderer/Camera\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { SelfBind } from \"@/lib/SelfBind\";\n\nexport enum EditionDirection { Left, Up, Right, Down };\n\n\nexport interface EditableCellRect {\n    lb: vec3;\n    rt: vec3;\n}\n\ninterface TouchBehavior {\n    Touch(cell: Vec2): TouchBehavior;\n}\n\nclass SelectCellBehaiver implements TouchBehavior {\n    constructor(private editableCell: EditableTarget) { }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.Select(cell);\n\n        return this;\n    }\n}\n\nclass SelectCellsRegion implements TouchBehavior {\n    private firstTouch: Vec2;\n\n    constructor(\n        private editableCell: EditableTarget) {\n        this.firstTouch = { ...editableCell.Target.lt };\n    }\n\n    Touch(cell: Vec2): TouchBehavior {\n        this.editableCell.SelectRegion(this.firstTouch, cell);\n\n        return new SelectCellBehaiver(this.editableCell);\n    }\n}\n\n@injectable()\nexport class CodeEditorService {\n    private editDirectionObservable = new ObservableController<EditionDirection>();\n\n    private editableCellLostObservale = new ObservableController<void>();\n\n    private extension: CodeEditorExtension = new EmptyExtension();\n\n    private touchBehavior: TouchBehavior;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(EditableTarget) private editableCell: EditableTarget,\n        @inject(CodeEditorRenderer) private codeEditorRenderer: CodeEditorRenderer,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(CodeEditorTooltipService) private tooltipService: CodeEditorTooltipService) {\n        this.touchBehavior = new SelectCellBehaiver(this.editableCell);\n        this.overlay.EditControls.SelectObservable.Attach(() => this.OnSetEditableRegion());\n        this.overlay.EditControls.CutObservable.Attach(() => this.OnCut());\n        this.overlay.EditControls.CopyObservable.Attach(() => this.OnCopyEditableRegion());\n        this.overlay.EditControls.PasteObservable.Attach(() => this.OnPaste());\n        this.overlay.EditControls.DeleteObservable.Attach(() => this.OnDelete());\n    }\n\n    get EditDirectionObservable(): Observable<EditionDirection> {\n        return this.editDirectionObservable;\n    }\n\n    get EditableCellLostObservable(): Observable<void> {\n        return this.editableCellLostObservale;\n    }\n\n    get EditableCellDirection(): EditionDirection {\n        return this.editableCell.EditionDirection;\n    }\n\n    set EditableCellDirection(direction: EditionDirection) {\n        this.editableCell.EditionDirection = direction;\n\n        this.editDirectionObservable.Notify(direction);\n    }\n\n    LoadExtension(extension: CodeEditorExtension): void {\n        this.extension.Unload();\n\n        this.extension = extension;\n        this.extension.ViewProjection = this.codeEditorRenderer.ViewProjection;\n    }\n\n    UnloadExtension(): void {\n        this.extension.Unload();\n\n        this.extension = new EmptyExtension();\n    }\n\n    EditCell(symbol: string, column: number, row: number): void {\n        this.editorSourceCode.Write({ x: column, y: row }, symbol.charCodeAt(0));\n        this.codeEditorRenderer.Symbol(symbol, column, row);\n    }\n\n    Select(column: number, row: number, style: Rgb): void {\n        this.codeEditorRenderer.Select(column, row, style);\n    }\n\n    SelectRegion(p0: Vec2, p1: Vec2, color: Rgb): void {\n        this.codeEditorRenderer.SelectRegion(p0, p1, color);\n    }\n\n    Unselect(column: number, row: number): void {\n        this.codeEditorRenderer.Unselect(column, row);\n    }\n\n    UnselectRegion(p0: Vec2, p1: Vec2): void {\n        this.codeEditorRenderer.UnselectRegion(p0, p1);\n    }\n\n    Tooltip(column: number, row: number, text: string, position: TooltipPosition): TooltipReleaser {\n        return this.tooltipService.Tooltip(column, row, text, position);\n    }\n\n    HideAllTooltips(): void {\n        this.tooltipService.ReleaseAll();\n    }\n\n    Touch(e: MouseSelectEvent): void {\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        const x = Math.floor(intersection[0] / this.codeEditorRenderer.CellSize);\n        const y = this.codeEditorRenderer.Dimension.Rows - Math.floor(intersection[1] / this.codeEditorRenderer.CellSize) - 1;\n\n        const nextBehaivor = this.touchBehavior.Touch({ x, y });\n\n        if (nextBehaivor !== this.touchBehavior) {\n            this.touchBehavior = nextBehaivor;\n        }\n    }\n\n    Focus(): void {\n        this.editableCell.Focus();\n    }\n\n    Blur(): void {\n        this.editableCell.Blur();\n    }\n\n    SetEditableCell(location: Pointer): void {\n        this.editableCell.Select(location);\n\n        if (!this.IsEditableCellVisible) {\n            this.editableCellLostObservale.Notify();\n        }\n    }\n\n    SetEditableRegion(p0: Vec2, p1: Vec2): void {\n        this.editableCell.SelectRegion(p0, p1);\n    }\n\n    CellInput(e: KeyboardEvent): void {\n        this.editableCell.CellInput(e.key);\n    }\n\n    Clear(): void {\n        this.codeEditorRenderer.Clear();\n    }\n\n    Draw(): void {\n        this.codeEditorRenderer.Draw();\n\n        this.extension.Draw();\n    }\n\n    get Dimension(): EditorGridDimension {\n        return this.codeEditorRenderer.Dimension;\n    }\n\n    get ViewProjection() {\n        return this.codeEditorRenderer.ViewProjection;\n    }\n\n    set ViewProjection(proj: Mat4 | Float32Array) {\n        this.codeEditorRenderer.ViewProjection = proj;\n        this.extension.ViewProjection = proj;\n    }\n\n    get EditableCell(): Vec2 {\n        return this.editableCell.Target.lt;\n    }\n\n    get EditableCellRect(): EditableCellRect {\n        const lb: vec3 = [\n            this.EditableCell.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rt: vec3 = [\n            (this.EditableCell.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.EditableCell.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        return { lb, rt };\n    }\n\n    get IsEditableCellVisible(): boolean {\n        const lb: vec3 = [\n            this.editableCell.Target.lt.x * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y - 1) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const lbNDC = vec3.transformMat4(vec3.create(), lb, this.ViewProjection);\n\n        if (lbNDC[0] < -1 || lbNDC[1] < -1) {\n            return false;\n        }\n\n        const rt: vec3 = [\n            (this.editableCell.Target.lt.x + 1) * this.codeEditorRenderer.CellSize,\n            (this.codeEditorRenderer.Dimension.Rows - this.editableCell.Target.lt.y) * this.codeEditorRenderer.CellSize,\n            0.02];\n\n        const rtNDC = vec3.transformMat4(vec3.create(), rt, this.ViewProjection);\n\n        if (rtNDC[0] > 1 || rtNDC[1] > 1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    get CellSize(): number {\n        return this.codeEditorRenderer.CellSize;\n    }\n\n    private OnSetEditableRegion(): void {\n        this.touchBehavior = new SelectCellsRegion(this.editableCell);\n    }\n\n    private OnCut(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n\n        this.editableCell.Clear();\n    }\n\n    private OnCopyEditableRegion(): void {\n        navigator.clipboard.writeText(this.editableCell.ContentString());\n    }\n\n    private async OnPaste(): Promise<void> {\n        const data = await AsyncExceptionTrap\n            .Try(SelfBind(navigator.clipboard, 'readText'))\n            .CatchValue('');\n\n        if (data.length === 0) {\n            return;\n        }\n\n        if (!this.editableCell.InsertSourceCode(data)) {\n            this.overlay.Snackbar.ShowWarning('Not enough space to insert the fragment')\n        }\n    }\n\n    private OnDelete(): void {\n        this.editableCell.Clear();\n    }\n}\n\nInversify.bind(CodeEditorService).toSelf().inSingletonScope();\n","import { Instruction } from '../instructions/Instruction';\nimport { IOPort } from '../IOPort';\nimport { Memory, Pointer } from '../memory/Memory';\n\nimport { CPU, IllegalInstructionException, PCDirection } from './CPU';\n\nexport class CPUImpl implements CPU {\n  private pcDirection = PCDirection.Right;\n  private pcLocation: Pointer = { x: 0, y: 0 };\n  private stack: number[] = [];\n  private isStringMode = false;\n  private isHalted = false;\n\n  private instructionSet: Instruction[] = Array.from({ length: 128 });\n\n  constructor(\n    private memory: Memory,\n    private io: IOPort,\n    instructions: Instruction[]\n  ) {\n    instructions.forEach(\n      inst => (this.instructionSet[inst.Code.charCodeAt(0)] = inst)\n    );\n  }\n\n  get Stack(): number[] {\n    return this.stack;\n  }\n\n  get PC(): { Location: Pointer; Direction: PCDirection } {\n    return { Location: this.pcLocation, Direction: this.pcDirection };\n  }\n\n  get NextInstructionCode(): string {\n    return String.fromCharCode(this.memory.Read(this.pcLocation));\n  }\n\n  StackPush(value: number): void {\n    this.stack.push(value);\n  }\n\n  StackPop(): number {\n    if (this.stack.length === 0) {\n      return 0;\n    } else {\n      const ret = this.stack[this.stack.length - 1];\n\n      this.stack.pop();\n\n      return ret;\n    }\n  }\n\n  StackDuplicate(): void {\n    if (this.stack.length >= 1) {\n      this.stack.push(this.stack[this.stack.length - 1]);\n    } else {\n      this.stack.push(0, 0);\n    }\n  }\n\n  StackSwap(): void {\n    if (this.stack.length >= 2) {\n      const last = this.stack[this.stack.length - 1];\n      this.stack[this.stack.length - 1] = this.stack[this.stack.length - 2];\n      this.stack[this.stack.length - 2] = last;\n    } else {\n      this.stack.push(\n        ...Array.from({ length: 2 - this.stack.length }, () => 0)\n      );\n    }\n  }\n\n  PCDirection(dir: PCDirection): void {\n    this.pcDirection = dir;\n  }\n\n  ExecuteNext(): void {\n    const instruction = this.memory.Read(this.pcLocation);\n\n    if (this.isStringMode && instruction !== '\"'.charCodeAt(0)) {\n      this.stack.push(instruction);\n    } else if (this.KnownInstruction(instruction)) {\n      this.instructionSet[instruction].Execute(this);\n    } else {\n      throw new IllegalInstructionException(this.pcLocation, instruction, String.fromCharCode(instruction))\n    }\n\n    this.SkipNext();\n  }\n\n  SkipNext(): void {\n    this.pcLocation = this.memory.PointerArithmetics.Move(\n      this.pcLocation,\n      this.pcDirection\n    );\n  }\n\n  StringModeToggle(): void {\n    this.isStringMode = !this.isStringMode;\n  }\n\n  ReadMemory(ptr: Pointer): number {\n    return this.memory.Read(ptr);\n  }\n\n  WriteMemory(ptr: Pointer, value: number): void {\n    this.memory.Write(ptr, value);\n  }\n\n  WriteIO(symbol: string): void {\n    this.io.OutputWrite(symbol);\n  }\n\n  ReadCharacter(): string {\n    return this.io.InputReadCharacter();\n  }\n\n  ReadNumber(): number {\n    return this.io.InputReadNumber();\n  }\n\n  Halt(): void {\n    this.isHalted = true;\n  }\n\n  get IsHalted(): boolean {\n    return this.isHalted;\n  }\n\n  private KnownInstruction(instruction: number): boolean {\n    return this.instructionSet[instruction] !== undefined;\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Add implements Instruction {\n  get Code(): string {\n    return '+';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() + cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Bridge implements Instruction {\n  get Code(): string {\n    return '#';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.SkipNext();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Divide implements Instruction {\n  get Code(): string {\n    return '/';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(Math.trunc(b / a));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class EndProgramm implements Instruction {\n  get Code(): string {\n    return '@';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.Halt();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class GreatherThan implements Instruction {\n  get Code(): string {\n    return '`';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() < cpu.StackPop()));\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class HoriontalIf implements Instruction {\n  get Code(): string {\n    return '_';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      cpu.StackPop() === 0 ? PCDirection.Right : PCDirection.Left\n    );\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputASCII implements Instruction {\n  get Code(): string {\n    return '~';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadCharacter().charCodeAt(0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class InputInteger implements Instruction {\n  get Code(): string {\n    return '&';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.ReadNumber());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryRead implements Instruction {\n  get Code(): string {\n    return 'g';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n\n    cpu.StackPush(cpu.ReadMemory({ x: x, y: y }));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class MemoryWrite implements Instruction {\n  get Code(): string {\n    return 'p';\n  }\n\n  Execute(cpu: CPU): void {\n    const y = cpu.StackPop();\n    const x = cpu.StackPop();\n    const value = cpu.StackPop();\n\n    cpu.WriteMemory({ x: x, y: y }, value);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Modulo implements Instruction {\n  get Code(): string {\n    return '%';\n  }\n\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n\n    cpu.StackPush(b % a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Multiply implements Instruction {\n  get Code(): string {\n    return '*';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(cpu.StackPop() * cpu.StackPop());\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Negation implements Instruction {\n  get Code(): string {\n    return '!';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(+(cpu.StackPop() === 0));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class NoOperation implements Instruction {\n  get Code(): string {\n    return ' ';\n  }\n  Execute(_cpu: CPU): void {}\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionDown implements Instruction {\n  get Code(): string {\n    return 'v';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Down);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionLeft implements Instruction {\n  get Code(): string {\n    return '<';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Left);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRandom implements Instruction {\n  get Code(): string {\n    return '?';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(\n      Math.floor((Math.random() * Object.keys(PCDirection).length) >> 1)\n    );\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionRight implements Instruction {\n  get Code(): string {\n    return '>';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Right);\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PCDirectionUp implements Instruction {\n  get Code(): string {\n    return '^';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(PCDirection.Up);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPop implements Instruction {\n  get Code(): string {\n    return '$';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPop();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintASCII implements Instruction {\n  get Code(): string {\n    return ',';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(String.fromCharCode(cpu.StackPop()));\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class PrintInteger implements Instruction {\n  get Code(): string {\n    return '.';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.WriteIO(cpu.StackPop().toString() + ' ');\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackDuplicate implements Instruction {\n  get Code(): string {\n    return ':';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackDuplicate();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackPushDigit implements Instruction {\n  constructor(private digit: number) {}\n\n  get Code(): string {\n    return this.digit.toString();\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackPush(this.digit);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class StackSwap implements Instruction {\n  get Code(): string {\n    return '\\\\';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StackSwap();\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class Subtract implements Instruction {\n  get Code(): string {\n    return '-';\n  }\n  Execute(cpu: CPU): void {\n    const a = cpu.StackPop();\n    const b = cpu.StackPop();\n    cpu.StackPush(b - a);\n  }\n}\n","import { CPU } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class ToggleStringMode implements Instruction {\n  get Code(): string {\n    return '\"';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.StringModeToggle();\n  }\n}\n","import { CPU, PCDirection } from '../CPU/CPU';\n\nimport { Instruction } from './Instruction';\n\nexport class VerticalIf implements Instruction {\n  get Code(): string {\n    return '|';\n  }\n\n  Execute(cpu: CPU): void {\n    cpu.PCDirection(cpu.StackPop() === 0 ? PCDirection.Down : PCDirection.Up);\n  }\n}\n","export class IOPort {\n  private input: string[] = [];\n\n  private output: string[] = [];\n\n  InputWrite(data: string): void {\n    this.input.push(...data);\n  }\n\n  InputReadCharacter(): string {\n    if (this.input.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.input.shift()!;\n  }\n\n  InputReadNumber(): number {\n    let numberEnd = 0;\n    for (\n      let char = this.input[numberEnd];\n      numberEnd < this.input.length && char >= '0' && char <= '9';\n      ++numberEnd);\n\n    if (numberEnd === 0) {\n      throw new Error('Failed to read number from IO port');\n    }\n\n    return Number.parseInt(this.input.splice(0, numberEnd).join(''));\n  }\n\n  get HasInput(): boolean {\n    return this.input.length > 0;\n  }\n\n  OutputWrite(data: string): void {\n    this.output.push(...data);\n  }\n\n  OutputRead(): string {\n    if (this.output.length === 0) {\n      throw new Error('Failed to read from IO port');\n    }\n\n    return this.output.shift()!;\n  }\n\n  get HasOutput(): boolean {\n    return this.output.length > 0;\n  }\n}\n","import { CPU } from './CPU/CPU';\nimport { CPUImpl } from './CPU/CPUImpl';\nimport { Debugger } from './Debugger';\nimport {\n  Add,\n  Bridge,\n  Divide,\n  EndProgramm,\n  GreatherThan,\n  HoriontalIf,\n  InputASCII,\n  InputInteger,\n  MemoryWrite,\n  Modulo,\n  Multiply,\n  Negation,\n  PCDirectionDown,\n  PCDirectionLeft,\n  PCDirectionRandom,\n  PCDirectionRight,\n  PCDirectionUp,\n  PrintASCII,\n  PrintInteger,\n  StackDuplicate,\n  StackPop,\n  StackPushDigit,\n  StackSwap,\n  Subtract,\n  ToggleStringMode,\n  VerticalIf,\n  MemoryRead,\n  NoOperation\n} from './instructions';\nimport { Instruction } from './instructions/Instruction';\nimport { IOPort } from './IOPort';\nimport { Memory, Pointer } from './memory/Memory';\nimport { MemoryLimit } from './memory/MemoryLimit';\nimport { Profiler } from './Profiler';\n\nexport type MemoryWriteInterceptor = (ptr: Pointer, value: number) => void;\nexport type MemoryInterceptorReleaser = () => void;\n\nclass MemoryWriteInstructionInterceptor implements Instruction {\n  constructor(\n    private origin: MemoryWrite,\n    private interceptor: MemoryWriteInterceptor) { }\n\n  get Code(): string {\n    return this.origin.Code;\n  }\n\n  Execute(cpu: CPU): void {\n    const [value, x, y] = cpu.Stack.slice(-3);\n\n    this.interceptor({ x: x, y: y }, value);\n\n    this.origin.Execute(cpu);\n  }\n}\n\nexport class Befunge {\n  private io: IOPort;\n\n  private cpu: CPU;\n\n  private instructionsExecuted = 0;\n\n  private memoryWriteInterceptors: MemoryWriteInterceptor[] = [];\n\n  constructor(private memoryLimit: MemoryLimit, private memory: Memory) {\n    this.io = new IOPort();\n    this.cpu = new CPUImpl(this.memory, this.io, [\n      new Add(),\n      new Subtract(),\n      new Multiply(),\n      new Divide(),\n      new Modulo(),\n      new Negation(),\n      new GreatherThan(),\n      new PCDirectionRight(),\n      new PCDirectionLeft(),\n      new PCDirectionDown(),\n      new PCDirectionUp(),\n      new PCDirectionRandom(),\n      new HoriontalIf(),\n      new VerticalIf(),\n      new ToggleStringMode(),\n      new StackDuplicate(),\n      new StackSwap(),\n      new StackPop(),\n      new PrintInteger(),\n      new PrintASCII(),\n      new Bridge(),\n      new MemoryWriteInstructionInterceptor(\n        new MemoryWrite(),\n        (ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value)),\n      new MemoryRead(),\n      new InputInteger(),\n      new InputASCII(),\n      new EndProgramm(),\n      new NoOperation(),\n      ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(d => new StackPushDigit(d))\n    ]);\n  }\n\n  LoadExecutable(code: string): void {\n    if (this.IsMemoryLimitDynamic) {\n      const memoryRequirements = Befunge.ExecutableMemoryLimit(code);\n\n      if (\n        memoryRequirements.Width > this.memoryLimit.Width ||\n        memoryRequirements.Height > this.memoryLimit.Height\n      ) {\n        this.memory.Resize(memoryRequirements);\n      }\n    }\n\n    const ptr: Pointer = { x: 0, y: 0 };\n\n    for (const symbol of code) {\n      if (symbol === '\\n') {\n        ptr.x = 0;\n        ++ptr.y;\n      } else {\n        this.memory.Write(ptr, symbol.charCodeAt(0));\n        ++ptr.x;\n      }\n    }\n  }\n\n  SetInput(input: string): void {\n    this.io.InputWrite(input);\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable`.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   */\n  Run(): void {\n    while (!this.cpu.IsHalted) {\n      this.cpu.ExecuteNext();\n    }\n  }\n\n  /**\n   * Execute code loaded by `LoadExecutable` until end or timeout.\n   * Second call to `Run` or `RunFor` with same instance is forbidden, you should create new instance to each execution\n   * @param timeout timeout\n   * @returns true if the program successfully finished, false if it terminated due to the timeout\n   */\n  RunFor(timeout: number): boolean {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    for (this.instructionsExecuted = 0;\n      !this.cpu.IsHalted && (this.instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++this.instructionsExecuted) {\n      this.cpu.ExecuteNext();\n    }\n\n    return this.IsHalted;\n  }\n\n  RunNext(): void {\n    this.cpu.ExecuteNext();\n  }\n\n  CollectOutput(): string {\n    let output = '';\n\n    while (this.io.HasOutput) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  CollectOutputUntil(maxLength: number): string {\n    let output = '';\n\n    for (let readed = 0; this.io.HasOutput && readed < maxLength; ++readed) {\n      output += this.io.OutputRead();\n    }\n\n    return output;\n  }\n\n  AttachDebugger(d: Debugger): void {\n    d.AttachCPU(this.cpu);\n  }\n\n  AttachProfiler(profiler: Profiler): void {\n    profiler.AttachCPU(this.cpu);\n  }\n\n  AddMemoryWriteInterceptor(interceptor: MemoryWriteInterceptor): MemoryInterceptorReleaser {\n    this.memoryWriteInterceptors.push(interceptor);\n\n    return () => {\n      const rmIdx = this.memoryWriteInterceptors.indexOf(interceptor);\n\n      if (rmIdx !== -1) {\n        this.memoryWriteInterceptors.splice(rmIdx, 1);\n      }\n    };\n  }\n\n  private OnMemoryWrite(ptr: Pointer, value: number): void {\n    this.memoryWriteInterceptors.forEach(fn => fn(ptr, value));\n  }\n\n  get NextInstruction() {\n    return this.cpu.NextInstructionCode;\n  }\n\n  get IsHalted(): boolean {\n    return this.cpu.IsHalted;\n  }\n\n  get InstructionsExecuted(): number {\n    return this.instructionsExecuted;\n  }\n\n  private get IsMemoryLimitDynamic(): boolean {\n    return (\n      this.memoryLimit.Width === Number.POSITIVE_INFINITY ||\n      this.memoryLimit.Height === Number.POSITIVE_INFINITY\n    );\n  }\n\n  private static ExecutableMemoryLimit(code: string): MemoryLimit {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n    let rowLength = 0;\n\n    for (const instruction of code) {\n      if (instruction === '\\n') {\n        if (maxRowLength < rowLength) {\n          maxRowLength = rowLength;\n        }\n\n        rowLength = 0;\n        ++maxColumnLength;\n      } else {\n        ++rowLength;\n      }\n    }\n\n    return { Width: maxRowLength, Height: maxColumnLength };\n  }\n}\n","import { CPU, PCDirection } from './CPU/CPU';\nimport { Pointer } from './memory/Memory';\n\nexport type BreakpointReleaser = () => void;\n\nexport interface PcLocationCondition {\n  Location: Pointer;\n  Direction?: PCDirection;\n}\n\ninterface StackCondition {\n  Size?: ValueCondition;\n  Value?: ValueCondition;\n}\n\ninterface ValueCondition {\n  Condition: ComparsionCondition;\n  Value: number;\n}\n\nexport enum ComparsionCondition {\n  Less,\n  LessEqual,\n  Greater,\n  GreaterEqual,\n  Equal\n}\n\nexport interface BreakpointCondition {\n  PC?: PcLocationCondition;\n  Stack?: StackCondition;\n}\n\nexport class Debugger {\n  private target: CPU | null = null;\n\n  private pcLocationBrk = new Map<number, Map<number, BreakpointCondition[]>>();\n  private stackBrk: BreakpointCondition[] = [];\n\n  private noDebug = false;\n\n  AttachCPU(cpu: CPU): void {\n    this.target = cpu;\n  }\n\n  get IsHalted(): boolean {\n    return this.target?.IsHalted ?? true;\n  }\n\n  RunNext(): BreakpointCondition[] {\n    if (!this.target?.IsHalted) {\n      if (this.noDebug) {\n        this.noDebug = false;\n      } else {\n        const triggered = this.BreakpointsCheck();\n\n        if (triggered.length > 0) {\n          this.noDebug = true;\n          return triggered;\n        }\n      }\n\n      this.target?.ExecuteNext();\n    }\n\n    return [];\n  }\n\n  RunFor(timeout: number): BreakpointCondition[] | null {\n    const startTime = Date.now();\n    const instructionsSkipPerTimeoutCheck = 100000;\n\n    let breakpoints: BreakpointCondition[] = [];\n\n    for (let instructionsExecuted = 0;\n      !this.target?.IsHalted &&\n      breakpoints.length === 0 &&\n      (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n      ++instructionsExecuted) {\n      breakpoints = this.RunNext();\n    }\n\n    return breakpoints.length > 0 ? breakpoints : null;\n  }\n\n  SetBreakpoint(brk: BreakpointCondition): BreakpointReleaser {\n    if (brk.PC) {\n      let column = this.pcLocationBrk.get(brk.PC.Location.x);\n\n      if (!column) {\n        column = new Map<number, BreakpointCondition[]>();\n        column.set(brk.PC.Location.y, []);\n\n        this.pcLocationBrk.set(brk.PC.Location.x, column);\n      }\n\n      let row = column.get(brk.PC.Location.y);\n\n      if (row === undefined) {\n        row = [];\n        column.set(brk.PC.Location.y, row);\n      }\n\n      row.push(brk);\n    }\n\n    if (brk.Stack && (brk.Stack.Size || brk.Stack.Value)) {\n      this.stackBrk.push(brk);\n    }\n\n    return () => this.BreakpointReleaser(brk);\n  }\n\n  get PCBreakpoints(): PcLocationCondition[] {\n    return [...this.pcLocationBrk.values()]\n      .flatMap(x => [...x.values()])\n      .flatMap(x => [...x])\n      .map(x => x.PC!);\n  }\n\n  get Stack(): number[] {\n    return this.target?.Stack ?? [];\n  }\n\n  private BreakpointReleaser(brk: BreakpointCondition): void {\n    if (brk.PC) {\n      const column = this.pcLocationBrk.get(brk.PC.Location.x);\n      const brks = column?.get(brk.PC.Location.y);\n\n      if (brks) {\n        if (brks.length === 1) {\n          column?.delete(brk.PC.Location.y);\n        } else {\n          const toRemove = brks.indexOf(brk);\n\n          if (toRemove >= 0) {\n            brks.splice(toRemove, 1);\n          }\n        }\n      }\n    }\n\n    if (brk.Stack) {\n      const toRemove = this.stackBrk.indexOf(brk);\n\n      if (toRemove >= 0) {\n        this.stackBrk.splice(toRemove, 1);\n      }\n    }\n  }\n\n  private BreakpointsCheck(): BreakpointCondition[] {\n    return [...this.BreakpointCheckPC(), ...this.BreakpointCheckStack()];\n  }\n\n  private BreakpointCheckPC(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    const column = this.pcLocationBrk.get(this.target.PC.Location.x);\n\n    if (!column) {\n      return [];\n    }\n\n    const brks = column.get(this.target.PC.Location.y);\n\n    return (\n      brks?.filter(brk => {\n        if (brk) {\n          if (brk.PC?.Direction === undefined) {\n            return true;\n          } else {\n            return brk.PC.Direction === this.target!.PC.Direction;\n          }\n        } else {\n          return false;\n        }\n      }) ?? []\n    );\n  }\n\n  private BreakpointCheckStack(): BreakpointCondition[] {\n    if (this.target === null) {\n      return [];\n    }\n\n    return this.stackBrk.filter(brk => {\n      if (brk.Stack?.Size?.Value !== this.target?.Stack.length) {\n        return false;\n      }\n\n      if (brk.Stack?.Value) {\n        if (this.target?.Stack.length === 0) {\n          return false;\n        }\n\n        const top = this.target!.Stack[this.target!.Stack.length - 1];\n\n        switch (brk.Stack.Value.Condition) {\n          case ComparsionCondition.Equal:\n            return brk.Stack.Value.Value === top;\n          case ComparsionCondition.Less:\n            return brk.Stack.Value.Value < top;\n          case ComparsionCondition.LessEqual:\n            return brk.Stack.Value.Value <= top;\n          case ComparsionCondition.Greater:\n            return brk.Stack.Value.Value > top;\n          case ComparsionCondition.GreaterEqual:\n            return brk.Stack.Value.Value >= top;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n","import { Array2D } from \"../containers/Array2D\";\n\nimport { CPU } from \"./CPU/CPU\";\nimport { MemoryLimit } from \"./memory/MemoryLimit\";\n\nexport class Profiler {\n    private target: CPU | null = null;\n\n    constructor(private memoryLimit: MemoryLimit) { }\n\n    AttachCPU(cpu: CPU): void {\n        this.target = cpu;\n    }\n\n    CellHeatmapFor(timeout: number): Array2D<number> | null {\n        if (this.target === null) {\n            throw new Error('Attempting to gather heatmap without attached any cpu. Call AttachCPU first.');\n        }\n\n        const startTime = Date.now();\n        const instructionsSkipPerTimeoutCheck = 100000;\n\n        const heatmap = Array2D.WithProvider(\n            this.memoryLimit.Width,\n            this.memoryLimit.Height,\n            () => 0);\n\n        for (let instructionsExecuted = 0;\n            !this.target.IsHalted && (instructionsExecuted % instructionsSkipPerTimeoutCheck !== 0 || Date.now() - startTime < timeout);\n            ++instructionsExecuted) {\n            heatmap.Update({\n                column: this.target.PC.Location.x,\n                row: this.target.PC.Location.y\n            },\n                x => x + 1);\n\n            this.target.ExecuteNext();\n        }\n\n\n        return this.target.IsHalted ? heatmap : null;\n    }\n}\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Befunge } from \"@/lib/befunge/Befunge\";\nimport { Debugger } from \"@/lib/befunge/Debugger\";\nimport { Memory } from \"@/lib/befunge/memory/Memory\";\nimport { MemoryLimit } from \"@/lib/befunge/memory/MemoryLimit\";\nimport { Profiler } from \"@/lib/befunge/Profiler\";\n\n@injectable()\nexport class BefungeToolbox {\n    private interpreter!: Befunge;\n    private debugger!: Debugger;\n    private profiler!: Profiler;\n\n    constructor(@inject(AppSettings) private settings: AppSettings) { }\n\n    get Interpreter(): Befunge {\n        return this.interpreter;\n    }\n\n    get Debugger(): Debugger {\n        return this.debugger;\n    }\n\n    get Profiler(): Profiler {\n        return this.profiler;\n    }\n\n    Reset(memoryLimit: MemoryLimit, memory: Memory): void {\n        this.interpreter = new Befunge(memoryLimit, memory);\n\n        this.debugger = new Debugger();\n        this.interpreter.AttachDebugger(this.debugger);\n\n        this.profiler = new Profiler(this.settings.MemoryLimit);\n        this.interpreter.AttachProfiler(this.profiler);\n    }\n}\n\nInversify.bind(BefungeToolbox).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { TooltipPosition } from \"../CodeEditor/CodeEditorTooltipService\";\nimport { PCDirectionCondition } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { BreakpointCondition, BreakpointReleaser, PcLocationCondition } from \"@/lib/befunge/Debugger\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\nimport { Rgb, Vec2 } from \"@/lib/Primitives\";\n\ninterface CellBreakpointController extends PcLocationCondition {\n    releaser: BreakpointReleaser | null;\n}\n\n@injectable()\nexport class DebuggingService {\n    private debugMode = false;\n    private cellBreakpoints: CellBreakpointController[] = [];\n    private activeCellBreakpoints: PcLocationCondition[] = [];\n    private activeBreakpointColor: Rgb = [0.8980392156862745, 0.2235294117647059, 0.20784313725490197];\n    private inactiveBreakpointColor: Rgb = [0.9764705882352941, 0.6588235294117647, 0.1450980392156863];\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Debug.Attach((next: boolean) => this.DebugCodeAction(next));\n        this.overlay.DebugControls.CellBreakopint.Attach((cond: PCDirectionCondition) => this.OnCellBreakpointAction(cond));\n        this.overlay.DebugControls.CellBreakpointDelete.Attach(() => this.OnCellBreakpointDelete());\n    }\n\n    OnSelect(prevEditableCell: Vec2): void {\n        const hasBrk = this.cellBreakpoints\n            .some(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        this.overlay.DebugControls.DeactivateButton = hasBrk;\n\n        if (prevEditableCell.x !== this.codeEditor.EditableCell.x || prevEditableCell.y !== this.codeEditor.EditableCell.y) {\n            if (this.activeCellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.activeBreakpointColor);\n            } else if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n                this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n            }\n        }\n    }\n\n    OnCellInput(prevEditableCell: Vec2): void {\n        if (this.cellBreakpoints.some(brk => brk.Location.x === prevEditableCell.x && brk.Location.y === prevEditableCell.y)) {\n            this.codeEditor.Select(prevEditableCell.x, prevEditableCell.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private RunNext(): void {\n        if (!this.debugMode) {\n            this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n            this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n            this.befungeToolbox.Interpreter.AddMemoryWriteInterceptor((ptr: Pointer, value: number) => this.OnMemoryWrite(ptr, value));\n\n            this.UploadBreakpointsToDebugger();\n\n            this.debugMode = true;\n            this.overlay.DebugControls.DebugMode = true;\n\n            this.overlay.IOControls.Output = '';\n        }\n\n        const debug = this.befungeToolbox.Debugger;\n        const interpreter = this.befungeToolbox.Interpreter;\n\n\n\n        let executionResult: BreakpointCondition[] | null;\n        try {\n            executionResult = debug.RunFor(this.settings.ExecutionTimeout);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            this.Interrupt();\n            return;\n        }\n\n\n        let breakpoints: BreakpointCondition[] = [];\n\n        if (executionResult === null) {\n            if (!debug.IsHalted) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                this.overlay.StackControls.Stack = [];\n            }\n\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.codeEditor.HideAllTooltips();\n        } else {\n            breakpoints = executionResult;\n        }\n\n        if (breakpoints.length > 0) {\n            console.log(breakpoints);\n            this.RestoreCellBreakpointsSelection();\n\n            this.activeCellBreakpoints = [];\n            for (const brk of breakpoints) {\n                if (brk.PC) {\n                    this.activeCellBreakpoints.push(brk.PC);\n                    this.codeEditor.Select(brk.PC.Location.x, brk.PC.Location.y, this.activeBreakpointColor);\n                }\n            }\n\n            this.overlay.StackControls.Stack = debug.Stack;\n            this.overlay.StackControls.ScrollToTop();\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        }\n\n\n        if (debug.IsHalted) {\n            this.debugMode = false;\n            this.overlay.DebugControls.DebugMode = false;\n            this.activeCellBreakpoints = [];\n\n            this.overlay.IOControls.Output += interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n\n            this.RestoreCellBreakpointsSelection();\n\n            this.codeEditor.HideAllTooltips();\n\n            this.overlay.Snackbar.ShowSuccess(`Completed`);\n\n            this.overlay.StackControls.Stack = [];\n        }\n    }\n\n    private Interrupt(): void {\n        this.debugMode = false;\n        this.overlay.DebugControls.DebugMode = false;\n        this.activeCellBreakpoints = [];\n\n        this.RestoreCellBreakpointsSelection();\n\n        this.codeEditor.HideAllTooltips();\n\n        this.overlay.StackControls.Stack = [];\n    }\n\n    private DebugCodeAction(next: boolean): void {\n        next ? this.RunNext() : this.Interrupt();\n    }\n\n    private UploadBreakpointsToDebugger(): void {\n        this.cellBreakpoints.forEach(brk => {\n            brk.releaser = this.SetCellBreakpoint(brk);\n        });\n    }\n\n    private SetCellBreakpoint(brk: PcLocationCondition): BreakpointReleaser {\n        const releaser = this.befungeToolbox.Debugger.SetBreakpoint({ PC: brk });\n\n        this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n\n        return () => {\n            releaser();\n            this.codeEditor.Unselect(brk.Location.x, brk.Location.y);\n        };\n    }\n\n    private OnCellBreakpointAction(cond: PCDirectionCondition): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        const condition: PcLocationCondition = {\n            Location: { ...this.codeEditor.EditableCell },\n            ...cond\n        };\n\n        if (existIdx === -1) {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints.push({ ...condition, releaser });\n\n            this.codeEditor.Select(condition.Location.x, condition.Location.y, this.inactiveBreakpointColor);\n\n            this.overlay.DebugControls.DeactivateButton = true;\n        } else {\n            const releaser = this.debugMode ? this.SetCellBreakpoint(condition) : null;\n            this.cellBreakpoints[existIdx] = { ...condition, releaser };\n        }\n    }\n\n    private OnCellBreakpointDelete(): void {\n        const existIdx = this.cellBreakpoints\n            .findIndex(brk => brk.Location.x === this.codeEditor.EditableCell.x && brk.Location.y === this.codeEditor.EditableCell.y);\n\n        if (existIdx !== -1) {\n            const brkRemove = this.cellBreakpoints[existIdx];\n\n            if (brkRemove.releaser !== null) {\n                brkRemove.releaser();\n            }\n\n            const activeBrkIdx = this.activeCellBreakpoints.findIndex(brk => brk.Location.x === brkRemove.Location.x && brk.Location.y === brkRemove.Location.y);\n\n            if (activeBrkIdx !== -1) {\n                this.activeCellBreakpoints.splice(activeBrkIdx, 1);\n            }\n\n            this.cellBreakpoints.splice(existIdx, 1);\n\n            this.codeEditor.Select(brkRemove.Location.x, brkRemove.Location.y, [0.21568627450980393, 0.2784313725490196, 0.30980392156862746]);\n\n            this.overlay.DebugControls.DeactivateButton = false;\n        }\n    }\n\n    private RestoreCellBreakpointsSelection(): void {\n        for (const brk of this.befungeToolbox.Debugger.PCBreakpoints) {\n            this.codeEditor.Select(brk.Location.x, brk.Location.y, this.inactiveBreakpointColor);\n        }\n    }\n\n    private OnMemoryWrite(ptr: Pointer, value: number): void {\n        this.codeEditor.Tooltip(\n            ptr.x,\n            ptr.y,\n            `${value.toString()}(${String.fromCharCode(value)})`,\n            TooltipPosition.RightTop);\n    }\n}\n\nInversify.bind(DebuggingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class ExecutionService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory\n    ) {\n        this.overlay.DebugControls.Execute.Attach(() => this.Execute());\n    }\n\n    private Execute(): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            if (this.befungeToolbox.Interpreter.RunFor(this.settings.ExecutionTimeout)) {\n                this.overlay.Snackbar.ShowSuccess(`Ok\\nInstructions executed: ${this.befungeToolbox.Interpreter.InstructionsExecuted}`);\n            } else {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n            }\n\n            this.overlay.IOControls.Output = this.befungeToolbox.Interpreter.CollectOutputUntil(this.settings.MaxOutputLength);\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n}\n\nInversify.bind(ExecutionService).toSelf().inSingletonScope();\n","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec2 v_uvCoord;\\nin vec4 v_color;\\n\\nuniform float u_time;\\n\\nout vec4 out_color;\\n\\n// https://thebookofshaders.com/13/\\n\\n// Author @patriciogv - 2015\\n// http://patriciogonzalezvivo.com\\n\\nfloat random(in vec2 _st) {\\n    return fract(sin(dot(_st.xy, vec2(12.9898f, 78.233f))) *\\n        43758.5453123f);\\n}\\n\\n// Based on Morgan McGuire @morgan3d\\n// https://www.shadertoy.com/view/4dS3Wd\\nfloat noise(in vec2 _st) {\\n    vec2 i = floor(_st);\\n    vec2 f = fract(_st);\\n\\n    // Four corners in 2D of a tile\\n    float a = random(i);\\n    float b = random(i + vec2(1.0f, 0.0f));\\n    float c = random(i + vec2(0.0f, 1.0f));\\n    float d = random(i + vec2(1.0f, 1.0f));\\n\\n    vec2 u = f * f * (3.0f - 2.0f * f);\\n\\n    return mix(a, b, u.x) +\\n        (c - a) * u.y * (1.0f - u.x) +\\n        (d - b) * u.x * u.y;\\n}\\n\\n#define NUM_OCTAVES 5\\n\\nfloat fbm(in vec2 _st) {\\n    float v = 0.0f;\\n    float a = 0.364f;\\n    vec2 shift = vec2(100.0f);\\n    // Rotate to reduce axial bias\\n    mat2 rot = mat2(cos(0.5f), sin(0.5f), -sin(0.5f), cos(0.50f));\\n    for(int i = 0; i < NUM_OCTAVES; ++i) {\\n        v += a * noise(_st);\\n        _st = rot * _st * 2.0f + shift;\\n        a *= 0.684f;\\n    }\\n    return v;\\n}\\n\\nvoid main() {\\n    vec2 st = v_uvCoord;\\n    ;\\n    // st += st * abs(sin(u_time*0.1)*3.0);\\n    vec3 color = vec3(0.0f);\\n\\n    vec2 q = vec2(0.f);\\n    q.x = fbm(st + 0.00f * u_time);\\n    q.y = fbm(st + vec2(1.0f));\\n\\n    vec2 r = vec2(0.f);\\n    r.x = fbm(st + 1.0f * q + vec2(1.7f, 9.2f) + 0.15f * u_time);\\n    r.y = fbm(st + 1.0f * q + vec2(8.3f, 2.8f) + 0.126f * u_time);\\n\\n    float f = fbm(st + r);\\n\\n    color = mix(vec3(0.101961f, 0.619608f, 0.666667f), vec3(0.666667f, 0.666667f, 0.498039f), clamp((f * f) * 4.0f, 0.0f, 1.0f));\\n\\n    color = mix(color, vec3(0.990f, 0.976f, 0.986f), clamp(length(q), 0.0f, 1.0f));\\n\\n    color = mix(color, v_color.rgb, clamp(length(r.x), 0.0f, 1.0f));\\n\\n    out_color = vec4((f * f * f + .6f * f * f + .5f * f) * color, v_color.a);\\n}\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { AppSettings } from \"../../AppSettings\";\nimport { InjectionToken } from \"../../InjectionToken\";\n\nimport FHeatmapGrid from './HeatmapGrid.frag';\nimport VHeatmapGrid from './HeatmapGrid.vert';\n\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { EnumSize } from \"@/lib/EnumSize\";\nimport { Rgba, Vec2 } from \"@/lib/Primitives\";\nimport { PrimitiveBuilder } from \"@/lib/renderer/PrimitiveBuilder\";\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\nimport { UV } from \"@/lib/renderer/TextureAtlas\";\nimport { TypeSizeResolver } from \"@/lib/renderer/TypeSizeResolver\";\n\nenum HeatmapCellComponent { X, Y, Fx, Fy, R, G, B };\n\n\nexport class HeatmapGridRenderer extends PrimitivesRenderer {\n    private readonly startTime = Date.now() / 1000;\n\n    constructor(gl: WebGL2RenderingContext, attributes: number[]) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        const gridStride = floatSize * EnumSize(HeatmapCellComponent);\n\n        super(gl,\n            { fragment: FHeatmapGrid, vertex: VHeatmapGrid },\n            [{\n                name: 'a_vertex',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_uvCoord',\n                size: 2,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 0\n            },\n            {\n                name: 'a_color',\n                size: 4,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: gridStride,\n                offset: 2 * floatSize\n            }],\n            { indicesPerPrimitive: 6, basePrimitiveType: gl.TRIANGLES });\n\n        this.UploadAttributes(attributes);\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n\n    Draw(): void {\n        this.shader.SetUniform1f('u_time', Date.now() / 1000 - this.startTime);\n\n        super.Draw();\n    }\n}\n\ntype HeatmapColorInput = Array2D<Rgba>;\n\n@injectable()\nclass HeatmapGridRendererBuilder {\n    public readonly CellSize = 10;\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings\n    ) { }\n\n    Build(heatmap: HeatmapColorInput): HeatmapGridRenderer {\n        const width = this.settings.MemoryLimit.Width * this.CellSize;\n        const height = this.settings.MemoryLimit.Height * this.CellSize;\n        const aspectRatio = width / height;\n        const uvCellSize = { width: this.CellSize / width, height: this.CellSize / height };\n        const vertexList: number[] = [];\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const color: Rgba = heatmap.Get({ column, row: this.settings.MemoryLimit.Height - row - 1 });\n\n                const cell = this.BuildCell(\n                    { x: column * this.CellSize, y: row * this.CellSize },\n                    {\n                        A: { x: column * this.CellSize / width * aspectRatio, y: row * this.CellSize / height },\n                        B: { x: (column * this.CellSize / width + uvCellSize.width) * aspectRatio, y: row * this.CellSize / height + uvCellSize.height }\n                    },\n                    color);\n\n                vertexList.push(...cell);\n            }\n        }\n\n        return new HeatmapGridRenderer(this.gl, vertexList);\n    }\n\n    private BuildCell(\n        position: Vec2,\n        uvCoord: UV,\n        color: Rgba\n    ): number[] {\n        return PrimitiveBuilder.AABBRectangle(\n            position,\n            { width: this.CellSize, height: this.CellSize },\n            [\n                {\n                    LeftBottom: [uvCoord.A.x, uvCoord.A.y],\n                    LeftTop: [uvCoord.A.x, uvCoord.B.y],\n                    RightTop: [uvCoord.B.x, uvCoord.B.y],\n                    RightBottom: [uvCoord.B.x, uvCoord.A.y]\n                },\n                color\n            ]\n        );\n    }\n}\n\nInversify.bind(HeatmapGridRendererBuilder).toSelf().inRequestScope();\n\nexport type HeatMapGridFactory = (heatmap: HeatmapColorInput) => HeatmapGridRenderer;\n\nInversify\n    .bind<interfaces.Factory<HeatMapGridFactory>>(InjectionToken.HeatmapGridRendererFactory)\n    .toFactory<HeatmapGridRenderer, [HeatmapColorInput]>(ctx => (data: HeatmapColorInput) => ctx.container.get(HeatmapGridRendererBuilder).Build(data));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec2 a_vertex;\\nin vec2 a_uvCoord;\\nin vec4 a_color;\\n\\nout vec2 v_uvCoord;\\nout vec4 v_color;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * vec4(a_vertex, 0.1, 1.0);\\n\\n  v_uvCoord = a_uvCoord;\\n  v_color = a_color;\\n}\\n\"","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { HeatMapGridFactory, HeatmapGridRenderer } from \"./HeatMapGridRenderer\";\n\nimport { AppSettings } from \"@/app/AppSettings\";\nimport { CodeEditorExtension } from \"@/app/CodeEditor/CodeEditorExtension\";\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { TooltipPosition, TooltipReleaser } from \"@/app/CodeEditor/CodeEditorTooltipService\";\nimport { InjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { Rgb, Rgba } from \"@/lib/Primitives\";\nimport { Mat4 } from \"@/lib/renderer/ShaderProgram\";\n\ntype HeatmapHitStats = Array2D<number>;\n\n\nclass HeatmapExtension implements CodeEditorExtension {\n    constructor(\n        private heatmapGridRenderer: HeatmapGridRenderer,\n        private tooltipReleasers: TooltipReleaser[]) { }\n\n    Draw(): void {\n        this.heatmapGridRenderer.Draw();\n    }\n\n    Unload(): void {\n        this.heatmapGridRenderer.Dispose();\n        this.tooltipReleasers.forEach(release => release());\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.heatmapGridRenderer.ViewProjection = mat;\n    }\n}\n\n@injectable()\nexport class HeatmapExtensionBuilder {\n    private readonly lowHitsColor: Rgb = [0, 0.5568627450980392, 1];\n    private readonly highHitsColor: Rgb = [1, 0, 0];\n\n    private hitsColorsDiff!: Rgb;\n\n    private maxHits = Number.NEGATIVE_INFINITY;\n\n    private heatmap!: HeatmapHitStats;\n\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(InjectionToken.HeatmapGridRendererFactory) private heatmapGridRendererFactory: HeatMapGridFactory\n    ) { }\n\n    Build(heatmap: HeatmapHitStats): HeatmapExtension {\n        this.heatmap = heatmap;\n\n        this.Setup();\n\n        const releasers = this.DrawHitsOnCell();\n\n        const colors = this.heatmap.Map(x => this.HitsToColor(x));\n\n        const renderer = this.heatmapGridRendererFactory(colors);\n\n        return new HeatmapExtension(renderer, releasers)\n    }\n\n    private HitsToColor(hits: number): Rgba {\n        if (hits === 0) {\n            return [1, 1, 1, 0];\n        }\n\n        const t = hits / this.maxHits;\n\n        return [\n            this.lowHitsColor[0] + this.hitsColorsDiff[0] * t,\n            this.lowHitsColor[1] + this.hitsColorsDiff[1] * t,\n            this.lowHitsColor[2] + this.hitsColorsDiff[2] * t,\n            0.8\n        ]\n    }\n\n    private Setup(): void {\n        this.heatmap.ForEach(x => this.maxHits = Math.max(this.maxHits, x));\n\n        this.hitsColorsDiff = [\n            this.highHitsColor[0] - this.lowHitsColor[0],\n            this.highHitsColor[1] - this.lowHitsColor[1],\n            this.highHitsColor[2] - this.lowHitsColor[2]\n        ];\n    }\n\n    private DrawHitsOnCell(): TooltipReleaser[] {\n        const releasers: TooltipReleaser[] = [];\n\n        for (let row = 0; row < this.settings.MemoryLimit.Height; ++row) {\n            for (let column = 0; column < this.settings.MemoryLimit.Width; ++column) {\n                const hits = this.heatmap.Get({ column, row });\n                if (hits > 0) {\n                    const releaser = this.codeEditor.Tooltip(column, row, hits.toString(), TooltipPosition.LeftBottom);\n\n                    releasers.push(releaser);\n                }\n            }\n        }\n\n        return releasers;\n    }\n}\n\nInversify.bind(HeatmapExtensionBuilder).toSelf().inTransientScope();\n\nexport type HeatmapExtensionFactory = (heatmap: HeatmapHitStats) => HeatmapExtension;\n\nInversify\n    .bind<interfaces.Factory<HeatmapExtensionFactory>>(InjectionToken.HeatmapExtensionFactory)\n    .toFactory<HeatmapExtension, [HeatmapHitStats]>(ctx => (stats: HeatmapHitStats) => ctx.container.get(HeatmapExtensionBuilder).Build(stats));\n","import { inject, injectable } from \"inversify\";\n\nimport { HeatmapExtensionFactory } from \"../AnalysisTools/Heatmap/HeatmapExtension\";\nimport { AppSettings } from \"../AppSettings\";\nimport { BefungeToolbox } from \"../BefungeToolbox\";\nimport { CodeEditorService } from \"../CodeEditor/CodeEditorService\";\nimport { InjectionToken } from \"../InjectionToken\";\nimport { HeatmapToggleButtonState } from \"../Overlay/DebugControls\";\nimport { OverlayService } from \"../Overlay/OverlayService\";\nimport { SourceCodeMemory } from \"../SourceCodeMemory\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { ObservablePriority } from \"@/lib/Observable\";\n\n@injectable()\nexport class ProfillingService {\n    constructor(\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(BefungeToolbox) private befungeToolbox: BefungeToolbox,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(InjectionToken.HeatmapExtensionFactory) private heatmapExtensionFactory: HeatmapExtensionFactory\n    ) {\n        this.overlay.DebugControls.Heatmap.Attach(\n            (shown: HeatmapToggleButtonState) => this.ToggleHeatmap(shown),\n            { priority: ObservablePriority.High });\n    }\n\n    private ToggleHeatmap(feedback: HeatmapToggleButtonState): void {\n        feedback.isShown ? this.BuildHeatmap(feedback) : this.HideHeatmap();\n    }\n\n    private BuildHeatmap(feedback: HeatmapToggleButtonState): void {\n        this.befungeToolbox.Reset(this.settings.MemoryLimit, this.editorSourceCode.Clone());\n\n        this.befungeToolbox.Interpreter.SetInput(this.overlay.IOControls.Input);\n\n        try {\n            const heatmap = this.befungeToolbox.Profiler.CellHeatmapFor(1000);\n\n            if (heatmap === null) {\n                this.overlay.Snackbar.ShowWarning('Terminated due timeout');\n\n                feedback.isShown = false;\n            } else {\n                const extension = this.heatmapExtensionFactory(heatmap);\n\n                this.codeEditor.LoadExtension(extension);\n            }\n        } catch (e) {\n            if (e instanceof Error) {\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            feedback.isShown = false;\n        }\n    }\n\n    private HideHeatmap(): void {\n        this.codeEditor.UnloadExtension();\n    }\n}\n\nInversify.bind(ProfillingService).toSelf().inSingletonScope();\n","import { inject, injectable } from \"inversify\";\n\nimport { DebuggingService } from \"./DebuggingService\";\nimport { ExecutionService } from \"./ExecutionService\";\nimport { ProfillingService } from \"./ProfilingService\";\n\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class CodeExecutionService {\n    constructor(\n        @inject(ExecutionService) private executionService: ExecutionService,\n        @inject(DebuggingService) private debuggingService: DebuggingService,\n        @inject(ProfillingService) private profillingService: ProfillingService\n    ) { }\n\n    get Execution(): ExecutionService {\n        return this.executionService;\n    }\n\n    get Debugging(): DebuggingService {\n        return this.debuggingService;\n    }\n\n    get Profilling(): ProfillingService {\n        return this.profillingService;\n    }\n}\n\nInversify.bind(CodeExecutionService).toSelf().inSingletonScope();\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { CodeEditorService } from \"./CodeEditor/CodeEditorService\";\nimport { CodeExecutionService } from \"./CodeExecution/CodeExecutionService\";\nimport { InjectionToken } from \"./InjectionToken\";\nimport { OverlayService } from \"./Overlay/OverlayService\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { Observable, ObservableController } from \"@/lib/Observable\";\nimport { InputReceiver } from \"@/lib/UI/InputReceiver\";\n\n@injectable()\nexport class CodeEditorServiceInputReceiver implements InputReceiver {\n    private onVanish = new ObservableController<void>();\n\n    constructor(\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService) { }\n\n    OnInput(e: KeyboardEvent): void {\n        const keyCode = e.key.charCodeAt(0);\n\n        if (e.key.length === 1 && keyCode >= ' '.charCodeAt(0) && keyCode <= '~'.charCodeAt(0)) {\n            if (this.overlay.DebugControls.DebugMode) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled during the debugging');\n            } else if (this.overlay.DebugControls.IsHeatmapShown) {\n                this.overlay.Snackbar.ShowInformation('Editing is disabled while heatmap is active');\n            } else {\n                const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n                this.codeEditor.CellInput(e);\n\n                this.codeExecutionService.Debugging.OnCellInput(prevEditableCell);\n            }\n        }\n    }\n\n    Focus(): void {\n        this.codeEditor.Focus();\n    }\n\n    Blur(): void {\n        this.codeEditor.Blur();\n    }\n\n    get OnVanish(): Observable<void> {\n        return this.onVanish;\n    }\n}\n\nInversify.bind(CodeEditorServiceInputReceiver).toSelf().inRequestScope();\n\nexport type CodeEditorServiceInputReceiverFactory = () => CodeEditorServiceInputReceiver;\n\nInversify\n    .bind<interfaces.Factory<CodeEditorServiceInputReceiver>>(InjectionToken.CodeEditorServiceInputReceiverFactory)\n    .toFactory<CodeEditorServiceInputReceiver>(ctx => () => ctx.container.get(CodeEditorServiceInputReceiver));\n","export default \"#version 300 es\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\n\\nvoid main() \\n{\\n      out_color = vec4(0, 0.5686274509803921, 0.9176470588235294, 1);\\n}\\n\"","export default \"#version 300 es\\nprecision mediump float;\\n\\nin vec4 a_vertex;\\n\\nuniform mat4 u_viewProject;\\n\\nvoid main() \\n{\\n  gl_Position = u_viewProject * a_vertex;\\n  gl_PointSize = 10.0;\\n}\\n\"","import FDebugRenderer from './DebugRenderer.frag';\nimport VDebugRenderer from './DebugRenderer.vert';\n\nimport { PrimitivesRenderer } from \"@/lib/renderer/PrimitivesRenderer\";\nimport { Mat4 } from '@/lib/renderer/ShaderProgram';\nimport { TypeSizeResolver } from '@/lib/renderer/TypeSizeResolver';\n\nexport class DebugRenderer extends PrimitivesRenderer {\n    constructor(gl: WebGL2RenderingContext) {\n        const floatSize = TypeSizeResolver.Resolve(gl.FLOAT);\n        \n        super(\n            gl,\n            { vertex: VDebugRenderer, fragment: FDebugRenderer },\n            [{\n                name: 'a_vertex',\n                size: 3,\n                type: gl.FLOAT,\n                normalized: false,\n                stride: 3 * floatSize,\n                offset: 0\n            }],\n            { indicesPerPrimitive: 3, basePrimitiveType: gl.LINES });\n    }\n\n    set ViewProjection(mat: Mat4 | Float32Array) {\n        this.shader.SetUniformMatrix4fv('u_viewProject', mat);\n    }\n}","import { mat4, vec2 } from \"gl-matrix\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\nimport { Camera, Viewport } from \"@/lib/renderer/Camera\";\n\nexport type ViewProjectionFetcher = () => mat4;\n\nexport class SmoothCameraMove implements Effect {\n    private isDone = false;\n\n    private progress = 0;\n\n    private duration = 400;\n\n    constructor(\n        private camera: mat4,\n        private destination: vec2,\n        private viewport: Viewport,\n        private viewProjectionFetcher: ViewProjectionFetcher\n    ) { }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        let fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        if (this.progress > 1) {\n            fract -= this.progress - 1;\n        }\n\n        const movement = vec2.mul(vec2.create(), this.destination, vec2.fromValues(fract, fract));\n\n        const delta = Camera.UnprojectMovement(\n            { x: movement[0], y: -movement[1] },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.viewProjectionFetcher(),\n            this.viewport);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","import { mat4 } from \"gl-matrix\";\n\nimport { ZCameraBoundary } from \"../AppSettings\";\n\nimport { Effect } from \"@/lib/effect/Effect\";\n\nexport class SmoothCameraZoom implements Effect {\n    private progress = 0;\n\n    private duration = 100;\n\n    private distance = 50;\n\n    private isDone = false;\n\n    constructor(\n        private direction: 'in' | 'out',\n        private camera: mat4,\n        private boundary: ZCameraBoundary) {\n    }\n\n    get IsDone(): boolean {\n        return this.isDone;\n    }\n\n    Draw(elapsed: number): void {\n        const fract = elapsed / this.duration;\n\n        this.progress += fract;\n\n        const delta = this.distance * fract * (this.direction === 'in' ? -1 : 1);\n\n        const z = this.camera[14] + delta;\n\n        if (z >= this.boundary.max || z <= this.boundary.min) {\n            this.isDone = true;\n            return;\n        }\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [0, 0, delta]);\n\n        if (this.progress >= 1) {\n            this.isDone = true;\n        }\n    }\n}\n","export class DecodingErrorException extends Error {\n    constructor() { super('Failed to decode shared url') }\n}\n\nexport class BefungeSourceCodeCodec {\n    static Encode(decoded: string): string {\n        return btoa(decoded);\n    }\n\n    static Decode(encoded: string): string {\n        try {\n            return atob(encoded);\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'InvalidCharacterError':\n                        throw new DecodingErrorException();\n                }\n            }\n\n            throw e;\n        }\n    }\n}\n","import { PCDirection } from '../CPU/CPU';\n\nimport { Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ModuloPointerArithmetics implements PointerArithmetics {\n  constructor(private memoryLimit: MemoryLimit) {}\n\n  Move(ptr: Pointer, dir: PCDirection): Pointer {\n    switch (dir) {\n      case PCDirection.Right:\n        return { x: (ptr.x + 1) % this.memoryLimit.Width, y: ptr.y };\n      case PCDirection.Left:\n        return {\n          x: ptr.x === 0 ? this.memoryLimit.Width - 1 : ptr.x - 1,\n          y: ptr.y\n        };\n      case PCDirection.Down:\n        return { x: ptr.x, y: (ptr.y + 1) % this.memoryLimit.Height };\n      case PCDirection.Up:\n        return {\n          x: ptr.x,\n          y: ptr.y === 0 ? this.memoryLimit.Height - 1 : ptr.y - 1\n        };\n    }\n  }\n}\n","import { Memory, Pointer } from './Memory';\nimport { MemoryLimit } from './MemoryLimit';\nimport { ModuloPointerArithmetics } from './ModuloPointerArithmetics';\nimport { PointerArithmetics } from './PointerArithmetics';\n\nexport class ArrayMemory implements Memory {\n  private pointerArithmetics: PointerArithmetics;\n  private memory: Uint8Array;\n\n  constructor(private limit: MemoryLimit) {\n    this.pointerArithmetics = new ModuloPointerArithmetics(limit);\n    this.memory = new Uint8Array(limit.Width * limit.Height);\n\n    const emptyValue = ' '.charCodeAt(0);\n\n    for (let n = 0; n < this.memory.length; ++n) {\n      this.memory[n] = emptyValue;\n    }\n  }\n\n  get PointerArithmetics(): PointerArithmetics {\n    return this.pointerArithmetics;\n  }\n\n  Read(ptr: Pointer): number {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return 0;\n    }\n\n    return this.memory[this.PointerToIndex(ptr)];\n  }\n\n  Write(ptr: Pointer, value: number): void {\n    if (this.IsPointerOutOfBound(ptr)) {\n      return;\n    }\n\n    this.memory[this.PointerToIndex(ptr)] = value;\n  }\n\n  Resize(limit: MemoryLimit): void {\n    const resized = new ArrayMemory(limit);\n\n    this.CopyMemoryTo(resized);\n\n    this.memory = resized.memory;\n    this.limit = limit;\n  }\n\n  Clone(): Memory {\n    const copy = new ArrayMemory(this.limit);\n\n    copy.memory.set(this.memory);\n\n    return copy;\n  }\n\n  private PointerToIndex(ptr: Pointer): number {\n    return ptr.y * this.limit.Width + ptr.x;\n  }\n\n  private IsPointerOutOfBound(ptr: Pointer): boolean {\n    return ptr.x >= this.limit.Width || ptr.y >= this.limit.Height;\n  }\n\n  private CopyMemoryTo(dst: ArrayMemory): void {\n    const copyingWidth = Math.min(this.limit.Width, dst.limit.Width);\n    const copyingHeight = Math.min(this.limit.Height, dst.limit.Height);\n\n    for (let x = 0; x < copyingWidth; ++x) {\n      for (let y = 0; y < copyingHeight; ++y) {\n        const ptr: Pointer = { x: x, y: y };\n\n        dst.Write(ptr, this.Read(ptr));\n      }\n    }\n  }\n}\n","\nexport interface IllegalInstruction {\n    value: number;\n    offset: number;\n}\n\nexport class SourceCodeValidityAnalyser {\n    private static readonly validSymbols = SourceCodeValidityAnalyser.ValidSymbols();\n\n    private sourceCode: string[];\n\n    private sourceCodeLength: number;\n\n    constructor(src: string) {\n        this.sourceCode = [...src].reverse();\n        this.sourceCodeLength = this.sourceCode.length;\n    }\n\n    NextIllegalInstruction(): IllegalInstruction | null {\n        if (this.sourceCode.length === 0) {\n            return null;\n        }\n\n        const illegalInstructionIdx = this.sourceCode\n            .findLastIndex(x => !SourceCodeValidityAnalyser.validSymbols.includes(x.charCodeAt(0)));\n\n        if (illegalInstructionIdx === -1) {\n            this.sourceCode = [];\n\n            return null;\n        }\n\n        const value = this.sourceCode[illegalInstructionIdx].charCodeAt(0);\n\n        this.sourceCode.length = illegalInstructionIdx;\n\n        return { value, offset: this.sourceCodeLength - illegalInstructionIdx + 1 };\n    }\n\n    private static ValidSymbols(): number[] {\n        const start = ' '.charCodeAt(0);\n        const end = '~'.charCodeAt(0);\n\n        return [10, 13, ...Array.from({ length: end - start + 1 }, (_x, n) => n + start)];\n    }\n}\n","import { injectable } from \"inversify\";\n\nimport { Effect } from \"./Effect\";\n\nimport { Inversify } from \"@/Inversify\";\n\nexport enum RegistrationCollisionResolver { Add, Replace, Skip }\n\nexport interface RegistrationPolicy<T> {\n    id: T;\n    rule: RegistrationCollisionResolver;\n}\n\ninterface EffectItem {\n    effect: Effect;\n    policy: RegistrationPolicy<unknown>;\n}\n\n@injectable()\nexport class EffectRunner {\n    private defaultPolicy: RegistrationPolicy<any>;\n    private effects: EffectItem[] = [];\n\n    constructor() {\n        this.defaultPolicy = { id: Symbol('Default policy id'), rule: RegistrationCollisionResolver.Add };\n    }\n\n    Register<T>(effect: Effect, policy: RegistrationPolicy<T> = this.defaultPolicy): void {\n        const item = this.effects.findLast(x => x.policy.id === policy.id);\n\n        if (item === undefined || item.policy.rule === RegistrationCollisionResolver.Add) {\n            this.effects.push({ effect, policy });\n        } else if (item.policy.rule === RegistrationCollisionResolver.Replace) {\n            item.effect = effect;\n        }\n    }\n\n    Draw(elapsed: number): boolean {\n        for (let n = 0; n < this.effects.length; ++n) {\n            const item = this.effects[n];\n\n            if (item.effect.IsDone) {\n                this.effects.splice(n--, 1);\n            } else {\n                item.effect.Draw(elapsed);\n            }\n        }\n\n        return this.effects.length > 0;\n    }\n}\n\nInversify.bind(EffectRunner).toSelf().inSingletonScope();\n","import { vec2 } from \"gl-matrix\";\n\nimport { ArrayHelper } from \"../ArrayHelper\";\nimport { Vec2 } from \"../Primitives\";\n\nimport { MathUtil } from \"./MathUtil\";\n\nexport interface Rectangle {\n    lb: Vec2;\n    rt: Vec2;\n}\n\ninterface DistanceDiffResult {\n    distance: number;\n    diff: vec2;\n}\n\nexport class Transformation {\n    static MoveRectangleToPlaceInsideRectangle(movable: Rectangle, destination: Rectangle): Vec2 {\n        const betweenByX = MathUtil.Between(movable.lb.x, destination.lb.x, destination.rt.x) &&\n            MathUtil.Between(movable.rt.x, destination.lb.x, destination.rt.x);\n\n        const betweenByY = MathUtil.Between(movable.lb.y, destination.lb.y, destination.rt.y) &&\n            MathUtil.Between(movable.rt.y, destination.lb.y, destination.rt.y);\n\n        if (betweenByX && betweenByY) return { x: 0, y: 0 };\n\n        if (betweenByX) {\n            const distanceToTop = Math.abs(movable.rt.y - destination.rt.y);\n            const distanceToBottom = Math.abs(movable.lb.y - destination.lb.y);\n            return {\n                x: 0,\n                y: distanceToTop < distanceToBottom ? -distanceToTop : distanceToBottom\n            };\n        }\n\n        if (betweenByY) {\n            const distanceToLeft = Math.abs(movable.lb.x - destination.lb.x);\n            const distanceToRight = Math.abs(movable.rt.x - destination.rt.x);\n            return {\n                x: distanceToLeft < distanceToRight ? distanceToLeft : -distanceToRight,\n                y: 0\n            };\n        }\n\n        const corners = [\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.lb.y),\n                vec2.fromValues(destination.lb.x, destination.lb.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.lb.x, movable.rt.y),\n                vec2.fromValues(destination.lb.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.rt.y),\n                vec2.fromValues(destination.rt.x, destination.rt.y)),\n            Transformation.DistanceDiff(\n                vec2.fromValues(movable.rt.x, movable.lb.y),\n                vec2.fromValues(destination.rt.x, destination.lb.y))\n        ];\n\n        const closest = ArrayHelper.Min(corners, (a, b) => a.distance < b.distance);\n\n        return { x: closest.diff[0], y: closest.diff[1] };\n    }\n\n    private static DistanceDiff(a: vec2, b: vec2): DistanceDiffResult {\n        return {\n            distance: vec2.distance(a, b),\n            diff: vec2.sub(vec2.create(), b, a)\n        };\n    }\n}\n","import { Observable } from \"../Observable\";\n\nexport interface InputReceiver {\n    OnVanish: Observable<void>;\n    OnInput(e: KeyboardEvent): void;\n    Focus(): void;\n    Blur(): void;\n}\n\nexport function IsInputReceiver(x: any): x is InputReceiver {\n    return typeof x === 'object' && 'OnInput' in x;\n}\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n\n@injectable()\nexport class EditCellCommand implements Command {\n    private location: Pointer = { x: -1, y: -1 };\n\n    private oldValue = '';\n\n    private newValue = '';\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellCommandFactory>): void {\n        [{ ...this.location }, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.codeEditorService.EditCell(this.newValue, this.location.x, this.location.y);\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.codeEditorService.EditCell(this.oldValue, this.location.x, this.location.y);\n\n        this.codeEditorService.SetEditableCell(this.location);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Location(): Pointer {\n        return this.location;\n    }\n\n    get OldValue(): string {\n        return this.oldValue;\n    }\n\n    get NewValue(): string {\n        return this.newValue;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellCommand).toSelf().inTransientScope();\n\nexport type EditCellCommandFactory = (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellCommand>>(AppCommandInjectionToken.EditCellCommandFactory)\n    .toFactory<EditCellCommand, Parameters<EditCellCommandFactory>>(ctx => (location: Pointer, oldValue: string, newValue: string, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellCommand);\n        instance.Initialize(location, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { EditCellCommand } from \"../EditCellCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellCommand): void {\n        const codeFlowEditDirection = this.FollowCodeFlowHelper(target);\n        if (target.EditDirection !== codeFlowEditDirection) {\n            this.codeEditorService.EditableCellDirection = codeFlowEditDirection;\n        }\n\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target, codeFlowEditDirection));\n    }\n\n    private GetNextEditableCell(target: EditCellCommand, overriddenDirection: EditionDirection): Pointer {\n        const nextEditableCell: Pointer = { ...target.Location };\n\n        switch (overriddenDirection) {\n            case EditionDirection.Left:\n                nextEditableCell.x = target.Location.x === 0 ?\n                    this.codeEditorService.Dimension.Columns - 1 :\n                    target.Location.x - 1;\n                break;\n            case EditionDirection.Up:\n                nextEditableCell.y = target.Location.y === 0 ?\n                    this.codeEditorService.Dimension.Rows - 1 :\n                    target.Location.y - 1;\n                break;\n            case EditionDirection.Right:\n                nextEditableCell.x = target.Location.x === this.codeEditorService.Dimension.Columns - 1 ?\n                    0 :\n                    target.Location.x + 1;\n                break;\n            case EditionDirection.Down:\n                nextEditableCell.y = target.Location.y === this.codeEditorService.Dimension.Rows - 1 ?\n                    0 :\n                    target.Location.y + 1;\n                break;\n        }\n\n        return nextEditableCell;\n    }\n\n    private FollowCodeFlowHelper(target: EditCellCommand): EditionDirection {\n        if (target.NewValue === '<') {\n            return EditionDirection.Left;\n        } else if (target.NewValue === '^') {\n            return EditionDirection.Up;\n        } else if (target.NewValue === '>') {\n            return EditionDirection.Right;\n        } else if (target.NewValue === 'v') {\n            return EditionDirection.Down;\n        }\n\n        return target.EditDirection;\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport { Command } from \"../Command\";\n\nimport { PostAction } from \"./PostActions/PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditableRegion } from \"@/app/CodeEditor/EditableTarget\";\nimport { AppCommandInjectionToken } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Array2D } from \"@/lib/containers/Array2D\";\nimport { MathUtil } from \"@/lib/math/MathUtil\";\n\nexport type PostActionEditablePosition = 'next' | 'left_top' | 'right_bottom';\n\n@injectable()\nexport class EditCellsRegionCommand implements Command {\n    private region: EditableRegion = {\n        lt: { x: -1, y: -1 },\n        rb: { x: -1, y: -1 }\n    };\n\n    private oldValue!: Array2D<number>;\n\n    private newValue!: Array2D<number>;\n\n    private editDirection = EditionDirection.Right;\n\n    private postAction!: PostAction;\n\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Initialize(...args: Parameters<EditCellsRegionCommandFactory>): void {\n        const region = MathUtil.Extremum([args[0].lt, args[0].rb]);\n        this.region.lt = region.min;\n        this.region.rb = region.max;\n\n        [, this.oldValue, this.newValue, this.editDirection, this.postAction] = args;\n    }\n\n    Apply(): void {\n        this.newValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.postAction.Apply(this);\n    }\n\n    Undo(): void {\n        this.oldValue\n            .ForEach((x, idx) => this.codeEditorService.EditCell(String.fromCharCode(x), this.region.lt.x + idx.column, this.region.lt.y + idx.row));\n\n        this.codeEditorService.SetEditableCell(this.region.lt);\n        this.codeEditorService.EditableCellDirection = this.editDirection;\n    }\n\n    get Region(): EditableRegion {\n        return this.region;\n    }\n\n    get EditDirection(): EditionDirection {\n        return this.editDirection;\n    }\n}\n\nInversify.bind(EditCellsRegionCommand).toSelf().inTransientScope();\n\nexport type EditCellsRegionCommandFactory = (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => Command;\n\nInversify\n    .bind<interfaces.Factory<EditCellsRegionCommand>>(AppCommandInjectionToken.EditCellsRegionFactory)\n    .toFactory<EditCellsRegionCommand, Parameters<EditCellsRegionCommandFactory>>(ctx => (region: EditableRegion, oldValue: Array2D<number>, newValue: Array2D<number>, editDirection: EditionDirection, postAction: PostAction) => {\n        const instance = ctx.container.get(EditCellsRegionCommand);\n        instance.Initialize(region, oldValue, newValue, editDirection, postAction);\n\n        return instance;\n    });\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService, EditionDirection } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\nimport { Pointer } from \"@/lib/befunge/memory/Memory\";\n\n@injectable()\nexport class MoveNextAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(this.GetNextEditableCell(target));\n    }\n\n    private GetNextEditableCell(target: EditCellsRegionCommand): Pointer {\n        switch (target.EditDirection) {\n            case EditionDirection.Left:\n                {\n                    const x = target.Region.lt.x === 0 ?\n                        this.codeEditorService.Dimension.Columns - 1 :\n                        target.Region.lt.x - 1;\n\n                    return { x, y: target.Region.lt.y };\n                }\n            case EditionDirection.Up:\n                {\n                    const y = target.Region.lt.y === 0 ?\n                        this.codeEditorService.Dimension.Rows - 1 :\n                        target.Region.lt.y - 1;\n\n                    return { x: target.Region.lt.x, y };\n                }\n            case EditionDirection.Right:\n                {\n                    const x = target.Region.rb.x === this.codeEditorService.Dimension.Columns - 1 ?\n                        0 :\n                        target.Region.rb.x + 1;\n\n                    return { x, y: target.Region.rb.y };\n                }\n            case EditionDirection.Down:\n                {\n                    const y = target.Region.rb.y === this.codeEditorService.Dimension.Rows - 1 ?\n                        0 :\n                        target.Region.rb.y + 1;\n\n                    return { x: target.Region.rb.x, y };\n                }\n        }\n    }\n}\n\nInversify.bind(MoveNextAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<MoveNextAction>>(EditCellsRegionCommandPostAction.MoveNext)\n    .toAutoFactory(MoveNextAction);\n","import { inject, injectable, interfaces } from \"inversify\";\n\nimport type { EditCellsRegionCommand } from \"../EditCellsRegionCommand\";\n\nimport { PostAction } from \"./PostAction\";\n\nimport { CodeEditorService } from \"@/app/CodeEditor/CodeEditorService\";\nimport { EditCellsRegionCommandPostAction } from \"@/app/InjectionToken\";\nimport { Inversify } from \"@/Inversify\";\n\n@injectable()\nexport class StayLeftTopAction implements PostAction {\n    constructor(@inject(CodeEditorService) private codeEditorService: CodeEditorService) { }\n\n    Apply(target: EditCellsRegionCommand): void {\n        this.codeEditorService.SetEditableCell(target.Region.lt);\n    }\n}\n\nInversify.bind(StayLeftTopAction).toSelf().inTransientScope();\n\nInversify\n    .bind<interfaces.Factory<StayLeftTopAction>>(EditCellsRegionCommandPostAction.StayLeftTop)\n    .toAutoFactory(StayLeftTopAction);\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable, named } from 'inversify';\n\nimport { AppEventTransformer, MouseMovementEvent, MouseSelectEvent } from './AppEventTransformer';\nimport { AppSettings } from './AppSettings';\nimport { CodeEditorService } from './CodeEditor/CodeEditorService';\nimport { CodeEditorServiceInputReceiverFactory } from './CodeEditorServiceInputReceiver';\nimport { CodeExecutionService } from './CodeExecution/CodeExecutionService';\nimport { DebugRenderer } from './DebugRenderer';\nimport { SmoothCameraMove } from './Effects/SmoothCameraMove';\nimport { SmoothCameraZoom } from './Effects/SmoothCameraZoom';\nimport { AppHistory } from './History/AppHistory';\nimport { InjectionToken, UILabelRendererTargetName } from './InjectionToken';\nimport { HeatmapToggleButtonState } from './Overlay/DebugControls';\nimport { OverlayService } from './Overlay/OverlayService';\nimport { SnackbarControls } from './Overlay/SnackbarControls';\nimport { SourceCodeMemory } from './SourceCodeMemory';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport { ArrayMemory } from '@/lib/befunge/memory/ArrayMemory';\nimport { SourceCodeValidityAnalyser } from '@/lib/befunge/SourceCodeValidityAnalyser';\nimport { AsyncConstructable, AsyncConstructorActivator } from '@/lib/DI/AsyncConstructorActivator';\nimport { EffectRunner, RegistrationCollisionResolver } from '@/lib/effect/EffectRunner';\nimport { Intersection } from '@/lib/math/Intersection';\nimport { MathUtil } from '@/lib/math/MathUtil';\nimport { Transformation } from '@/lib/math/Transformation';\nimport { ObserverDetacher } from '@/lib/Observable';\nimport { Vec2 } from '@/lib/Primitives';\nimport { Camera } from '@/lib/renderer/Camera';\nimport { InputReceiver, IsInputReceiver } from '@/lib/UI/InputReceiver';\nimport { UILabelRenderer } from '@/lib/UI/UILabel/UILabelRenderer';\nimport './History/Commands';\nimport router from '@/router';\n\n\nasync function Delay(delay: number): Promise<void> {\n    return new Promise(ok => setTimeout(ok, delay));\n}\n\n@injectable()\nexport class AppService extends AppEventTransformer implements AsyncConstructable {\n    private isRunning = true;\n\n    private projection!: mat4;\n    private camera: mat4;\n\n    private touchZoomStartZ = 0;\n\n    private inFocusOnVanishReleaser: ObserverDetacher;\n    private inFocus: InputReceiver;\n\n    private debugRenderer: DebugRenderer;\n    private debugPoints: number[] = [5, 5, 0.2, 0, 0, 0];\n\n    private openedFilename: string | null = null;\n\n    private lastFrameTime = Date.now();\n\n    constructor(\n        @inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext,\n        @inject(AppSettings) private settings: AppSettings,\n        @inject(EffectRunner) private effectRunner: EffectRunner,\n        @inject(OverlayService) private overlay: OverlayService,\n        @inject(CodeEditorService) private codeEditor: CodeEditorService,\n        @inject(SourceCodeMemory) private editorSourceCode: SourceCodeMemory,\n        @inject(AppHistory) private history: AppHistory,\n        @inject(CodeExecutionService) private codeExecutionService: CodeExecutionService,\n        @inject(UILabelRenderer) @named(UILabelRendererTargetName.Perspective) private perspectiveLabelRenderer: UILabelRenderer,\n        @inject(InjectionToken.CodeEditorServiceInputReceiverFactory) private codeEditorServiceInputReceiverFactory: CodeEditorServiceInputReceiverFactory) {\n        super();\n\n        this.camera = mat4.translate(\n            mat4.create(),\n            mat4.create(),\n            [0, 0, this.settings.ZCameraBoundary.min + (this.settings.ZCameraBoundary.max - this.settings.ZCameraBoundary.min) * 0.75]);\n\n        gl.clearColor(1, 1, 1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.BuildProjection();\n        this.FocusCameraAtEditor();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n\n        this.inFocus = this.codeEditorServiceInputReceiverFactory();\n        this.inFocus.Focus();\n        this.inFocusOnVanishReleaser = this.inFocus.OnVanish.Attach(() => 0);\n\n        this.debugRenderer = new DebugRenderer(gl);\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n\n        const label = this.perspectiveLabelRenderer.Create({ x: 0, y: 0 }, 499, 'TESTING (d) \\n 1234567890', 8, null);\n        label.Scale = 0.2;\n        const Debug = async () => {\n            const text = 'Hello world! 1234567890$@';\n\n            for (let n = 0; n < text.length; ++n) {\n\n                this.codeEditor.EditCell(text[n], n, 1);\n\n                await Delay(10);\n            }\n\n            const startCode = ' '.charCodeAt(0);\n            const endCode = '~'.charCodeAt(0);\n            const startRow = 3;\n            for (let n = 0; n < endCode - startCode; ++n) {\n                this.codeEditor.EditCell(String.fromCharCode(n + startCode), n % 80, startRow + Math.floor(n / 80));\n\n                await Delay(10);\n            }\n\n            let x = true;\n            while (x) {\n                for (let n = 0; n < 80; ++n) {\n                    this.codeEditor.Select(n, 6, [0, 0, n / 80]);\n\n                    await Delay(50);\n                }\n\n                /* for (let n = 79; n >= 0; --n) {\n                    this.codeEditorRenderer.Unselect(n, 6);\n\n                    await Delay(50);\n                } */\n                x = false;\n            }\n        }\n\n        //Debug();\n    }\n\n    async AsyncConstructor(): Promise<void> {\n        this.overlay.EditDirectionControls.EditDirectionObservable.Attach(dir => this.codeEditor.EditableCellDirection = dir);\n        this.codeEditor.EditDirectionObservable.Attach(dir => this.overlay.EditDirectionControls.ForceEditDirection(dir));\n        this.codeEditor.EditableCellLostObservable.Attach(() => this.FollowEditableCell());\n\n        this.overlay.FileControls.OpenFromDiskObservable.Attach(() => this.OpenFileFromDisk());\n        this.overlay.FileControls.SaveToDiskObservable.Attach(() => this.SaveSourceToDisk());\n        this.overlay.FileControls.ShareObservable.Attach(() => this.ShareSourceCode());\n        this.overlay.FileControls.OpenSettingsObservable.Attach(() => this.OpenSettings());\n\n        this.overlay.HistoryControls.UndoObservable.Attach(() => this.history.Undo());\n        this.overlay.HistoryControls.RedoObservable.Attach(() => this.history.Redo());\n\n        this.overlay.DebugControls.Heatmap.Attach(feedback => this.ControlsResponseToHeatmapActivation(feedback));\n\n        this.history.UpdateObservable.Attach(() => this.OnSourceCodeChanged());\n        this.Start();\n    }\n\n    Resize(): void {\n        this.settings.ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        this.BuildProjection();\n        this.overlay.Resize();\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnCameraMove(e: MouseMovementEvent): void {\n        const delta = Camera.UnprojectMovement(\n            { x: e.movementX, y: e.movementY },\n            { a: 0, b: 0, c: 1, d: 0 },\n            this.ViewProjection,\n            this.gl.canvas);\n\n        mat4.translate(\n            this.camera,\n            this.camera,\n            [delta.x, delta.y, 0]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnSelect(e: MouseSelectEvent): void {\n        const touchResult = this.overlay.Touch(e);\n\n        if (touchResult === false) {\n            this.SwitchFocus(this.codeEditorServiceInputReceiverFactory());\n            const prevEditableCell = { ...this.codeEditor.EditableCell };\n\n            this.codeEditor.Touch(e);\n\n            this.codeExecutionService.Debugging.OnSelect(prevEditableCell);\n        } else if (IsInputReceiver(touchResult)) {\n            this.SwitchFocus(touchResult);\n        }\n\n        const posNear = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ x: e.offsetX, y: e.offsetY, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        this.debugPoints.push(posNear[0], posNear[1], posNear[2], intersection[0], intersection[1], intersection[2]);\n\n        this.debugRenderer.UploadAttributes(this.debugPoints);\n    }\n\n    OnStepZoom(e: WheelEvent): void {\n        const smoothCameraZoomEffect = new SmoothCameraZoom(\n            e.deltaY < 0 ? 'in' : 'out',\n            this.camera,\n            this.settings.ZCameraBoundary);\n\n        this.effectRunner.Register(\n            smoothCameraZoomEffect,\n            { id: 'camera_zoom', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    OnTouchZoomStart(): void {\n        this.touchZoomStartZ = this.camera[14];\n    }\n\n    OnTouchZoom(zoom: number): void {\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12], this.camera[13], MathUtil.Clamp(this.touchZoomStartZ * zoom, this.settings.ZCameraBoundary.min, this.settings.ZCameraBoundary.max)]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.debugRenderer.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n\n    OnKeyDown(e: KeyboardEvent): void {\n        this.inFocus.OnInput(e);\n    }\n\n    private BuildProjection(): void {\n        this.settings.AspectRatio = this.gl.canvas.width / this.gl.canvas.height;\n\n        this.projection = mat4.perspective(\n            mat4.create(),\n            this.settings.Fovy,\n            this.settings.AspectRatio,\n            this.settings.ZNear,\n            this.settings.ZFar);\n    }\n\n    private get ViewProjection(): mat4 {\n        const view = mat4.invert(mat4.create(), this.camera);\n        return mat4.mul(mat4.create(), this.projection, view);\n    }\n\n    public Dispose(): void {\n        this.isRunning = false;\n    }\n\n    private Start(): void {\n        requestAnimationFrame(() => this.DrawFrame(Date.now() - this.lastFrameTime));\n    }\n\n    private DrawFrame(elapsed: number): void {\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n\n        if (this.effectRunner.Draw(elapsed)) {\n            this.codeEditor.ViewProjection = this.ViewProjection;\n            this.debugRenderer.ViewProjection = this.ViewProjection;\n            this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n        }\n\n        this.codeEditor.Draw();\n        this.perspectiveLabelRenderer.Draw();\n        //this.debugRenderer.Draw();\n\n        this.gl.clear(this.gl.DEPTH_BUFFER_BIT);\n\n        this.overlay.Draw();\n\n        if (this.isRunning) {\n            const now = Date.now();\n            const elapsed = now - this.lastFrameTime;\n            requestAnimationFrame(() => this.DrawFrame(elapsed))\n            this.lastFrameTime = now;\n        }\n    }\n\n    private async OpenFileFromDisk(): Promise<void> {\n        let sourceCode = '';\n\n        try {\n            const [fileHandle] = await window.showOpenFilePicker({ multiple: false });\n\n            if (fileHandle.kind !== \"file\") {\n                return;\n            }\n            this.openedFilename = fileHandle.name;\n            const file = await fileHandle.getFile();\n\n            sourceCode = await file.text();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n\n            return;\n        }\n\n\n        const validator = new SourceCodeValidityAnalyser(sourceCode);\n\n        const firstProblem = validator.NextIllegalInstruction();\n\n        if (firstProblem !== null) {\n            let remainingProblems = 0;\n\n            for (; validator.NextIllegalInstruction(); ++remainingProblems);\n\n            let problemMsg = `File contains illegal symbol '${firstProblem.value}' at ${firstProblem.offset}`;\n\n            if (remainingProblems > 0) {\n                problemMsg += ` and ${remainingProblems} more`;\n            }\n\n            this.overlay.Snackbar\n                .ShowError(problemMsg);\n\n            return;\n        }\n\n        this.LoadSourceCodeToEditor(sourceCode);\n\n        this.history.Reset();\n        router.replace({ name: 'CodeEditor' });\n\n        this.FocusCameraAtEditor();\n    }\n\n    private async SaveSourceToDisk(): Promise<void> {\n        try {\n            const fileHandle = await window.showSaveFilePicker({ suggestedName: this.openedFilename ?? '' });\n\n            const stream = await fileHandle.createWritable();\n\n            await stream.write(this.SourceCodeString());\n\n            await stream.close();\n        } catch (e) {\n            if (e instanceof DOMException) {\n                switch (e.name) {\n                    case 'AbortError':\n                        return;\n                }\n\n                this.overlay.Snackbar.ShowError(e.message)\n            }\n        }\n    }\n\n    private SourceCodeString(): string {\n        let sourceString = '';\n        for (let y = 0; y < this.settings.MemoryLimit.Height; ++y) {\n            let line = '';\n\n            for (let x = 0; x < this.settings.MemoryLimit.Width; ++x) {\n                line += String.fromCharCode(this.editorSourceCode.Read({ x, y }));\n            }\n\n            sourceString += line.trimEnd() + '\\n';\n        }\n\n        return sourceString;\n    }\n\n    private ShareSourceCode(): void {\n        const encoded = BefungeSourceCodeCodec.Encode(this.SourceCodeString());\n\n        router.replace({ name: 'Share', params: { encoded } });\n    }\n\n    private OpenSettings(): void {\n        console.log('Open settings');\n    }\n\n    LoadSourceCodeToEditor(sourceCode: string): void {\n        this.ResetSourceCodeEditor();\n\n        const linesOfCode = sourceCode.split(/\\r?\\n/);\n\n        for (let row = 0; row < linesOfCode.length; ++row) {\n            const line = linesOfCode[row];\n            for (let column = 0; column < line.length; ++column) {\n                this.codeEditor.EditCell(line[column], column, row);\n            }\n        }\n\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    private OnSourceCodeChanged(): void {\n        this.overlay.FileControls.ShareDisabled = this.editorSourceCode.Empty;\n    }\n\n    get Snackbar(): SnackbarControls {\n        return this.overlay.Snackbar;\n    }\n\n    private FollowEditableCell(): void {\n        const cellRect = this.codeEditor.EditableCellRect;\n        const lbNDC = vec3.transformMat4(vec3.create(), cellRect.lb, this.ViewProjection);\n        const rtNDC = vec3.transformMat4(vec3.create(), cellRect.rt, this.ViewProjection);\n\n        const ndcDiagonal = vec3.sub(vec3.create(), rtNDC, lbNDC);\n        const ndcStickToEdgeMovement = Transformation.MoveRectangleToPlaceInsideRectangle(\n            { lb: { x: lbNDC[0], y: lbNDC[1] }, rt: { x: rtNDC[0], y: rtNDC[1] } },\n            { lb: { x: -1, y: -1 }, rt: { x: 1, y: 1 } });\n\n        const finalMovement = vec2.fromValues(ndcStickToEdgeMovement.x, ndcStickToEdgeMovement.y);\n\n        if (ndcStickToEdgeMovement.x > 0) {\n            const ndcDistanceToLeft = ndcDiagonal[0] * this.codeEditor.EditableCell.x;\n            finalMovement[0] += Math.min(ndcDistanceToLeft, 1);\n        } else if (ndcStickToEdgeMovement.x < 0) {\n            const ndcDistanceToRight = ndcDiagonal[0] * (this.settings.MemoryLimit.Width - this.codeEditor.EditableCell.x - 1);\n            finalMovement[0] -= Math.min(ndcDistanceToRight, 1);\n        }\n\n        if (ndcStickToEdgeMovement.y > 0) {\n            const ndcDistanceToBottom = ndcDiagonal[1] * (this.settings.MemoryLimit.Height - this.codeEditor.EditableCell.y - 1);\n            finalMovement[1] += Math.min(ndcDistanceToBottom, 1);\n        } else if (ndcStickToEdgeMovement.y < 0) {\n            const ndcDistanceToTop = ndcDiagonal[1] * this.codeEditor.EditableCell.y;\n            finalMovement[1] -= Math.min(ndcDistanceToTop, 1);\n        }\n\n\n        const movement: vec2 = [\n            finalMovement[0] * this.gl.canvas.width / 2,\n            finalMovement[1] * this.gl.canvas.height / 2\n        ];\n\n        const effect = new SmoothCameraMove(\n            this.camera,\n            movement,\n            this.gl.canvas,\n            () => this.ViewProjection);\n\n        this.effectRunner.Register(\n            effect,\n            { id: 'follow_editable_cell', rule: RegistrationCollisionResolver.Replace });\n    }\n\n    private ResetSourceCodeEditor(): void {\n        this.editorSourceCode.Initialize(ArrayMemory, this.settings.MemoryLimit);\n        this.codeEditor.Clear();\n    }\n\n    private SwitchFocus(component: InputReceiver): void {\n        this.inFocus.Blur();\n        this.inFocusOnVanishReleaser();\n\n        this.inFocus = component;\n        this.inFocus.Focus();\n        this.inFocus.OnVanish.Attach(() => this.SwitchFocus(this.codeEditorServiceInputReceiverFactory()));\n    }\n\n    private ControlsResponseToHeatmapActivation(feedback: HeatmapToggleButtonState): void {\n        this.overlay.FileControls.OpenFromDiskDisabled = feedback.isShown;\n\n        feedback.isShown ?\n            this.overlay.HistoryControls.Lock() :\n            this.overlay.HistoryControls.Unlock();\n\n        this.overlay.EditControls.Disable = feedback.isShown;\n    }\n\n    private FocusCameraAtEditor(): void {\n        const uiLeftTopEditorGridPosition = this.overlay.EditDirectionControls.Boundaries.rt;\n        const margin = 10;\n        const wndLeftTopEditorGridPosition: Vec2 = {\n            x: uiLeftTopEditorGridPosition.x + margin,\n            y: this.settings.ViewDimension.Height - uiLeftTopEditorGridPosition.y\n        };\n\n        const posNear = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 0 }, this.ViewProjection, this.gl.canvas);\n        const posFar = Camera.Unproject({ ...wndLeftTopEditorGridPosition, z: 1 }, this.ViewProjection, this.gl.canvas);\n\n        const intersection = Intersection.PlaneLine(\n            { a: 0, b: 0, c: 1, d: 0 },\n            { a: [posNear[0], posNear[1], posNear[2]], b: [posFar[0], posFar[1], posFar[2]] });\n\n        intersection[1] -= this.settings.MemoryLimit.Height * this.codeEditor.CellSize;\n\n        mat4.translate(\n            this.camera,\n            mat4.create(),\n            [this.camera[12] - intersection[0], this.camera[13] - intersection[1], this.camera[14]]);\n\n        this.codeEditor.ViewProjection = this.ViewProjection;\n        this.perspectiveLabelRenderer.ViewProjection = this.ViewProjection;\n    }\n}\n\nInversify.bind(AppService).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { inject, injectable } from \"inversify\";\n\nimport { AppSettings } from \"./AppSettings\";\nimport { InjectionToken } from \"./InjectionToken\";\n\nimport { Inversify } from \"@/Inversify\";\nimport { AsyncConstructable, AsyncConstructorActivator } from \"@/lib/DI/AsyncConstructorActivator\";\nimport { FontAtlas, FontAtlasBuilder } from \"@/lib/font/FontAtlasBuilder\";\nimport { NotNull } from \"@/lib/NotNull\";\nimport { UIIconAtlas } from \"@/lib/UI/UIIcon\";\n\n@injectable()\nexport class GlobalDependencies implements AsyncConstructable {\n    constructor(@inject(InjectionToken.WebGLRenderingContext) private gl: WebGL2RenderingContext) { }\n\n    async AsyncConstructor(): Promise<void> {\n        Inversify.get(AppSettings).ViewDimension = { Width: this.gl.canvas.width, Height: this.gl.canvas.height };\n\n        await this.SetupGlobalDependencies();\n    }\n\n    private async SetupGlobalDependencies(): Promise<void> {\n        Inversify\n            .bind<FontAtlas>(InjectionToken.FontAtlas)\n            .toConstantValue(FontAtlasBuilder.Build({ ASCIIRange: { Start: ' ', End: '~' }, Font: { Name: 'Roboto', Size: 72 } }));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.FontAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<FontAtlas>(InjectionToken.FontAtlas).Image));\n\n        Inversify\n            .bind<UIIconAtlas>(InjectionToken.IconAtlas)\n            .toConstantValue(await Inversify.getAsync(UIIconAtlas));\n\n        Inversify\n            .bind<WebGLTexture>(InjectionToken.IconAtlasTexture)\n            .toConstantValue(this.BuildTexture(Inversify.get<UIIconAtlas>(InjectionToken.IconAtlas).Image));\n    }\n\n    private BuildTexture(data: TexImageSource): WebGLTexture {\n        const texture = this.gl.createTexture() ?? NotNull('Failed to create texture');\n\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n\n        return texture;\n    }\n}\n\nInversify.bind(GlobalDependencies).toSelf().inSingletonScope().onActivation(AsyncConstructorActivator);\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, onMounted, onBeforeUnmount, ref } from 'vue';\n\ninterface Emits {\n  (e: 'contextReady', context: WebGL2RenderingContext): void;\n  (e: 'resize'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WebglCanvas',\n  props: {\n  width: { type: Number },\n  height: { type: Number }\n},\n  emits: [\"contextReady\", \"resize\"],\n  setup(__props, { emit }) {\n\nconst props = __props;\n\n\n\n\n\nconst innerWidth = ref(0);\nconst innerHeight = ref(0);\n\nconst canvas = ref<HTMLCanvasElement>();\nlet context: WebGL2RenderingContext | null = null;\n\nconst isPropsUsed = computed(\n  () => !(props.width === undefined && props.height === undefined)\n);\n\nconst width = computed(() => props.width ?? innerWidth.value);\nconst height = computed(() => props.height ?? innerHeight.value);\nconst widthCss = computed(() => isPropsUsed.value ? SizingToCss(width.value) : '100%');\nconst heightCss = computed(() => isPropsUsed.value ? SizingToCss(height.value) : '100%');\n\nonMounted(() => {\n  if (isPropsUsed.value) {\n    UpdateViewport();\n  } else {\n    OnResize();\n    window.addEventListener('resize', OnResize);\n  }\n\n  SetupContext();\n});\n\nonBeforeUnmount(() => {\n  if (!isPropsUsed.value) {\n    window.removeEventListener('resize', OnResize);\n  }\n});\n\nfunction UpdateViewport(): void {\n  if (canvas.value) {\n    canvas.value.width = width.value;\n    canvas.value.height = height.value;\n\n    context?.viewport(0, 0, width.value, height.value);\n  }\n}\n\nfunction OnResize(): void {\n  innerWidth.value = (canvas.value?.clientWidth ?? 0) * window.devicePixelRatio;\n  innerHeight.value = (canvas.value?.clientHeight ?? 0) * window.devicePixelRatio;\n\n  UpdateViewport();\n\n  emit('resize');\n}\n\nfunction SetupContext(): void {\n  if (canvas.value === undefined) {\n    console.error('Canvas element not found');\n    return;\n  }\n\n  context = canvas.value.getContext('webgl2', { stencil: true });\n\n  if (context === null) {\n    console.error(\"Can't initialize webgl2 context\");\n    return;\n  }\n\n  context.enable(context.CULL_FACE);\n\n  context.enable(context.DEPTH_TEST);\n\n  context.enable(context.BLEND);\n  context.blendFunc(context.SRC_ALPHA, context.ONE_MINUS_SRC_ALPHA);\n\n  emit('contextReady', context);\n}\n\nfunction SizingToCss(value: number): string {\n  return `${value}px`;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"canvas\", {\n    ref_key: \"canvas\",\n    ref: canvas,\n    style: _normalizeStyle({ width: widthCss.value, height: heightCss.value })\n  }, null, 4))\n}\n}\n\n})","import script from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WebglCanvas.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WebglCanvas.vue?vue&type=style&index=0&id=3248c29e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3248c29e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount } from 'vue';\n\nimport { AppService } from './AppService';\nimport { GlobalDependencies } from './GlobalDependencies';\nimport { InjectionToken } from './InjectionToken';\n\nimport { Inversify } from '@/Inversify';\nimport { BefungeSourceCodeCodec } from '@/lib/befunge/BefungeSourceCodeCodec';\nimport Webgl2Canvas from '@/lib/VueComponents/WebglCanvas.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CodeEditor',\n  props: { encoded: { required: false, type: String, default: '' } },\n  setup(__props) {\n\nconst props = __props;\n\nlet service!: AppService;\n\n\n\nonBeforeUnmount(() => service.Dispose());\n\nasync function OnContextReady(context: WebGL2RenderingContext): Promise<void> {\n  Inversify\n    .bind<WebGL2RenderingContext>(InjectionToken.WebGLRenderingContext)\n    .toConstantValue(context);\n\n  await Inversify.getAsync(GlobalDependencies);\n\n  service = await Inversify.getAsync(AppService);\n  service.Resize();\n\n  OnSharedCode();\n}\n\nfunction OnResize(): void {\n  service?.Resize();\n}\n\nfunction OnMouseMove(e: MouseEvent): void {\n  service?.OnMouseMove(e);\n}\n\nfunction OnMouseDown(e: MouseEvent): void {\n  service?.OnMouseDown(e);\n}\n\nfunction OnMouseUp(e: MouseEvent): void {\n  service?.OnMouseUp(e);\n}\n\nfunction OnWheel(e: WheelEvent): void {\n  service?.OnWheel(e);\n}\n\nfunction OnKeyDown(e: KeyboardEvent): void {\n  service?.OnKeyDown(e);\n}\n\nfunction OnTouchMove(e: TouchEvent): void {\n  service?.OnTouchMove(e);\n}\n\nfunction OnTouchStart(e: TouchEvent): void {\n  service?.OnTouchStart(e);\n}\n\nfunction OnTouchEnd(e: TouchEvent): void {\n  service?.OnTouchEnd(e);\n}\n\nfunction OnSharedCode() {\n  if (props.encoded.length > 0) {\n    try {\n      const sourceCode = BefungeSourceCodeCodec.Decode(props.encoded);\n      service.LoadSourceCodeToEditor(sourceCode);\n    } catch (e) {\n      if (e instanceof Error) {\n        service.Snackbar.ShowError(e.message);\n      }\n    }\n  }\n};\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(Webgl2Canvas, {\n    autofocus: \"\",\n    tabindex: \"0\",\n    onContextReady: OnContextReady,\n    onResize: OnResize,\n    onMousemove: OnMouseMove,\n    onMousedown: OnMouseDown,\n    onMouseup: OnMouseUp,\n    onWheelPassive: OnWheel,\n    onKeydown: OnKeyDown,\n    onTouchmove: OnTouchMove,\n    onTouchstart: OnTouchStart,\n    onTouchend: OnTouchEnd\n  }))\n}\n}\n\n})","import script from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CodeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nimport CodeEditor from '@/app/CodeEditor.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'CodeEditor',\n    props: true,\n    component: CodeEditor\n  },\n  {\n    path: '/share/:encoded',\n    name: 'Share',\n    props: true,\n    component: CodeEditor\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createStore } from 'vuex';\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n});\n","import 'reflect-metadata';\n\nimport { createApp } from 'vue';\n\nimport '@fontsource/roboto/500.css';\n\nimport App from './App.vue';\nimport './registerServiceWorker';\nimport router from './router';\nimport store from './store';\n\nasync function Main(): Promise<void> {\n    // Explicitly load the font otherwise it not be visible for the background canvas that used for generating a bitmap font\n    const roboto = new FontFace('Roboto', `url(${process.env.BASE_URL}fonts/roboto-latin-500-normal.3170fd9a.woff2)`);\n    await roboto.load();\n\n    createApp(App).use(store).use(router).mount('#app');\n}\n\nMain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbefunge\"] = self[\"webpackChunkbefunge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4216); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","register","ready","console","log","registered","cached","updatefound","updated","offline","error","MouseButtons","MathUtil","static","value","min","max","Math","x","y","tolerance","Number","EPSILON","abs","points","length","Error","n","p","p0","p1","sqrt","SqrDistance","pow","OnSelectStrategy","constructor","releaseTimeout","maxDistance","_defineProperty","OnMouseDown","e","this","mouseDownStart","Date","now","lastMouseDownPosition","offsetX","offsetY","OnMouseUp","distance","vec2","elapsedTime","isSelect","IsSelect","TouchPan","moveCamera","OnTouchStart","touch","targetTouches","touchPrev","id","identifier","pageX","pageY","OnTouchMove","item","movementX","window","devicePixelRatio","movementY","TouchZoom","zoomStart","zoomProgress","UpdateTrace","OnTouchEnd","forEach","prevTouch","prev","find","every","trace","preventDefault","map","dist0","Distance","dist1","AppEventTransformer","touchPan","OnCameraMove","touchZoom","OnTouchZoomStart","zoom","OnTouchZoom","OnMouseMove","buttons","Left","selectStrategy","OnSelect","OnWheel","OnStepZoom","__decorate","injectable","Inversify","Container","AppSettings","PI","Width","Height","DevicePixelRatio","bind","toSelf","inSingletonScope","InjectionToken","WebGLRenderingContext","Symbol","FontAtlas","IconAtlas","FontAtlasTexture","IconAtlasTexture","FontGlyphCollectionFactory","HeatmapGridRendererFactory","HeatmapExtensionFactory","UITextListRendererFactory","CodeEditorServiceInputReceiverFactory","UIEditableTextListRendererFactory","UILabelRendererTargetName","Perspective","Unique","AppCommandInjectionToken","EditCellCommandFactory","EditCellsRegionFactory","EditCellCommandPostAction","MoveNext","EditCellsRegionCommandPostAction","StayLeftTop","HeadlineControlsLayout","settings","POSITIVE_INFINITY","width","height","Watch","component","Observable","Attach","ComponentUpdated","components","push","Position","position","AbsolutePosition","absolutePosition","Dimension","dimension","Scale","skipUpdates","ViewDimension","margin","targetScale","scale","MaintainPositionDimension","relativeExtremum","Extremum","absoluteExtremum","flatMap","MapComponent","__param","inject","_a","Object","Intersection","plane","line","d0","vec3","a","b","c","d","d1","t","intersection","rectangle","point","aTopRight","bTopRight","DebugControlsLayout","headlineLayout","DebugGroup","group","debugGroup","DebugGroupUpdated","queueMicrotask","RecalculatePosition","debugGroupDimension","RangeRange","verticalPosition","_b","IllegalInstructionException","Where","Opcode","super","PCDirection","ObservablePriority","Low","NEGATIVE_INFINITY","Normal","High","ObservableController","observer","options","priority","descriptor","observers","MaintainSorted","splice","findIndex","DetachAll","Notify","sender","o","temp","async","AsyncConstructorActivator","_context","constructable","AsyncConstructor","RectangleRowPacker","Add","rectangles","Pack","idealArea","maxWidth","rect","estimatedWidth","ceil","sort","pack","maxHeightInRow","target","items","NotNull","msg","TextureAtlas","Image","ClonePackage","NormalizePackage","LookupUV","found","undefined","UndefinedUV","A","B","uv","TextureAtlasBuilder","filename","images","packer","img","SetupCanvas","packed","CreateImage","context","drawImage","getImageData","canvas","document","createElement","getContext","src","image","Promise","resolve","reject","onload","onerror","UIIcon","UIIconAtlas","BuildAtlas","ArrowLeft","atlas","ArrowRight","aspectRatio","ExtractAspectRatio","ArrowUp","ArrowDown","ArrowThinLeft","ArrowThinRight","ArrowThinDown","ArrowThinUp","Undo","Redo","iconExtras","builder","icons","Debugger","Open","Save","Play","PlayDebug","ExclamationCircle","ExclamationTriangle","CheckCircle","Breakpoint","ArrowThinAll","Delete","Stop","Heatmap","Settings","Select","Copy","Cut","Paste","EditDelete","Share","Input","Output","icon","Build","HorizontalAnchor","VerticalAnchor","onActivation","UIObservablePositioningGroup","anchor","vertical","Bottom","horizontal","Resize","observable","AppendChild","childs","RemoveChild","removeIdx","indexOf","get","HorizontalPositionRespectAnchor","VerticalPositionRespectAnchor","MaintainExtremum","rightTop","Destroy","extremum","viewWidth","Right","Middle","viewHeight","Top","ArrayHelper","array","comparator","UIObservableAlert","zIndex","text","style","Offset","deleter","parent","parentDetacher","isDestroyed","Uninitialize","parentPosition","ZIndex","Icon","Text","Style","IsDestroyed","EnumSize","keys","MemoryPoolTracker","capacity","NoFree","pool","Array","from","_","nextFree","Allocate","size","HasFreeSlot","freeSlot","InUse","slot","growthFactor","OnExtend","Capacity","Free","index","shrinkFactor","OnShrink","GatherInUseIndices","Shrink","inUse","PrimitiveBuilder","attributes","leftBottom","leftTop","rightBottom","attr","isArray","LeftBottom","LeftTop","RightTop","RightBottom","borderWidth","borderTop","AABBRectangle","borderRight","borderBottom","borderLeft","ShaderProgram","gl","Map","instance","createProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","attachShader","url","fetch","Link","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","Use","useProgram","SetUniform3fv","name","uniform3fv","GetUniformLocation","SetUniform2fv","uniform2fv","SetUniform4fv","uniform4fv","SetUniform1f","uniform1f","SetUniform1i","uniform1i","SetUniform2iv","uniform2iv","SetUniformMatrix4fv","uniformMatrix4fv","GetAttributeLocation","loc","getAttribLocation","Dispose","uniformCache","getUniformLocation","set","TypeSizeResolver","Sizes","WebGL2RenderingContext","BYTE","Int8Array","BYTES_PER_ELEMENT","SHORT","Int16Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","FLOAT","Float32Array","HALF_FLOAT","INT","Int32Array","UNSIGNED_INT","Uint32Array","INT_2_10_10_10_REV","UNSIGNED_INT_2_10_10_10_REV","PrimitivesRenderer","primitiveDescription","Setup","SetupAttributes","UploadAttributes","attrib","attributeSetCount","componentsPerAttributeSet","bindBuffer","ARRAY_BUFFER","vbo","bufferData","DYNAMIC_DRAW","UpdateComponentAttributes","attriutes","offset","bufferSubData","Resolve","PrimitiveAttributes","buffer","indicesPerPrimitive","Draw","bindVertexArray","vao","drawArrays","basePrimitiveType","deleteBuffer","deleteVertexArray","createBuffer","createVertexArray","FRAGMENT_SHADER","fragment","VERTEX_SHADER","vertex","stride","reduce","location","enableVertexAttribArray","vertexAttribPointer","normalized","unmanaged","UIAlertIconComponent","UIAlertPanelComponent","UIAlertIconRenderer","floatSize","FUIALertIcon","VUIAlertIcon","TRIANGLES","IndicesPerPrimitive","AttributesPerComponent","ViewProjection","mat","Attributes","UIAlertRenderer","alertIcon","iconAtlas","iconAtlasTexture","FUIAlertPanel","VUIAlertPanel","vertexAttributesTracker","renderer","initialCapacity","inUseIndices","panelAttrs","fill","buttonOutlineAttrs","attribOffset","alerts","alert","idx","extendedCapacity","extendedPanelAttrs","extendedAlertIconAttrs","Create","alertText","uiRenderer","CreateLabel","panelContentZOffset","lineHeight","StyleRange","color","iconSideLength","iconMargin","UpdateComponent","bindTexture","TEXTURE_2D","UIRenderer","Alerts","label","LabelPosition","LineHeight","UpdateAttributes","ExtractPanelAttributes","emptyAttrs","ExtractIconAttributes","ZFar","zFarIncluded","fillColor","sideLength","AlertIconSideLength","iconUV","toDestroyIdx","_c","_d","WebGLTexture","_e","UIObservableEditableTextList","textList","CreateTextList","OnVanish","onVanish","OnInput","keyCode","key","charCodeAt","toDelete","slice","BorderWidth","BorderWdith","Visible","visible","onUpdate","HasFocus","hasFocus","Focus","Blur","ScrollToTop","UIEditableTextListCursorComponent","UIEditableTextListRenderer","FEditableTextListCursor","VEditableTextListCursor","inTransientScope","toFactory","ctx","container","UIObservableIconButton","iconStyle","touchCallback","Destroyed","destroyed","Disable","disabled","originIconStyle","DisabledIconColor","Touch","UninitializedTag","UIIconButtonComponent","UIIconButtonOutlineComponent","UIButtonOutlineRenderer","FUIIconButtonOutline","VUIIconButtonOutline","UIIconButtonRenderer","FUIIconButton","VUIIconButton","outline","buttonAttrs","iconButtons","btn","extendedButtonAttrs","extendedOutlineAttrs","button","TouchProxy","origin","alreadyTouchedIdx","touchStart","animation","originFillColor","timestamp","TouchAnimation","lightingDuration","darkeningDuration","brightFactor","notFinished","finished","anim","elapsed","lightingProgress","bright","darkeningProgress","IconButtons","UpdateContentAttributes","ResetOutlineAttributes","UpdateOutlineAttributes","ExtractContentAttributes","ExtractOutlineAttributes","IsUndefinedUV","ExtractContentAttributesWide","ExtractContentAttributesTall","iconWidth","segmentWidth","leftSegmentAttributes","iconAttributes","rightSegmentAttributes","iconHeight","segmentHeight","bottomSegmentAttributes","topSegmentAttributes","AABBFrame","outlineColor","UIObservableLabel","glyphAllocator","symbolsStyle","ResizeSymbolStyles","AdjustPoolMemory","begin","end","ReplaceOffset","old","offsets","UpdateTextDimension","Offsets","PrintableTextLength","split","filter","char","NonPrintableSymbols","includes","PrintableOffsetLength","NonPrintableOffset","ExtendPoolMemory","extraMemoryNeeded","ShrinkPoolMemory","excessOffsets","released","AddExtraNonPrintableOffsets","RemoveExcessNonPrintableOffsets","AdjustNonPrintableOffsets","extraNonPrintableOffsets","removed","charIdx","offsetStartIdx","symbol","nonPrintableOffsetIdx","ExtendSymbolStyles","DefaultSymbolStyle","ShrinkSymbolStyles","CatchBlock","fn","args","CatchFn","CatchValue","ExceptionTrap","AsyncCatchBlock","AsyncExceptionTrap","startSymbolCode","Columns","Rows","GlyphCount","symbolCode","glyphIdx","column","row","floor","glyphWidth","glyphHeight","FontAtlasBuilderImpl","startCode","ASCIIRange","Start","endCode","End","glyphCount","columnCount","rowCount","glyphCellSize","GlyphCellSize","FillCanvasWithGlyphs","font","Font","Size","Name","fillStyle","col","halfGlyphCellSize","cellCenter","String","fromCharCode","drawPosition","CenteredToBaseLine","fillText","pos","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","FontAtlasBuilder","FontGlyphCollection","library","Lookup","blueprint","FontGlyphCollectionBuilderImpl","fontAtlas","BuildBlueprints","lib","atlasUV","extraHeight","AtlasCellToGlyphUV","baselineOffset","fontBoundingBoxDescent","cell","glyph","relA","relB","uvWidth","uvHeight","SelfBind","method","inRequestScope","UILabelComponent","UILabelRenderer","UILabelRenderer_1","fontTexture","fontGlyphCollectionFactory","FUILabel","VUILabel","labelAttrs","oldOffset","labels","delete","extendedLabelAttrs","Labels","Set","values","AllocateGlyph","GlyphFree","fontGlyphCollection","lines","SplitString","minBaseOffset","MinBaseOffset","startBaseOffset","BaseStartOffset","yStart","startIdx","glyphBlueprint","LookupGlyph","comp","maxBaselineOffsetSymbol","Min","Try","str","lineStart","trimEnd","lineBreaks","whenTargetIsDefault","whenTargetNamed","UIObservableTextList","labelRenderer","UpdateScrollControlsPresence","scroll","scrollControls","scrollTopButton","scrollBottomButton","IsContentOverflow","ScrollAligned","MinScroll","CreateTopScrollButton","CreateBottomScrollButton","ScrollButtonX","ScrollBottomButtonY","ScrollTopButtonY","scrollButtonDimension","CreateButton","scrollButtonStyle","scrollButtonIconColor","_component","MaxScroll","Clamp","UpdateScrollButtonDisability","UITextListBorderComponent","UITextListStencilComponent","UITextListBorderRenderer","FTextListBorder","VTextListBorder","UITextListRenderer","FUITextListStencil","VUITextListStencil","borderRenderer","scencilRectAttrs","borderAttrs","extendedBorderAttrs","enable","STENCIL_TEST","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","EQUAL","clear","STENCIL_BUFFER_BIT","disable","UpdateStencilAttributes","UpdateBorderAttributes","attrs","named","iconButtonRenderer","alertRenderer","labelsRenderer","uiTextListRendererFactory","uiEditableTextListRendererFactory","CreateAlert","viewProjection","uiTextListRenderers","UIObservableTextListDeleter","CreateEditableTextList","editableTextList","UIObservableEditableTextListDeleter","uiEditableTextLists","focusedEditableTextList","TouchEditableTextList","touchResult","TouchAlerts","TouchButtons","TouchLabels","intersected","AABBRectanglePoint","Max","desc","projection","_f","DebugControls","_class","layout","buttonSideLength","executeButton","DebugControls_1","DefaultButtonFillColor","DefaultButtonOutlineColor","DefaultButtonIconColor","_sender","executeObservable","debugButton","debugObservable","breakpointMenuButton","BreakpointButtonIconColor","ToggleBreakpointMenuButton","heatmapButton","ProfilerButtonIconColor","ToggleHeatmap","breakpointMenuGroup","debugMenuGroup","DebugMode","debugMode","mode","DebugModeButtonIconColor","IsHeatmapShown","isHeatmapShown","Execute","Debug","CellBreakopint","cellBreakpointObservable","CellBreakpointDelete","cellBreakpointDeleteObservable","heatmapObservable","isBreakpointMenuOpen","CloseCellBreakpointDirectionMenu","ShowCellBreakpointDirectionMenu","totalButtons","DeactivateButton","NotifyWithPCLocationCondition","Direction","Up","Down","NotifyWithCellBreakpointDeactivation","direction","feedback","isShown","ToggleButtonOutlineColor","EditControls","buttonIconColor","btnSideLength","selectButton","selectObservable","cutButton","cutObservable","copyButton","copyObservable","pasteButton","pasteObservable","deleteButton","deleteObservable","SelectObservable","CutObservable","CopyObservable","PasteObservable","DeleteObservable","EditDirectionControls","buttonMargin","buttonWidth","btnHeight","editDirectionControls","left","EditDirectionControls_1","CurrentDirectionInactiveIconColor","UpdateEditDirection","EditionDirection","up","right","CurrentDirrectionActiveIconColor","down","currentDirectionControl","EditDirectionObservable","editDirectionObservable","ForceEditDirection","control","Boundaries","lb","rt","FileControls","openButtonIconColor","saveButtonIconColor","settingsButtonIconColor","openButton","openFromDiskObservable","saveButton","saveToDiskObservable","shareButton","shareObservable","settingsButton","openSettingsObservable","ShareDisabled","OpenFromDiskDisabled","OpenFromDiskObservable","SaveToDiskObservable","ShareObservable","OpenSettingsObservable","AppHistory","Push","command","CanRedo","history","cursor","updateObservable","CanUndo","Apply","Reset","UpdateObservable","HistoryControls","undoButton","undoObservable","redoButton","redoObservable","UpdateButtonsAvailability","UndoObservable","RedoObservable","Lock","Unlock","IOControls","btnIconColor","textListHeight","inputButton","SwitchTab","outputButton","outputTextList","maxPanelWidth","inputEditableTextList","inputTab","NewLineFormatter","PanelWidth","widthToFit","RetrieveFontGlyphCollection","strArr","padding","join","SnackbarControls","Show","snackbar","Hide","LimitToViewportWidth","hideTimer","setTimeout","showTime","alertWidth","ShowError","contentColor","ShowWarning","ShowInformation","ShowSuccess","clearTimeout","EscapeString","Replacer","StackControls","stackTextList","Stack","stack","reverse","OverlayService","snackbarControls","fileControls","historyControls","editControls","debugControls","stackControls","ioControls","BuildStickyProjection","Snackbar","stickyProjection","mat4","ZNear","_g","_h","_j","_k","SourceCodeMemory","Initialize","ctr","nonEmptyCells","Read","ptr","Write","emptyValue","actual","limit","Clone","Empty","PointerArithmetics","Target","EmptyExtension","Unload","CodeCellComponent","EditorGridRenderer","fontAtlasTexture","gridStride","FGrid","VGrid","SetupRenderer","ResizeGrid","vertexList","MemoryLimit","BuildCell","CellSize","cellAttrs","symbolUV","UVOffset","UVStartOffset","CodeCellOutlineComponent","EditorGridCellsOutlineRenderer","gridRenderer","FCellsOutline","VCellsOutline","editorOutline","gridOutlineWidth","gridOutlineColor","rowAttrs","outlineWidth","cellOutlineColor","colAttrs","SelectionComponent","SelectionRenderer","editorGridRenderer","selectionStride","FSelection","VSelection","SelectionRenderer_1","SelectRegion","region","FlipY","OutOfGrid","selectionIdx","selected","r","colorOffset","componentsPerVertex","colorStart","selection","Unselect","UnselectRegion","copy","CodeEditorRenderer","editorGridCellsOutlineRenderer","selectionRenderer","Clear","TooltipPosition","CodeEditorTooltipService","codeEditorRenderer","perspectiveLabelRenderer","Tooltip","tooltipIdx","FindIndex","ReleaseTooltip","tooltips","BuildReleaser","cellSize","ReleaseAll","Array2D","provider","Get","data","CoordsToIndex","Update","updater","mapped","IndexToCoord","ForEach","Every","Equals","arr","EditableTarget","editorSourceCode","editCellCommandFactory","cellMoveNextPostActionFactory","editCellsRegionCommandFactory","regionMoveNextPostActionFactory","regionStayLeftTopPostActionFactory","lt","rb","IsSingleCell","editableRegion","editableCellStyle","CellInput","CellInputSingle","CellInputRegion","editionDirection","RegionDimension","oldValue","WithProvider","IsLocationValid","ContentString","sourceCode","InsertSourceCode","linesOfCode","fragmentWidth","fragmentHeight","newValue","interfaces","AutoFactory","Camera","viewport","vec","z","v","vec4","invertViewProj","movement","posNear0","Unproject","posFar0","intersection0","PlaneLine","posNear1","posFar1","intersection1","delta","SelectCellBehaiver","editableCell","SelectCellsRegion","firstTouch","CodeEditorService","overlay","tooltipService","touchBehavior","OnSetEditableRegion","OnCut","OnCopyEditableRegion","OnPaste","OnDelete","EditableCellLostObservable","editableCellLostObservale","EditableCellDirection","LoadExtension","extension","UnloadExtension","EditCell","HideAllTooltips","posNear","posFar","nextBehaivor","SetEditableCell","IsEditableCellVisible","SetEditableRegion","proj","EditableCell","EditableCellRect","lbNDC","rtNDC","navigator","clipboard","writeText","CPUImpl","memory","io","instructions","inst","instructionSet","Code","PC","Location","pcLocation","pcDirection","NextInstructionCode","StackPush","StackPop","ret","pop","StackDuplicate","StackSwap","last","dir","ExecuteNext","instruction","isStringMode","KnownInstruction","SkipNext","Move","StringModeToggle","ReadMemory","WriteMemory","WriteIO","OutputWrite","ReadCharacter","InputReadCharacter","ReadNumber","InputReadNumber","Halt","isHalted","IsHalted","cpu","Bridge","Divide","trunc","EndProgramm","GreatherThan","HoriontalIf","InputASCII","InputInteger","MemoryRead","MemoryWrite","Modulo","Multiply","Negation","NoOperation","_cpu","PCDirectionDown","PCDirectionLeft","PCDirectionRandom","random","PCDirectionRight","PCDirectionUp","PrintASCII","PrintInteger","toString","StackPushDigit","digit","Subtract","ToggleStringMode","VerticalIf","IOPort","InputWrite","input","shift","numberEnd","parseInt","HasInput","output","OutputRead","HasOutput","MemoryWriteInstructionInterceptor","interceptor","Befunge","memoryLimit","OnMemoryWrite","LoadExecutable","code","IsMemoryLimitDynamic","memoryRequirements","ExecutableMemoryLimit","SetInput","Run","RunFor","timeout","startTime","instructionsSkipPerTimeoutCheck","instructionsExecuted","RunNext","CollectOutput","CollectOutputUntil","maxLength","readed","AttachDebugger","AttachCPU","AttachProfiler","profiler","AddMemoryWriteInterceptor","memoryWriteInterceptors","rmIdx","NextInstruction","InstructionsExecuted","maxRowLength","maxColumnLength","rowLength","ComparsionCondition","noDebug","triggered","BreakpointsCheck","breakpoints","SetBreakpoint","brk","pcLocationBrk","Value","stackBrk","BreakpointReleaser","PCBreakpoints","brks","toRemove","BreakpointCheckPC","BreakpointCheckStack","top","Condition","Equal","Less","LessEqual","Greater","GreaterEqual","Profiler","CellHeatmapFor","heatmap","BefungeToolbox","Interpreter","interpreter","debugger","DebuggingService","codeEditor","befungeToolbox","next","DebugCodeAction","cond","OnCellBreakpointAction","OnCellBreakpointDelete","prevEditableCell","hasBrk","cellBreakpoints","some","activeCellBreakpoints","activeBreakpointColor","inactiveBreakpointColor","OnCellInput","UploadBreakpointsToDebugger","debug","executionResult","ExecutionTimeout","message","Interrupt","RestoreCellBreakpointsSelection","MaxOutputLength","releaser","SetCellBreakpoint","existIdx","condition","brkRemove","activeBrkIdx","ExecutionService","HeatmapCellComponent","HeatmapGridRenderer","FHeatmapGrid","VHeatmapGrid","HeatmapGridRendererBuilder","uvCellSize","uvCoord","HeatmapExtension","heatmapGridRenderer","tooltipReleasers","release","HeatmapExtensionBuilder","heatmapGridRendererFactory","releasers","DrawHitsOnCell","colors","HitsToColor","hits","maxHits","lowHitsColor","hitsColorsDiff","highHitsColor","HeatMapGridFactory","stats","ProfillingService","heatmapExtensionFactory","shown","BuildHeatmap","HideHeatmap","CodeExecutionService","executionService","debuggingService","profillingService","Execution","Debugging","Profilling","CodeEditorServiceInputReceiver","codeExecutionService","DebugRenderer","VDebugRenderer","FDebugRenderer","LINES","SmoothCameraMove","camera","destination","viewProjectionFetcher","IsDone","isDone","fract","duration","progress","UnprojectMovement","SmoothCameraZoom","boundary","DecodingErrorException","BefungeSourceCodeCodec","decoded","btoa","encoded","atob","DOMException","ModuloPointerArithmetics","ArrayMemory","pointerArithmetics","IsPointerOutOfBound","PointerToIndex","resized","CopyMemoryTo","dst","copyingWidth","copyingHeight","SourceCodeValidityAnalyser","sourceCodeLength","NextIllegalInstruction","illegalInstructionIdx","findLastIndex","validSymbols","start","_x","ValidSymbols","RegistrationCollisionResolver","EffectRunner","defaultPolicy","rule","Register","effect","policy","effects","findLast","Replace","Transformation","movable","betweenByX","Between","betweenByY","distanceToTop","distanceToBottom","distanceToLeft","distanceToRight","corners","DistanceDiff","closest","diff","IsInputReceiver","EditCellCommand","codeEditorService","editDirection","postAction","OldValue","NewValue","EditDirection","MoveNextAction","codeFlowEditDirection","FollowCodeFlowHelper","GetNextEditableCell","overriddenDirection","nextEditableCell","toAutoFactory","EditCellsRegionCommand","Region","StayLeftTopAction","AppService","effectRunner","codeEditorServiceInputReceiverFactory","ZCameraBoundary","clearColor","COLOR_BUFFER_BIT","BuildProjection","FocusCameraAtEditor","inFocus","inFocusOnVanishReleaser","debugRenderer","debugPoints","FollowEditableCell","OpenFileFromDisk","SaveSourceToDisk","ShareSourceCode","OpenSettings","ControlsResponseToHeatmapActivation","OnSourceCodeChanged","SwitchFocus","smoothCameraZoomEffect","deltaY","touchZoomStartZ","OnKeyDown","AspectRatio","Fovy","view","isRunning","requestAnimationFrame","DrawFrame","lastFrameTime","DEPTH_BUFFER_BIT","fileHandle","showOpenFilePicker","multiple","kind","openedFilename","file","getFile","validator","firstProblem","remainingProblems","problemMsg","LoadSourceCodeToEditor","router","replace","showSaveFilePicker","suggestedName","stream","createWritable","write","SourceCodeString","close","sourceString","Encode","params","ResetSourceCodeEditor","cellRect","ndcDiagonal","ndcStickToEdgeMovement","MoveRectangleToPlaceInsideRectangle","finalMovement","ndcDistanceToLeft","ndcDistanceToRight","ndcDistanceToBottom","ndcDistanceToTop","uiLeftTopEditorGridPosition","wndLeftTopEditorGridPosition","GlobalDependencies","SetupGlobalDependencies","toConstantValue","BuildTexture","getAsync","texture","createTexture","activeTexture","TEXTURE0","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","_defineComponent","__name","props","emits","setup","__props","emit","innerWidth","ref","innerHeight","isPropsUsed","computed","widthCss","SizingToCss","heightCss","UpdateViewport","OnResize","clientWidth","clientHeight","SetupContext","stencil","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onMounted","addEventListener","onBeforeUnmount","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","_normalizeStyle","required","default","service","OnContextReady","OnSharedCode","Decode","Webgl2Canvas","autofocus","tabindex","onContextReady","onResize","onMousemove","onMousedown","onMouseup","onWheelPassive","onKeydown","onTouchmove","onTouchstart","onTouchend","routes","path","CodeEditor","createRouter","createWebHistory","process","createStore","state","getters","mutations","actions","modules","Main","roboto","FontFace","load","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","notFulfilled","Infinity","i","fulfilled","j","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}